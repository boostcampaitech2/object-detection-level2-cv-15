2021-10-10 05:51:17,335 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]
CUDA available: True
GPU 0: Tesla V100-SXM2-32GB
CUDA_HOME: None
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.5.3
MMCV: 1.3.14
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.15.1+6eb41ac
------------------------------------------------------------

2021-10-10 05:51:17,890 - mmdet - INFO - Distributed training: False
2021-10-10 05:51:18,428 - mmdet - INFO - Config:
model = dict(
    type='CascadeRCNN',
    backbone=dict(
        type='ResNeXt',
        depth=101,
        groups=32,
        base_width=4,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        style='pytorch',
        init_cfg=dict(
            type='Pretrained', checkpoint='open-mmlab://resnext101_32x4d')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 0.7, 1.0, 1.5, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),
    roi_head=dict(
        type='CascadeRoIHead',
        num_stages=3,
        stage_loss_weights=[1, 0.5, 0.25],
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=[
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.05, 0.05, 0.1, 0.1]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.033, 0.033, 0.067, 0.067]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))
        ]),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=0,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=2000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=[
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.6,
                    neg_iou_thr=0.6,
                    min_pos_iou=0.6,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.7,
                    min_pos_iou=0.7,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False)
        ]),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'CocoDataset'
data_root = '/opt/ml/detection/dataset/'
classes = [
    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',
    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'
]
train_json = 'train_1.json'
val_json = 'val_1.json'
test_json = 'test.json'
img_norm_cfg = dict(
    mean=[123.651, 117.4, 110.08], std=[54.035, 53.37, 54.784], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.651, 117.4, 110.08],
        std=[54.035, 53.37, 54.784],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1024, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.0),
            dict(
                type='Normalize',
                mean=[123.651, 117.4, 110.08],
                std=[54.035, 53.37, 54.784],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='/opt/ml/detection/dataset/train_1.json',
        img_prefix='/opt/ml/detection/dataset/',
        classes=[
            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'
        ],
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.651, 117.4, 110.08],
                std=[54.035, 53.37, 54.784],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/opt/ml/detection/dataset/val_1.json',
        img_prefix='/opt/ml/detection/dataset/',
        classes=[
            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'
        ],
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1024, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip', flip_ratio=0.0),
                    dict(
                        type='Normalize',
                        mean=[123.651, 117.4, 110.08],
                        std=[54.035, 53.37, 54.784],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/opt/ml/detection/dataset/test.json',
        img_prefix='/opt/ml/detection/dataset/',
        classes=[
            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'
        ],
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1024, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip', flip_ratio=0.0),
                    dict(
                        type='Normalize',
                        mean=[123.651, 117.4, 110.08],
                        std=[54.035, 53.37, 54.784],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=30)
checkpoint_config = dict(interval=1)
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
index = 1
wandb_runname = 'mmdet_K-Fold_1'
log_config = dict(
    interval=50,
    hooks=[
        dict(type='TextLoggerHook'),
        dict(
            type='WandbLoggerHook',
            interval=1000,
            init_kwargs=dict(
                project='garbage_ObjectDetection',
                entity='falling90',
                name='mmdet_K-Fold_1'))
    ])
work_dir = './work_dirs/k-fold_1'
gpu_ids = range(0, 1)

2021-10-10 05:51:19,710 - mmdet - INFO - initialize ResNeXt with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://resnext101_32x4d'}
2021-10-10 05:51:19,932 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2021-10-10 05:51:19,959 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2021-10-10 05:51:19,968 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-10 05:51:20,289 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-10 05:51:20,611 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.conv1.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.conv2.weight - torch.Size([128, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.conv3.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.conv2.weight - torch.Size([128, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.conv3.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.conv2.weight - torch.Size([128, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.conv3.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.conv1.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.conv2.weight - torch.Size([256, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.conv3.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.conv2.weight - torch.Size([256, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.conv3.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.conv2.weight - torch.Size([256, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.conv3.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.conv2.weight - torch.Size([256, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.conv3.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.6.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.7.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.8.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.9.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.10.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.11.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.12.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.13.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.14.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.15.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.16.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.17.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.18.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.19.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.20.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.21.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.conv2.weight - torch.Size([512, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.conv3.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer3.22.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.conv2.weight - torch.Size([1024, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.conv3.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.conv1.weight - torch.Size([1024, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.conv2.weight - torch.Size([1024, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.conv3.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.conv1.weight - torch.Size([1024, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.conv2.weight - torch.Size([1024, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.conv3.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_32x4d 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([5, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([20, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([20]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_cls.weight - torch.Size([11, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.fc_cls.bias - torch.Size([11]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_reg.weight - torch.Size([4, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.0.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.fc_cls.weight - torch.Size([11, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.fc_cls.bias - torch.Size([11]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.1.fc_reg.weight - torch.Size([4, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.1.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.fc_cls.weight - torch.Size([11, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.fc_cls.bias - torch.Size([11]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.2.fc_reg.weight - torch.Size([4, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.2.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 
2021-10-10 05:51:24,592 - mmdet - INFO - Start running, host: root@b4c81fddccab, work_dir: /opt/ml/detection/mmdetection/work_dirs/k-fold_1
2021-10-10 05:51:24,592 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
after_run:
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
2021-10-10 05:51:24,593 - mmdet - INFO - workflow: [('train', 1)], max: 30 epochs
2021-10-10 05:53:03,021 - mmdet - INFO - Epoch [1][50/488]	lr: 9.890e-04, eta: 7:28:18, time: 1.844, data_time: 0.072, memory: 25184, loss_rpn_cls: 0.4962, loss_rpn_bbox: 0.0431, s0.loss_cls: 0.4697, s0.acc: 90.1172, s0.loss_bbox: 0.1036, s1.loss_cls: 0.1719, s1.acc: 91.4004, s1.loss_bbox: 0.0251, s2.loss_cls: 0.1200, s2.acc: 86.4399, s2.loss_bbox: 0.0062, loss: 1.4359
2021-10-10 05:54:34,199 - mmdet - INFO - Epoch [1][100/488]	lr: 1.988e-03, eta: 7:24:20, time: 1.824, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.1528, loss_rpn_bbox: 0.0464, s0.loss_cls: 0.3297, s0.acc: 93.1021, s0.loss_bbox: 0.1622, s1.loss_cls: 0.1047, s1.acc: 96.3848, s1.loss_bbox: 0.0608, s2.loss_cls: 0.0325, s2.acc: 98.2251, s2.loss_bbox: 0.0105, loss: 0.8996
2021-10-10 05:56:03,521 - mmdet - INFO - Epoch [1][150/488]	lr: 2.987e-03, eta: 7:19:00, time: 1.786, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.1251, loss_rpn_bbox: 0.0482, s0.loss_cls: 0.3103, s0.acc: 92.6904, s0.loss_bbox: 0.1564, s1.loss_cls: 0.1176, s1.acc: 95.0405, s1.loss_bbox: 0.0815, s2.loss_cls: 0.0403, s2.acc: 97.2495, s2.loss_bbox: 0.0204, loss: 0.8999
2021-10-10 05:57:34,383 - mmdet - INFO - Epoch [1][200/488]	lr: 3.986e-03, eta: 7:17:27, time: 1.817, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.1080, loss_rpn_bbox: 0.0458, s0.loss_cls: 0.3363, s0.acc: 91.7686, s0.loss_bbox: 0.1745, s1.loss_cls: 0.1396, s1.acc: 93.2788, s1.loss_bbox: 0.1092, s2.loss_cls: 0.0536, s2.acc: 95.5278, s2.loss_bbox: 0.0375, loss: 1.0046
2021-10-10 05:59:04,555 - mmdet - INFO - Epoch [1][250/488]	lr: 4.985e-03, eta: 7:15:15, time: 1.803, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0861, loss_rpn_bbox: 0.0443, s0.loss_cls: 0.3612, s0.acc: 91.2847, s0.loss_bbox: 0.1734, s1.loss_cls: 0.1533, s1.acc: 92.5396, s1.loss_bbox: 0.1138, s2.loss_cls: 0.0616, s2.acc: 94.3804, s2.loss_bbox: 0.0456, loss: 1.0392
2021-10-10 06:00:36,841 - mmdet - INFO - Epoch [1][300/488]	lr: 5.984e-03, eta: 7:14:58, time: 1.846, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0788, loss_rpn_bbox: 0.0435, s0.loss_cls: 0.3602, s0.acc: 91.3301, s0.loss_bbox: 0.1724, s1.loss_cls: 0.1529, s1.acc: 92.6436, s1.loss_bbox: 0.1139, s2.loss_cls: 0.0599, s2.acc: 94.3994, s2.loss_bbox: 0.0445, loss: 1.0261
2021-10-10 06:02:06,512 - mmdet - INFO - Epoch [1][350/488]	lr: 6.983e-03, eta: 7:12:33, time: 1.793, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0723, loss_rpn_bbox: 0.0428, s0.loss_cls: 0.3555, s0.acc: 91.0952, s0.loss_bbox: 0.1664, s1.loss_cls: 0.1643, s1.acc: 91.6983, s1.loss_bbox: 0.1253, s2.loss_cls: 0.0670, s2.acc: 93.3675, s2.loss_bbox: 0.0529, loss: 1.0464
2021-10-10 06:03:36,280 - mmdet - INFO - Epoch [1][400/488]	lr: 7.982e-03, eta: 7:10:25, time: 1.795, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0670, loss_rpn_bbox: 0.0433, s0.loss_cls: 0.3445, s0.acc: 91.3574, s0.loss_bbox: 0.1539, s1.loss_cls: 0.1614, s1.acc: 91.7377, s1.loss_bbox: 0.1214, s2.loss_cls: 0.0683, s2.acc: 93.0821, s2.loss_bbox: 0.0565, loss: 1.0163
2021-10-10 06:05:07,946 - mmdet - INFO - Epoch [1][450/488]	lr: 8.981e-03, eta: 7:09:25, time: 1.833, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0646, loss_rpn_bbox: 0.0416, s0.loss_cls: 0.3402, s0.acc: 91.2451, s0.loss_bbox: 0.1517, s1.loss_cls: 0.1615, s1.acc: 91.4974, s1.loss_bbox: 0.1244, s2.loss_cls: 0.0697, s2.acc: 92.7020, s2.loss_bbox: 0.0593, loss: 1.0129
2021-10-10 06:06:16,304 - mmdet - INFO - Saving checkpoint at 1 epochs
2021-10-10 06:08:08,294 - mmdet - INFO - Evaluating bbox...
2021-10-10 06:08:12,509 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 06:08:12,510 - mmdet - INFO - Epoch(val) [1][986]	bbox_mAP: 0.0520, bbox_mAP_50: 0.0990, bbox_mAP_75: 0.0480, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.0050, bbox_mAP_l: 0.0650, bbox_mAP_copypaste: 0.052 0.099 0.048 0.000 0.005 0.065
2021-10-10 06:09:45,007 - mmdet - INFO - Epoch [2][50/488]	lr: 1.000e-02, eta: 6:37:21, time: 1.849, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0590, loss_rpn_bbox: 0.0420, s0.loss_cls: 0.3546, s0.acc: 90.7837, s0.loss_bbox: 0.1588, s1.loss_cls: 0.1675, s1.acc: 91.0474, s1.loss_bbox: 0.1282, s2.loss_cls: 0.0723, s2.acc: 92.4675, s2.loss_bbox: 0.0621, loss: 1.0445
2021-10-10 06:11:17,591 - mmdet - INFO - Epoch [2][100/488]	lr: 1.000e-02, eta: 6:39:09, time: 1.852, data_time: 0.024, memory: 25184, loss_rpn_cls: 0.0620, loss_rpn_bbox: 0.0441, s0.loss_cls: 0.3446, s0.acc: 90.8950, s0.loss_bbox: 0.1510, s1.loss_cls: 0.1688, s1.acc: 90.8073, s1.loss_bbox: 0.1293, s2.loss_cls: 0.0749, s2.acc: 91.9105, s2.loss_bbox: 0.0641, loss: 1.0387
2021-10-10 06:12:47,457 - mmdet - INFO - Epoch [2][150/488]	lr: 1.000e-02, eta: 6:39:26, time: 1.797, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0587, loss_rpn_bbox: 0.0396, s0.loss_cls: 0.3295, s0.acc: 91.0640, s0.loss_bbox: 0.1400, s1.loss_cls: 0.1652, s1.acc: 90.7800, s1.loss_bbox: 0.1239, s2.loss_cls: 0.0763, s2.acc: 91.4920, s2.loss_bbox: 0.0654, loss: 0.9985
2021-10-10 06:14:17,046 - mmdet - INFO - Epoch [2][200/488]	lr: 1.000e-02, eta: 6:39:21, time: 1.792, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0615, loss_rpn_bbox: 0.0405, s0.loss_cls: 0.3539, s0.acc: 90.6147, s0.loss_bbox: 0.1525, s1.loss_cls: 0.1738, s1.acc: 90.4910, s1.loss_bbox: 0.1325, s2.loss_cls: 0.0777, s2.acc: 91.5279, s2.loss_bbox: 0.0654, loss: 1.0578
2021-10-10 06:15:48,618 - mmdet - INFO - Epoch [2][250/488]	lr: 1.000e-02, eta: 6:39:43, time: 1.831, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0531, loss_rpn_bbox: 0.0395, s0.loss_cls: 0.3209, s0.acc: 91.2437, s0.loss_bbox: 0.1360, s1.loss_cls: 0.1609, s1.acc: 90.8114, s1.loss_bbox: 0.1194, s2.loss_cls: 0.0736, s2.acc: 91.6109, s2.loss_bbox: 0.0600, loss: 0.9633
2021-10-10 06:17:19,586 - mmdet - INFO - Epoch [2][300/488]	lr: 1.000e-02, eta: 6:39:39, time: 1.819, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0558, loss_rpn_bbox: 0.0367, s0.loss_cls: 0.3113, s0.acc: 91.6089, s0.loss_bbox: 0.1312, s1.loss_cls: 0.1584, s1.acc: 91.1337, s1.loss_bbox: 0.1183, s2.loss_cls: 0.0726, s2.acc: 91.9281, s2.loss_bbox: 0.0622, loss: 0.9464
2021-10-10 06:18:49,517 - mmdet - INFO - Epoch [2][350/488]	lr: 1.000e-02, eta: 6:39:08, time: 1.799, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0583, loss_rpn_bbox: 0.0367, s0.loss_cls: 0.3218, s0.acc: 91.2632, s0.loss_bbox: 0.1326, s1.loss_cls: 0.1579, s1.acc: 91.2058, s1.loss_bbox: 0.1166, s2.loss_cls: 0.0727, s2.acc: 91.7103, s2.loss_bbox: 0.0606, loss: 0.9572
2021-10-10 06:20:20,761 - mmdet - INFO - Epoch [2][400/488]	lr: 1.000e-02, eta: 6:38:51, time: 1.825, data_time: 0.024, memory: 25184, loss_rpn_cls: 0.0509, loss_rpn_bbox: 0.0361, s0.loss_cls: 0.3165, s0.acc: 91.3926, s0.loss_bbox: 0.1297, s1.loss_cls: 0.1561, s1.acc: 91.1669, s1.loss_bbox: 0.1140, s2.loss_cls: 0.0702, s2.acc: 92.0995, s2.loss_bbox: 0.0571, loss: 0.9305
2021-10-10 06:21:49,914 - mmdet - INFO - Epoch [2][450/488]	lr: 1.000e-02, eta: 6:37:55, time: 1.783, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0473, loss_rpn_bbox: 0.0363, s0.loss_cls: 0.3125, s0.acc: 91.1191, s0.loss_bbox: 0.1271, s1.loss_cls: 0.1571, s1.acc: 90.7519, s1.loss_bbox: 0.1188, s2.loss_cls: 0.0732, s2.acc: 91.3631, s2.loss_bbox: 0.0623, loss: 0.9346
2021-10-10 06:23:00,785 - mmdet - INFO - Saving checkpoint at 2 epochs
2021-10-10 06:24:50,125 - mmdet - INFO - Evaluating bbox...
2021-10-10 06:24:55,361 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 06:24:55,362 - mmdet - INFO - Epoch(val) [2][986]	bbox_mAP: 0.1240, bbox_mAP_50: 0.2120, bbox_mAP_75: 0.1270, bbox_mAP_s: 0.0110, bbox_mAP_m: 0.0170, bbox_mAP_l: 0.1530, bbox_mAP_copypaste: 0.124 0.212 0.127 0.011 0.017 0.153
2021-10-10 06:26:29,341 - mmdet - INFO - Epoch [3][50/488]	lr: 1.000e-02, eta: 6:22:14, time: 1.879, data_time: 0.074, memory: 25184, loss_rpn_cls: 0.0535, loss_rpn_bbox: 0.0379, s0.loss_cls: 0.3309, s0.acc: 90.9253, s0.loss_bbox: 0.1313, s1.loss_cls: 0.1673, s1.acc: 90.5688, s1.loss_bbox: 0.1176, s2.loss_cls: 0.0782, s2.acc: 91.1778, s2.loss_bbox: 0.0637, loss: 0.9804
2021-10-10 06:28:00,585 - mmdet - INFO - Epoch [3][100/488]	lr: 1.000e-02, eta: 6:22:18, time: 1.825, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0439, loss_rpn_bbox: 0.0358, s0.loss_cls: 0.3113, s0.acc: 90.8999, s0.loss_bbox: 0.1365, s1.loss_cls: 0.1556, s1.acc: 90.7151, s1.loss_bbox: 0.1203, s2.loss_cls: 0.0727, s2.acc: 91.2787, s2.loss_bbox: 0.0631, loss: 0.9392
2021-10-10 06:29:30,223 - mmdet - INFO - Epoch [3][150/488]	lr: 1.000e-02, eta: 6:21:55, time: 1.793, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0525, loss_rpn_bbox: 0.0339, s0.loss_cls: 0.3090, s0.acc: 91.2490, s0.loss_bbox: 0.1253, s1.loss_cls: 0.1554, s1.acc: 90.9440, s1.loss_bbox: 0.1175, s2.loss_cls: 0.0737, s2.acc: 91.3682, s2.loss_bbox: 0.0639, loss: 0.9311
2021-10-10 06:30:59,313 - mmdet - INFO - Epoch [3][200/488]	lr: 1.000e-02, eta: 6:21:19, time: 1.782, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0447, loss_rpn_bbox: 0.0362, s0.loss_cls: 0.3186, s0.acc: 91.0708, s0.loss_bbox: 0.1311, s1.loss_cls: 0.1579, s1.acc: 90.8904, s1.loss_bbox: 0.1198, s2.loss_cls: 0.0734, s2.acc: 91.3952, s2.loss_bbox: 0.0635, loss: 0.9451
2021-10-10 06:32:31,045 - mmdet - INFO - Epoch [3][250/488]	lr: 1.000e-02, eta: 6:21:08, time: 1.835, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0460, loss_rpn_bbox: 0.0332, s0.loss_cls: 0.3014, s0.acc: 91.4189, s0.loss_bbox: 0.1205, s1.loss_cls: 0.1529, s1.acc: 91.1299, s1.loss_bbox: 0.1126, s2.loss_cls: 0.0723, s2.acc: 91.5346, s2.loss_bbox: 0.0614, loss: 0.9003
2021-10-10 06:34:00,629 - mmdet - INFO - Epoch [3][300/488]	lr: 1.000e-02, eta: 6:20:28, time: 1.792, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0455, loss_rpn_bbox: 0.0395, s0.loss_cls: 0.3100, s0.acc: 91.1772, s0.loss_bbox: 0.1231, s1.loss_cls: 0.1578, s1.acc: 90.7454, s1.loss_bbox: 0.1135, s2.loss_cls: 0.0752, s2.acc: 91.2046, s2.loss_bbox: 0.0615, loss: 0.9261
2021-10-10 06:35:32,096 - mmdet - INFO - Epoch [3][350/488]	lr: 1.000e-02, eta: 6:20:04, time: 1.829, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0427, loss_rpn_bbox: 0.0303, s0.loss_cls: 0.2981, s0.acc: 91.2593, s0.loss_bbox: 0.1203, s1.loss_cls: 0.1537, s1.acc: 90.6294, s1.loss_bbox: 0.1116, s2.loss_cls: 0.0743, s2.acc: 91.0983, s2.loss_bbox: 0.0619, loss: 0.8928
2021-10-10 06:37:01,322 - mmdet - INFO - Epoch [3][400/488]	lr: 1.000e-02, eta: 6:19:13, time: 1.785, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0401, loss_rpn_bbox: 0.0292, s0.loss_cls: 0.2682, s0.acc: 92.1147, s0.loss_bbox: 0.1066, s1.loss_cls: 0.1380, s1.acc: 91.6391, s1.loss_bbox: 0.1011, s2.loss_cls: 0.0671, s2.acc: 91.7216, s2.loss_bbox: 0.0572, loss: 0.8075
2021-10-10 06:38:32,274 - mmdet - INFO - Epoch [3][450/488]	lr: 1.000e-02, eta: 6:18:35, time: 1.819, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0457, loss_rpn_bbox: 0.0411, s0.loss_cls: 0.3025, s0.acc: 91.2593, s0.loss_bbox: 0.1324, s1.loss_cls: 0.1492, s1.acc: 91.2345, s1.loss_bbox: 0.1158, s2.loss_cls: 0.0701, s2.acc: 91.6414, s2.loss_bbox: 0.0617, loss: 0.9185
2021-10-10 06:39:41,090 - mmdet - INFO - Saving checkpoint at 3 epochs
2021-10-10 06:41:30,103 - mmdet - INFO - Evaluating bbox...
2021-10-10 06:41:35,772 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 06:41:35,772 - mmdet - INFO - Epoch(val) [3][986]	bbox_mAP: 0.1660, bbox_mAP_50: 0.2780, bbox_mAP_75: 0.1720, bbox_mAP_s: 0.0140, bbox_mAP_m: 0.0260, bbox_mAP_l: 0.2050, bbox_mAP_copypaste: 0.166 0.278 0.172 0.014 0.026 0.205
2021-10-10 06:43:09,808 - mmdet - INFO - Epoch [4][50/488]	lr: 1.000e-02, eta: 6:07:47, time: 1.880, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0356, loss_rpn_bbox: 0.0297, s0.loss_cls: 0.2734, s0.acc: 91.7803, s0.loss_bbox: 0.1180, s1.loss_cls: 0.1382, s1.acc: 91.5800, s1.loss_bbox: 0.1097, s2.loss_cls: 0.0675, s2.acc: 91.7957, s2.loss_bbox: 0.0611, loss: 0.8332
2021-10-10 06:44:39,251 - mmdet - INFO - Epoch [4][100/488]	lr: 1.000e-02, eta: 6:07:08, time: 1.789, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0356, loss_rpn_bbox: 0.0305, s0.loss_cls: 0.2691, s0.acc: 92.0024, s0.loss_bbox: 0.1107, s1.loss_cls: 0.1337, s1.acc: 91.8557, s1.loss_bbox: 0.0993, s2.loss_cls: 0.0647, s2.acc: 92.0584, s2.loss_bbox: 0.0561, loss: 0.7997
2021-10-10 06:46:08,661 - mmdet - INFO - Epoch [4][150/488]	lr: 1.000e-02, eta: 6:06:26, time: 1.788, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0342, loss_rpn_bbox: 0.0320, s0.loss_cls: 0.2829, s0.acc: 91.6211, s0.loss_bbox: 0.1139, s1.loss_cls: 0.1459, s1.acc: 91.2136, s1.loss_bbox: 0.1069, s2.loss_cls: 0.0705, s2.acc: 91.5339, s2.loss_bbox: 0.0592, loss: 0.8456
2021-10-10 06:47:40,742 - mmdet - INFO - Epoch [4][200/488]	lr: 1.000e-02, eta: 6:06:01, time: 1.842, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0358, loss_rpn_bbox: 0.0370, s0.loss_cls: 0.2902, s0.acc: 91.1904, s0.loss_bbox: 0.1189, s1.loss_cls: 0.1433, s1.acc: 91.2189, s1.loss_bbox: 0.1115, s2.loss_cls: 0.0678, s2.acc: 91.8201, s2.loss_bbox: 0.0618, loss: 0.8662
2021-10-10 06:49:10,853 - mmdet - INFO - Epoch [4][250/488]	lr: 1.000e-02, eta: 6:05:18, time: 1.802, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0323, loss_rpn_bbox: 0.0330, s0.loss_cls: 0.2601, s0.acc: 92.2593, s0.loss_bbox: 0.1088, s1.loss_cls: 0.1295, s1.acc: 92.0763, s1.loss_bbox: 0.1009, s2.loss_cls: 0.0624, s2.acc: 92.2356, s2.loss_bbox: 0.0576, loss: 0.7847
2021-10-10 06:50:41,632 - mmdet - INFO - Epoch [4][300/488]	lr: 1.000e-02, eta: 6:04:37, time: 1.816, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0382, loss_rpn_bbox: 0.0338, s0.loss_cls: 0.2915, s0.acc: 91.1963, s0.loss_bbox: 0.1199, s1.loss_cls: 0.1472, s1.acc: 90.9305, s1.loss_bbox: 0.1084, s2.loss_cls: 0.0717, s2.acc: 91.2098, s2.loss_bbox: 0.0608, loss: 0.8715
2021-10-10 06:52:11,187 - mmdet - INFO - Epoch [4][350/488]	lr: 1.000e-02, eta: 6:03:44, time: 1.791, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0393, loss_rpn_bbox: 0.0361, s0.loss_cls: 0.3059, s0.acc: 90.9058, s0.loss_bbox: 0.1264, s1.loss_cls: 0.1544, s1.acc: 90.6269, s1.loss_bbox: 0.1191, s2.loss_cls: 0.0738, s2.acc: 91.0274, s2.loss_bbox: 0.0670, loss: 0.9221
2021-10-10 06:53:42,487 - mmdet - INFO - Epoch [4][400/488]	lr: 1.000e-02, eta: 6:03:02, time: 1.826, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0411, loss_rpn_bbox: 0.0349, s0.loss_cls: 0.2832, s0.acc: 91.6060, s0.loss_bbox: 0.1213, s1.loss_cls: 0.1392, s1.acc: 91.6191, s1.loss_bbox: 0.1094, s2.loss_cls: 0.0666, s2.acc: 92.0474, s2.loss_bbox: 0.0625, loss: 0.8581
2021-10-10 06:55:11,677 - mmdet - INFO - Epoch [4][450/488]	lr: 1.000e-02, eta: 6:02:03, time: 1.784, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0332, loss_rpn_bbox: 0.0311, s0.loss_cls: 0.2486, s0.acc: 92.6255, s0.loss_bbox: 0.1015, s1.loss_cls: 0.1268, s1.acc: 92.3169, s1.loss_bbox: 0.0953, s2.loss_cls: 0.0618, s2.acc: 92.4302, s2.loss_bbox: 0.0526, loss: 0.7509
2021-10-10 06:56:21,581 - mmdet - INFO - Saving checkpoint at 4 epochs
2021-10-10 06:58:10,576 - mmdet - INFO - Evaluating bbox...
2021-10-10 06:58:14,380 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 06:58:14,381 - mmdet - INFO - Epoch(val) [4][986]	bbox_mAP: 0.1690, bbox_mAP_50: 0.2620, bbox_mAP_75: 0.1760, bbox_mAP_s: 0.0070, bbox_mAP_m: 0.0380, bbox_mAP_l: 0.2080, bbox_mAP_copypaste: 0.169 0.262 0.176 0.007 0.038 0.208
2021-10-10 06:59:48,790 - mmdet - INFO - Epoch [5][50/488]	lr: 1.000e-02, eta: 5:53:40, time: 1.888, data_time: 0.074, memory: 25184, loss_rpn_cls: 0.0331, loss_rpn_bbox: 0.0342, s0.loss_cls: 0.2739, s0.acc: 91.6572, s0.loss_bbox: 0.1176, s1.loss_cls: 0.1364, s1.acc: 91.4805, s1.loss_bbox: 0.1075, s2.loss_cls: 0.0651, s2.acc: 91.8358, s2.loss_bbox: 0.0614, loss: 0.8293
2021-10-10 07:01:18,534 - mmdet - INFO - Epoch [5][100/488]	lr: 1.000e-02, eta: 5:52:52, time: 1.795, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0303, loss_rpn_bbox: 0.0341, s0.loss_cls: 0.2618, s0.acc: 92.0273, s0.loss_bbox: 0.1068, s1.loss_cls: 0.1357, s1.acc: 91.5796, s1.loss_bbox: 0.1033, s2.loss_cls: 0.0668, s2.acc: 91.8354, s2.loss_bbox: 0.0589, loss: 0.7977
2021-10-10 07:02:50,016 - mmdet - INFO - Epoch [5][150/488]	lr: 1.000e-02, eta: 5:52:12, time: 1.830, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0289, loss_rpn_bbox: 0.0299, s0.loss_cls: 0.2479, s0.acc: 92.3550, s0.loss_bbox: 0.1057, s1.loss_cls: 0.1223, s1.acc: 92.3447, s1.loss_bbox: 0.0966, s2.loss_cls: 0.0602, s2.acc: 92.4760, s2.loss_bbox: 0.0553, loss: 0.7467
2021-10-10 07:04:20,376 - mmdet - INFO - Epoch [5][200/488]	lr: 1.000e-02, eta: 5:51:23, time: 1.807, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0331, loss_rpn_bbox: 0.0339, s0.loss_cls: 0.2701, s0.acc: 91.7466, s0.loss_bbox: 0.1138, s1.loss_cls: 0.1328, s1.acc: 91.7799, s1.loss_bbox: 0.1038, s2.loss_cls: 0.0649, s2.acc: 91.9000, s2.loss_bbox: 0.0603, loss: 0.8127
2021-10-10 07:05:50,574 - mmdet - INFO - Epoch [5][250/488]	lr: 1.000e-02, eta: 5:50:31, time: 1.804, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0314, loss_rpn_bbox: 0.0306, s0.loss_cls: 0.2649, s0.acc: 91.9902, s0.loss_bbox: 0.1099, s1.loss_cls: 0.1356, s1.acc: 91.6231, s1.loss_bbox: 0.1040, s2.loss_cls: 0.0667, s2.acc: 91.6824, s2.loss_bbox: 0.0600, loss: 0.8031
2021-10-10 07:07:21,747 - mmdet - INFO - Epoch [5][300/488]	lr: 1.000e-02, eta: 5:49:43, time: 1.823, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0332, loss_rpn_bbox: 0.0307, s0.loss_cls: 0.2474, s0.acc: 92.3828, s0.loss_bbox: 0.1061, s1.loss_cls: 0.1265, s1.acc: 92.0776, s1.loss_bbox: 0.1009, s2.loss_cls: 0.0627, s2.acc: 91.9392, s2.loss_bbox: 0.0599, loss: 0.7673
2021-10-10 07:08:51,219 - mmdet - INFO - Epoch [5][350/488]	lr: 1.000e-02, eta: 5:48:44, time: 1.789, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0325, loss_rpn_bbox: 0.0297, s0.loss_cls: 0.2536, s0.acc: 92.3330, s0.loss_bbox: 0.1070, s1.loss_cls: 0.1269, s1.acc: 92.1903, s1.loss_bbox: 0.0996, s2.loss_cls: 0.0605, s2.acc: 92.4676, s2.loss_bbox: 0.0558, loss: 0.7656
2021-10-10 07:10:22,471 - mmdet - INFO - Epoch [5][400/488]	lr: 1.000e-02, eta: 5:47:53, time: 1.825, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0357, loss_rpn_bbox: 0.0315, s0.loss_cls: 0.2647, s0.acc: 91.9839, s0.loss_bbox: 0.1079, s1.loss_cls: 0.1329, s1.acc: 91.7485, s1.loss_bbox: 0.0990, s2.loss_cls: 0.0638, s2.acc: 91.9036, s2.loss_bbox: 0.0545, loss: 0.7900
2021-10-10 07:11:51,738 - mmdet - INFO - Epoch [5][450/488]	lr: 1.000e-02, eta: 5:46:50, time: 1.785, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0313, loss_rpn_bbox: 0.0301, s0.loss_cls: 0.2576, s0.acc: 92.2676, s0.loss_bbox: 0.1023, s1.loss_cls: 0.1307, s1.acc: 91.9205, s1.loss_bbox: 0.0982, s2.loss_cls: 0.0631, s2.acc: 92.0398, s2.loss_bbox: 0.0549, loss: 0.7681
2021-10-10 07:13:02,039 - mmdet - INFO - Saving checkpoint at 5 epochs
2021-10-10 07:14:51,182 - mmdet - INFO - Evaluating bbox...
2021-10-10 07:14:56,157 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 07:14:56,157 - mmdet - INFO - Epoch(val) [5][986]	bbox_mAP: 0.2400, bbox_mAP_50: 0.3820, bbox_mAP_75: 0.2590, bbox_mAP_s: 0.0160, bbox_mAP_m: 0.0600, bbox_mAP_l: 0.2900, bbox_mAP_copypaste: 0.240 0.382 0.259 0.016 0.060 0.290
2021-10-10 07:16:30,106 - mmdet - INFO - Epoch [6][50/488]	lr: 1.000e-02, eta: 5:39:48, time: 1.879, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0351, loss_rpn_bbox: 0.0357, s0.loss_cls: 0.2501, s0.acc: 92.1353, s0.loss_bbox: 0.1141, s1.loss_cls: 0.1220, s1.acc: 92.2368, s1.loss_bbox: 0.1059, s2.loss_cls: 0.0596, s2.acc: 92.3802, s2.loss_bbox: 0.0585, loss: 0.7810
2021-10-10 07:17:59,830 - mmdet - INFO - Epoch [6][100/488]	lr: 1.000e-02, eta: 5:38:52, time: 1.794, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0255, loss_rpn_bbox: 0.0297, s0.loss_cls: 0.2223, s0.acc: 93.0356, s0.loss_bbox: 0.0953, s1.loss_cls: 0.1089, s1.acc: 93.1057, s1.loss_bbox: 0.0891, s2.loss_cls: 0.0537, s2.acc: 93.1905, s2.loss_bbox: 0.0529, loss: 0.6773
2021-10-10 07:19:31,548 - mmdet - INFO - Epoch [6][150/488]	lr: 1.000e-02, eta: 5:38:04, time: 1.834, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0264, loss_rpn_bbox: 0.0275, s0.loss_cls: 0.2294, s0.acc: 92.9189, s0.loss_bbox: 0.0957, s1.loss_cls: 0.1156, s1.acc: 92.6849, s1.loss_bbox: 0.0921, s2.loss_cls: 0.0568, s2.acc: 92.8096, s2.loss_bbox: 0.0549, loss: 0.6984
2021-10-10 07:21:00,830 - mmdet - INFO - Epoch [6][200/488]	lr: 1.000e-02, eta: 5:37:03, time: 1.786, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0315, loss_rpn_bbox: 0.0315, s0.loss_cls: 0.2557, s0.acc: 92.1978, s0.loss_bbox: 0.1065, s1.loss_cls: 0.1277, s1.acc: 92.0788, s1.loss_bbox: 0.0989, s2.loss_cls: 0.0625, s2.acc: 92.2398, s2.loss_bbox: 0.0561, loss: 0.7704
2021-10-10 07:22:32,432 - mmdet - INFO - Epoch [6][250/488]	lr: 1.000e-02, eta: 5:36:11, time: 1.832, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0303, loss_rpn_bbox: 0.0307, s0.loss_cls: 0.2439, s0.acc: 92.5088, s0.loss_bbox: 0.1009, s1.loss_cls: 0.1204, s1.acc: 92.5242, s1.loss_bbox: 0.0938, s2.loss_cls: 0.0593, s2.acc: 92.5233, s2.loss_bbox: 0.0564, loss: 0.7357
2021-10-10 07:24:03,074 - mmdet - INFO - Epoch [6][300/488]	lr: 1.000e-02, eta: 5:35:14, time: 1.813, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0311, loss_rpn_bbox: 0.0300, s0.loss_cls: 0.2568, s0.acc: 92.0796, s0.loss_bbox: 0.1039, s1.loss_cls: 0.1272, s1.acc: 91.9587, s1.loss_bbox: 0.0931, s2.loss_cls: 0.0617, s2.acc: 92.0387, s2.loss_bbox: 0.0547, loss: 0.7585
2021-10-10 07:25:32,799 - mmdet - INFO - Epoch [6][350/488]	lr: 1.000e-02, eta: 5:34:12, time: 1.794, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0298, loss_rpn_bbox: 0.0307, s0.loss_cls: 0.2346, s0.acc: 92.7339, s0.loss_bbox: 0.1005, s1.loss_cls: 0.1162, s1.acc: 92.6648, s1.loss_bbox: 0.0956, s2.loss_cls: 0.0567, s2.acc: 92.7487, s2.loss_bbox: 0.0564, loss: 0.7205
2021-10-10 07:27:02,149 - mmdet - INFO - Epoch [6][400/488]	lr: 1.000e-02, eta: 5:33:07, time: 1.787, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0310, loss_rpn_bbox: 0.0308, s0.loss_cls: 0.2762, s0.acc: 91.6387, s0.loss_bbox: 0.1124, s1.loss_cls: 0.1350, s1.acc: 91.7208, s1.loss_bbox: 0.1053, s2.loss_cls: 0.0653, s2.acc: 91.8266, s2.loss_bbox: 0.0618, loss: 0.8177
2021-10-10 07:28:33,752 - mmdet - INFO - Epoch [6][450/488]	lr: 1.000e-02, eta: 5:32:10, time: 1.832, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0340, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.2384, s0.acc: 92.6763, s0.loss_bbox: 0.0988, s1.loss_cls: 0.1186, s1.acc: 92.5180, s1.loss_bbox: 0.0926, s2.loss_cls: 0.0584, s2.acc: 92.5082, s2.loss_bbox: 0.0540, loss: 0.7216
2021-10-10 07:29:43,342 - mmdet - INFO - Saving checkpoint at 6 epochs
2021-10-10 07:31:34,947 - mmdet - INFO - Evaluating bbox...
2021-10-10 07:31:40,856 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 07:31:40,857 - mmdet - INFO - Epoch(val) [6][986]	bbox_mAP: 0.2470, bbox_mAP_50: 0.3810, bbox_mAP_75: 0.2560, bbox_mAP_s: 0.0170, bbox_mAP_m: 0.0580, bbox_mAP_l: 0.2990, bbox_mAP_copypaste: 0.247 0.381 0.256 0.017 0.058 0.299
2021-10-10 07:33:12,639 - mmdet - INFO - Epoch [7][50/488]	lr: 1.000e-02, eta: 5:25:56, time: 1.835, data_time: 0.074, memory: 25184, loss_rpn_cls: 0.0247, loss_rpn_bbox: 0.0301, s0.loss_cls: 0.2205, s0.acc: 92.9346, s0.loss_bbox: 0.0970, s1.loss_cls: 0.1093, s1.acc: 92.9068, s1.loss_bbox: 0.0904, s2.loss_cls: 0.0540, s2.acc: 93.0106, s2.loss_bbox: 0.0532, loss: 0.6791
2021-10-10 07:34:43,439 - mmdet - INFO - Epoch [7][100/488]	lr: 1.000e-02, eta: 5:24:59, time: 1.816, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0255, loss_rpn_bbox: 0.0274, s0.loss_cls: 0.2159, s0.acc: 93.3667, s0.loss_bbox: 0.0900, s1.loss_cls: 0.1083, s1.acc: 93.2911, s1.loss_bbox: 0.0866, s2.loss_cls: 0.0537, s2.acc: 93.3177, s2.loss_bbox: 0.0523, loss: 0.6597
2021-10-10 07:36:12,949 - mmdet - INFO - Epoch [7][150/488]	lr: 1.000e-02, eta: 5:23:55, time: 1.790, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0285, loss_rpn_bbox: 0.0330, s0.loss_cls: 0.2335, s0.acc: 92.6333, s0.loss_bbox: 0.0985, s1.loss_cls: 0.1152, s1.acc: 92.7331, s1.loss_bbox: 0.0907, s2.loss_cls: 0.0573, s2.acc: 92.7004, s2.loss_bbox: 0.0533, loss: 0.7100
2021-10-10 07:37:43,897 - mmdet - INFO - Epoch [7][200/488]	lr: 1.000e-02, eta: 5:22:57, time: 1.819, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0299, loss_rpn_bbox: 0.0320, s0.loss_cls: 0.2443, s0.acc: 92.1582, s0.loss_bbox: 0.1100, s1.loss_cls: 0.1204, s1.acc: 92.2283, s1.loss_bbox: 0.1016, s2.loss_cls: 0.0591, s2.acc: 92.2776, s2.loss_bbox: 0.0597, loss: 0.7571
2021-10-10 07:39:14,242 - mmdet - INFO - Epoch [7][250/488]	lr: 1.000e-02, eta: 5:21:55, time: 1.807, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0252, loss_rpn_bbox: 0.0281, s0.loss_cls: 0.2242, s0.acc: 92.9102, s0.loss_bbox: 0.0945, s1.loss_cls: 0.1108, s1.acc: 92.8927, s1.loss_bbox: 0.0899, s2.loss_cls: 0.0539, s2.acc: 93.1021, s2.loss_bbox: 0.0547, loss: 0.6813
2021-10-10 07:40:44,381 - mmdet - INFO - Epoch [7][300/488]	lr: 1.000e-02, eta: 5:20:51, time: 1.803, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0279, loss_rpn_bbox: 0.0283, s0.loss_cls: 0.2162, s0.acc: 93.2051, s0.loss_bbox: 0.0916, s1.loss_cls: 0.1073, s1.acc: 93.1634, s1.loss_bbox: 0.0872, s2.loss_cls: 0.0532, s2.acc: 93.2533, s2.loss_bbox: 0.0541, loss: 0.6658
2021-10-10 07:42:13,610 - mmdet - INFO - Epoch [7][350/488]	lr: 1.000e-02, eta: 5:19:44, time: 1.785, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0254, loss_rpn_bbox: 0.0280, s0.loss_cls: 0.2297, s0.acc: 92.8457, s0.loss_bbox: 0.0961, s1.loss_cls: 0.1143, s1.acc: 92.8083, s1.loss_bbox: 0.0905, s2.loss_cls: 0.0560, s2.acc: 92.8226, s2.loss_bbox: 0.0530, loss: 0.6929
2021-10-10 07:43:45,510 - mmdet - INFO - Epoch [7][400/488]	lr: 1.000e-02, eta: 5:18:45, time: 1.838, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0290, loss_rpn_bbox: 0.0297, s0.loss_cls: 0.2338, s0.acc: 92.6089, s0.loss_bbox: 0.1030, s1.loss_cls: 0.1140, s1.acc: 92.7261, s1.loss_bbox: 0.0963, s2.loss_cls: 0.0557, s2.acc: 92.8365, s2.loss_bbox: 0.0570, loss: 0.7186
2021-10-10 07:45:16,278 - mmdet - INFO - Epoch [7][450/488]	lr: 1.000e-02, eta: 5:17:41, time: 1.815, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0268, loss_rpn_bbox: 0.0273, s0.loss_cls: 0.2267, s0.acc: 92.8491, s0.loss_bbox: 0.0988, s1.loss_cls: 0.1109, s1.acc: 93.0523, s1.loss_bbox: 0.0944, s2.loss_cls: 0.0542, s2.acc: 93.1629, s2.loss_bbox: 0.0565, loss: 0.6956
2021-10-10 07:46:24,848 - mmdet - INFO - Saving checkpoint at 7 epochs
2021-10-10 07:48:14,323 - mmdet - INFO - Evaluating bbox...
2021-10-10 07:48:19,879 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 07:48:19,880 - mmdet - INFO - Epoch(val) [7][986]	bbox_mAP: 0.2690, bbox_mAP_50: 0.4050, bbox_mAP_75: 0.2860, bbox_mAP_s: 0.0270, bbox_mAP_m: 0.0480, bbox_mAP_l: 0.3310, bbox_mAP_copypaste: 0.269 0.405 0.286 0.027 0.048 0.331
2021-10-10 07:49:53,642 - mmdet - INFO - Epoch [8][50/488]	lr: 1.000e-02, eta: 5:12:14, time: 1.875, data_time: 0.076, memory: 25184, loss_rpn_cls: 0.0252, loss_rpn_bbox: 0.0306, s0.loss_cls: 0.2100, s0.acc: 93.1147, s0.loss_bbox: 0.0913, s1.loss_cls: 0.1028, s1.acc: 93.3094, s1.loss_bbox: 0.0867, s2.loss_cls: 0.0511, s2.acc: 93.2367, s2.loss_bbox: 0.0528, loss: 0.6505
2021-10-10 07:51:22,895 - mmdet - INFO - Epoch [8][100/488]	lr: 1.000e-02, eta: 5:11:08, time: 1.785, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0263, loss_rpn_bbox: 0.0288, s0.loss_cls: 0.2178, s0.acc: 92.8506, s0.loss_bbox: 0.1014, s1.loss_cls: 0.1067, s1.acc: 93.0299, s1.loss_bbox: 0.0993, s2.loss_cls: 0.0519, s2.acc: 93.1023, s2.loss_bbox: 0.0611, loss: 0.6934
2021-10-10 07:52:54,133 - mmdet - INFO - Epoch [8][150/488]	lr: 1.000e-02, eta: 5:10:06, time: 1.825, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0231, loss_rpn_bbox: 0.0282, s0.loss_cls: 0.1960, s0.acc: 93.6567, s0.loss_bbox: 0.0921, s1.loss_cls: 0.0937, s1.acc: 93.8917, s1.loss_bbox: 0.0857, s2.loss_cls: 0.0468, s2.acc: 93.9943, s2.loss_bbox: 0.0521, loss: 0.6177
2021-10-10 07:54:23,576 - mmdet - INFO - Epoch [8][200/488]	lr: 1.000e-02, eta: 5:08:59, time: 1.789, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0247, loss_rpn_bbox: 0.0349, s0.loss_cls: 0.2152, s0.acc: 93.1021, s0.loss_bbox: 0.0953, s1.loss_cls: 0.1052, s1.acc: 93.2661, s1.loss_bbox: 0.0894, s2.loss_cls: 0.0522, s2.acc: 93.3669, s2.loss_bbox: 0.0524, loss: 0.6693
2021-10-10 07:55:53,228 - mmdet - INFO - Epoch [8][250/488]	lr: 1.000e-02, eta: 5:07:52, time: 1.793, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0246, loss_rpn_bbox: 0.0289, s0.loss_cls: 0.2097, s0.acc: 93.4321, s0.loss_bbox: 0.0905, s1.loss_cls: 0.1034, s1.acc: 93.3979, s1.loss_bbox: 0.0846, s2.loss_cls: 0.0503, s2.acc: 93.4084, s2.loss_bbox: 0.0500, loss: 0.6419
2021-10-10 07:57:24,120 - mmdet - INFO - Epoch [8][300/488]	lr: 1.000e-02, eta: 5:06:47, time: 1.818, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0254, loss_rpn_bbox: 0.0256, s0.loss_cls: 0.2232, s0.acc: 92.8848, s0.loss_bbox: 0.0955, s1.loss_cls: 0.1081, s1.acc: 92.9669, s1.loss_bbox: 0.0898, s2.loss_cls: 0.0527, s2.acc: 93.0102, s2.loss_bbox: 0.0539, loss: 0.6743
2021-10-10 07:58:54,053 - mmdet - INFO - Epoch [8][350/488]	lr: 1.000e-02, eta: 5:05:39, time: 1.799, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0251, loss_rpn_bbox: 0.0285, s0.loss_cls: 0.2068, s0.acc: 93.3540, s0.loss_bbox: 0.0928, s1.loss_cls: 0.1015, s1.acc: 93.3602, s1.loss_bbox: 0.0879, s2.loss_cls: 0.0497, s2.acc: 93.4213, s2.loss_bbox: 0.0528, loss: 0.6451
2021-10-10 08:00:25,128 - mmdet - INFO - Epoch [8][400/488]	lr: 1.000e-02, eta: 5:04:34, time: 1.822, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0226, loss_rpn_bbox: 0.0277, s0.loss_cls: 0.2181, s0.acc: 92.9370, s0.loss_bbox: 0.1022, s1.loss_cls: 0.1055, s1.acc: 93.0033, s1.loss_bbox: 0.0947, s2.loss_cls: 0.0522, s2.acc: 92.8953, s2.loss_bbox: 0.0572, loss: 0.6801
2021-10-10 08:01:54,464 - mmdet - INFO - Epoch [8][450/488]	lr: 1.000e-02, eta: 5:03:23, time: 1.787, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0197, loss_rpn_bbox: 0.0246, s0.loss_cls: 0.2156, s0.acc: 93.4067, s0.loss_bbox: 0.0882, s1.loss_cls: 0.1040, s1.acc: 93.5254, s1.loss_bbox: 0.0845, s2.loss_cls: 0.0519, s2.acc: 93.5964, s2.loss_bbox: 0.0529, loss: 0.6414
2021-10-10 08:03:02,317 - mmdet - INFO - Saving checkpoint at 8 epochs
2021-10-10 08:04:53,354 - mmdet - INFO - Evaluating bbox...
2021-10-10 08:04:58,022 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 08:04:58,022 - mmdet - INFO - Epoch(val) [8][986]	bbox_mAP: 0.2920, bbox_mAP_50: 0.4310, bbox_mAP_75: 0.3170, bbox_mAP_s: 0.0340, bbox_mAP_m: 0.0540, bbox_mAP_l: 0.3590, bbox_mAP_copypaste: 0.292 0.431 0.317 0.034 0.054 0.359
2021-10-10 08:06:30,494 - mmdet - INFO - Epoch [9][50/488]	lr: 1.000e-03, eta: 4:58:23, time: 1.849, data_time: 0.071, memory: 25184, loss_rpn_cls: 0.0200, loss_rpn_bbox: 0.0296, s0.loss_cls: 0.1803, s0.acc: 94.0142, s0.loss_bbox: 0.0868, s1.loss_cls: 0.0829, s1.acc: 94.6607, s1.loss_bbox: 0.0774, s2.loss_cls: 0.0410, s2.acc: 94.6977, s2.loss_bbox: 0.0474, loss: 0.5654
2021-10-10 08:08:00,982 - mmdet - INFO - Epoch [9][100/488]	lr: 1.000e-03, eta: 4:57:17, time: 1.810, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0175, loss_rpn_bbox: 0.0246, s0.loss_cls: 0.1617, s0.acc: 94.6167, s0.loss_bbox: 0.0798, s1.loss_cls: 0.0770, s1.acc: 94.9062, s1.loss_bbox: 0.0768, s2.loss_cls: 0.0393, s2.acc: 94.7955, s2.loss_bbox: 0.0472, loss: 0.5239
2021-10-10 08:09:30,793 - mmdet - INFO - Epoch [9][150/488]	lr: 1.000e-03, eta: 4:56:09, time: 1.796, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0161, loss_rpn_bbox: 0.0206, s0.loss_cls: 0.1532, s0.acc: 94.9292, s0.loss_bbox: 0.0758, s1.loss_cls: 0.0692, s1.acc: 95.4742, s1.loss_bbox: 0.0739, s2.loss_cls: 0.0340, s2.acc: 95.7296, s2.loss_bbox: 0.0470, loss: 0.4897
2021-10-10 08:11:01,086 - mmdet - INFO - Epoch [9][200/488]	lr: 1.000e-03, eta: 4:55:01, time: 1.806, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0166, loss_rpn_bbox: 0.0237, s0.loss_cls: 0.1687, s0.acc: 94.4233, s0.loss_bbox: 0.0822, s1.loss_cls: 0.0762, s1.acc: 94.9752, s1.loss_bbox: 0.0754, s2.loss_cls: 0.0381, s2.acc: 95.0526, s2.loss_bbox: 0.0484, loss: 0.5293
2021-10-10 08:12:30,101 - mmdet - INFO - Epoch [9][250/488]	lr: 1.000e-03, eta: 4:53:50, time: 1.780, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0161, loss_rpn_bbox: 0.0226, s0.loss_cls: 0.1577, s0.acc: 94.7422, s0.loss_bbox: 0.0775, s1.loss_cls: 0.0722, s1.acc: 95.2432, s1.loss_bbox: 0.0734, s2.loss_cls: 0.0362, s2.acc: 95.3307, s2.loss_bbox: 0.0462, loss: 0.5020
2021-10-10 08:14:01,623 - mmdet - INFO - Epoch [9][300/488]	lr: 1.000e-03, eta: 4:52:44, time: 1.830, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.1531, s0.acc: 94.8389, s0.loss_bbox: 0.0750, s1.loss_cls: 0.0707, s1.acc: 95.3360, s1.loss_bbox: 0.0700, s2.loss_cls: 0.0357, s2.acc: 95.2114, s2.loss_bbox: 0.0440, loss: 0.4869
2021-10-10 08:15:31,072 - mmdet - INFO - Epoch [9][350/488]	lr: 1.000e-03, eta: 4:51:33, time: 1.789, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0168, loss_rpn_bbox: 0.0233, s0.loss_cls: 0.1593, s0.acc: 94.7266, s0.loss_bbox: 0.0832, s1.loss_cls: 0.0715, s1.acc: 95.3454, s1.loss_bbox: 0.0779, s2.loss_cls: 0.0361, s2.acc: 95.3587, s2.loss_bbox: 0.0489, loss: 0.5169
2021-10-10 08:17:02,865 - mmdet - INFO - Epoch [9][400/488]	lr: 1.000e-03, eta: 4:50:27, time: 1.836, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0215, s0.loss_cls: 0.1440, s0.acc: 95.1914, s0.loss_bbox: 0.0728, s1.loss_cls: 0.0659, s1.acc: 95.6379, s1.loss_bbox: 0.0677, s2.loss_cls: 0.0329, s2.acc: 95.7303, s2.loss_bbox: 0.0432, loss: 0.4630
2021-10-10 08:18:32,070 - mmdet - INFO - Epoch [9][450/488]	lr: 1.000e-03, eta: 4:49:14, time: 1.784, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0248, s0.loss_cls: 0.1518, s0.acc: 94.8882, s0.loss_bbox: 0.0771, s1.loss_cls: 0.0693, s1.acc: 95.4918, s1.loss_bbox: 0.0750, s2.loss_cls: 0.0350, s2.acc: 95.3943, s2.loss_bbox: 0.0479, loss: 0.4965
2021-10-10 08:19:41,920 - mmdet - INFO - Saving checkpoint at 9 epochs
2021-10-10 08:21:30,976 - mmdet - INFO - Evaluating bbox...
2021-10-10 08:21:34,714 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 08:21:34,714 - mmdet - INFO - Epoch(val) [9][986]	bbox_mAP: 0.3500, bbox_mAP_50: 0.4920, bbox_mAP_75: 0.3810, bbox_mAP_s: 0.0310, bbox_mAP_m: 0.0740, bbox_mAP_l: 0.4240, bbox_mAP_copypaste: 0.350 0.492 0.381 0.031 0.074 0.424
2021-10-10 08:23:08,679 - mmdet - INFO - Epoch [10][50/488]	lr: 1.000e-03, eta: 4:44:40, time: 1.879, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0209, s0.loss_cls: 0.1338, s0.acc: 95.5205, s0.loss_bbox: 0.0700, s1.loss_cls: 0.0602, s1.acc: 96.1571, s1.loss_bbox: 0.0667, s2.loss_cls: 0.0295, s2.acc: 96.2122, s2.loss_bbox: 0.0415, loss: 0.4367
2021-10-10 08:24:37,731 - mmdet - INFO - Epoch [10][100/488]	lr: 1.000e-03, eta: 4:43:29, time: 1.781, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0156, loss_rpn_bbox: 0.0251, s0.loss_cls: 0.1552, s0.acc: 94.7622, s0.loss_bbox: 0.0782, s1.loss_cls: 0.0703, s1.acc: 95.4555, s1.loss_bbox: 0.0728, s2.loss_cls: 0.0357, s2.acc: 95.4138, s2.loss_bbox: 0.0459, loss: 0.4988
2021-10-10 08:26:08,882 - mmdet - INFO - Epoch [10][150/488]	lr: 1.000e-03, eta: 4:42:21, time: 1.823, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0149, loss_rpn_bbox: 0.0231, s0.loss_cls: 0.1394, s0.acc: 95.3545, s0.loss_bbox: 0.0690, s1.loss_cls: 0.0635, s1.acc: 95.8935, s1.loss_bbox: 0.0651, s2.loss_cls: 0.0319, s2.acc: 95.9008, s2.loss_bbox: 0.0412, loss: 0.4482
2021-10-10 08:27:38,104 - mmdet - INFO - Epoch [10][200/488]	lr: 1.000e-03, eta: 4:41:09, time: 1.784, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0201, s0.loss_cls: 0.1390, s0.acc: 95.3311, s0.loss_bbox: 0.0736, s1.loss_cls: 0.0609, s1.acc: 96.0752, s1.loss_bbox: 0.0694, s2.loss_cls: 0.0309, s2.acc: 96.1059, s2.loss_bbox: 0.0435, loss: 0.4525
2021-10-10 08:29:09,574 - mmdet - INFO - Epoch [10][250/488]	lr: 1.000e-03, eta: 4:40:01, time: 1.829, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0156, loss_rpn_bbox: 0.0235, s0.loss_cls: 0.1458, s0.acc: 95.0903, s0.loss_bbox: 0.0757, s1.loss_cls: 0.0640, s1.acc: 95.7008, s1.loss_bbox: 0.0689, s2.loss_cls: 0.0318, s2.acc: 95.7010, s2.loss_bbox: 0.0429, loss: 0.4682
2021-10-10 08:30:38,716 - mmdet - INFO - Epoch [10][300/488]	lr: 1.000e-03, eta: 4:38:48, time: 1.783, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0216, s0.loss_cls: 0.1401, s0.acc: 95.2173, s0.loss_bbox: 0.0740, s1.loss_cls: 0.0625, s1.acc: 95.7397, s1.loss_bbox: 0.0703, s2.loss_cls: 0.0318, s2.acc: 95.7854, s2.loss_bbox: 0.0454, loss: 0.4601
2021-10-10 08:32:08,987 - mmdet - INFO - Epoch [10][350/488]	lr: 1.000e-03, eta: 4:37:37, time: 1.805, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0231, s0.loss_cls: 0.1389, s0.acc: 95.3462, s0.loss_bbox: 0.0749, s1.loss_cls: 0.0631, s1.acc: 95.8552, s1.loss_bbox: 0.0692, s2.loss_cls: 0.0322, s2.acc: 95.6828, s2.loss_bbox: 0.0437, loss: 0.4601
2021-10-10 08:33:38,897 - mmdet - INFO - Epoch [10][400/488]	lr: 1.000e-03, eta: 4:36:25, time: 1.798, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0140, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.1374, s0.acc: 95.3428, s0.loss_bbox: 0.0713, s1.loss_cls: 0.0606, s1.acc: 96.1335, s1.loss_bbox: 0.0672, s2.loss_cls: 0.0303, s2.acc: 96.1489, s2.loss_bbox: 0.0428, loss: 0.4463
2021-10-10 08:35:08,583 - mmdet - INFO - Epoch [10][450/488]	lr: 1.000e-03, eta: 4:35:11, time: 1.794, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0154, loss_rpn_bbox: 0.0252, s0.loss_cls: 0.1485, s0.acc: 95.0562, s0.loss_bbox: 0.0743, s1.loss_cls: 0.0674, s1.acc: 95.6064, s1.loss_bbox: 0.0680, s2.loss_cls: 0.0338, s2.acc: 95.6100, s2.loss_bbox: 0.0437, loss: 0.4763
2021-10-10 08:36:17,695 - mmdet - INFO - Saving checkpoint at 10 epochs
2021-10-10 08:38:06,252 - mmdet - INFO - Evaluating bbox...
2021-10-10 08:38:10,380 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 08:38:10,380 - mmdet - INFO - Epoch(val) [10][986]	bbox_mAP: 0.3530, bbox_mAP_50: 0.5000, bbox_mAP_75: 0.3790, bbox_mAP_s: 0.0290, bbox_mAP_m: 0.0760, bbox_mAP_l: 0.4270, bbox_mAP_copypaste: 0.353 0.500 0.379 0.029 0.076 0.427
2021-10-10 08:39:44,017 - mmdet - INFO - Epoch [11][50/488]	lr: 1.000e-03, eta: 4:30:55, time: 1.872, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0202, s0.loss_cls: 0.1334, s0.acc: 95.5229, s0.loss_bbox: 0.0710, s1.loss_cls: 0.0586, s1.acc: 96.1967, s1.loss_bbox: 0.0639, s2.loss_cls: 0.0296, s2.acc: 96.1627, s2.loss_bbox: 0.0409, loss: 0.4303
2021-10-10 08:41:12,996 - mmdet - INFO - Epoch [11][100/488]	lr: 1.000e-03, eta: 4:29:42, time: 1.780, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0251, s0.loss_cls: 0.1442, s0.acc: 95.1040, s0.loss_bbox: 0.0769, s1.loss_cls: 0.0631, s1.acc: 95.8697, s1.loss_bbox: 0.0723, s2.loss_cls: 0.0320, s2.acc: 95.8998, s2.loss_bbox: 0.0450, loss: 0.4729
2021-10-10 08:42:42,363 - mmdet - INFO - Epoch [11][150/488]	lr: 1.000e-03, eta: 4:28:29, time: 1.787, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0205, s0.loss_cls: 0.1265, s0.acc: 95.6968, s0.loss_bbox: 0.0661, s1.loss_cls: 0.0556, s1.acc: 96.2994, s1.loss_bbox: 0.0628, s2.loss_cls: 0.0280, s2.acc: 96.2373, s2.loss_bbox: 0.0407, loss: 0.4130
2021-10-10 08:44:13,622 - mmdet - INFO - Epoch [11][200/488]	lr: 1.000e-03, eta: 4:27:19, time: 1.825, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0145, loss_rpn_bbox: 0.0245, s0.loss_cls: 0.1362, s0.acc: 95.3760, s0.loss_bbox: 0.0727, s1.loss_cls: 0.0598, s1.acc: 96.1510, s1.loss_bbox: 0.0673, s2.loss_cls: 0.0290, s2.acc: 96.3305, s2.loss_bbox: 0.0429, loss: 0.4469
2021-10-10 08:45:42,885 - mmdet - INFO - Epoch [11][250/488]	lr: 1.000e-03, eta: 4:26:05, time: 1.785, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0204, s0.loss_cls: 0.1294, s0.acc: 95.5620, s0.loss_bbox: 0.0709, s1.loss_cls: 0.0566, s1.acc: 96.2095, s1.loss_bbox: 0.0654, s2.loss_cls: 0.0289, s2.acc: 96.0576, s2.loss_bbox: 0.0417, loss: 0.4262
2021-10-10 08:47:13,663 - mmdet - INFO - Epoch [11][300/488]	lr: 1.000e-03, eta: 4:24:54, time: 1.816, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0207, s0.loss_cls: 0.1311, s0.acc: 95.6455, s0.loss_bbox: 0.0674, s1.loss_cls: 0.0579, s1.acc: 96.2775, s1.loss_bbox: 0.0637, s2.loss_cls: 0.0293, s2.acc: 96.1696, s2.loss_bbox: 0.0401, loss: 0.4226
2021-10-10 08:48:43,188 - mmdet - INFO - Epoch [11][350/488]	lr: 1.000e-03, eta: 4:23:40, time: 1.790, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0231, s0.loss_cls: 0.1386, s0.acc: 95.3511, s0.loss_bbox: 0.0736, s1.loss_cls: 0.0615, s1.acc: 96.0013, s1.loss_bbox: 0.0685, s2.loss_cls: 0.0299, s2.acc: 96.1027, s2.loss_bbox: 0.0421, loss: 0.4508
2021-10-10 08:50:14,737 - mmdet - INFO - Epoch [11][400/488]	lr: 1.000e-03, eta: 4:22:29, time: 1.831, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0137, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.1345, s0.acc: 95.4229, s0.loss_bbox: 0.0695, s1.loss_cls: 0.0609, s1.acc: 95.9228, s1.loss_bbox: 0.0671, s2.loss_cls: 0.0311, s2.acc: 96.0231, s2.loss_bbox: 0.0431, loss: 0.4426
2021-10-10 08:51:43,867 - mmdet - INFO - Epoch [11][450/488]	lr: 1.000e-03, eta: 4:21:13, time: 1.783, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0217, s0.loss_cls: 0.1319, s0.acc: 95.5156, s0.loss_bbox: 0.0695, s1.loss_cls: 0.0580, s1.acc: 96.2122, s1.loss_bbox: 0.0630, s2.loss_cls: 0.0293, s2.acc: 96.2434, s2.loss_bbox: 0.0405, loss: 0.4284
2021-10-10 08:52:51,606 - mmdet - INFO - Saving checkpoint at 11 epochs
2021-10-10 08:54:42,734 - mmdet - INFO - Evaluating bbox...
2021-10-10 08:54:46,805 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 08:54:46,806 - mmdet - INFO - Epoch(val) [11][986]	bbox_mAP: 0.3550, bbox_mAP_50: 0.4970, bbox_mAP_75: 0.3850, bbox_mAP_s: 0.0290, bbox_mAP_m: 0.0720, bbox_mAP_l: 0.4300, bbox_mAP_copypaste: 0.355 0.497 0.385 0.029 0.072 0.430
2021-10-10 08:56:18,302 - mmdet - INFO - Epoch [12][50/488]	lr: 1.000e-04, eta: 4:17:09, time: 1.829, data_time: 0.071, memory: 25184, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0225, s0.loss_cls: 0.1278, s0.acc: 95.6836, s0.loss_bbox: 0.0690, s1.loss_cls: 0.0535, s1.acc: 96.5298, s1.loss_bbox: 0.0620, s2.loss_cls: 0.0268, s2.acc: 96.6169, s2.loss_bbox: 0.0402, loss: 0.4138
2021-10-10 08:57:48,131 - mmdet - INFO - Epoch [12][100/488]	lr: 1.000e-04, eta: 4:15:56, time: 1.797, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0134, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.1349, s0.acc: 95.4194, s0.loss_bbox: 0.0765, s1.loss_cls: 0.0586, s1.acc: 96.1815, s1.loss_bbox: 0.0716, s2.loss_cls: 0.0292, s2.acc: 96.1931, s2.loss_bbox: 0.0456, loss: 0.4526
2021-10-10 08:59:18,142 - mmdet - INFO - Epoch [12][150/488]	lr: 1.000e-04, eta: 4:14:42, time: 1.800, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0219, s0.loss_cls: 0.1229, s0.acc: 95.8589, s0.loss_bbox: 0.0652, s1.loss_cls: 0.0530, s1.acc: 96.4988, s1.loss_bbox: 0.0587, s2.loss_cls: 0.0264, s2.acc: 96.5705, s2.loss_bbox: 0.0385, loss: 0.3989
2021-10-10 09:00:49,356 - mmdet - INFO - Epoch [12][200/488]	lr: 1.000e-04, eta: 4:13:31, time: 1.824, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0203, s0.loss_cls: 0.1204, s0.acc: 96.0015, s0.loss_bbox: 0.0626, s1.loss_cls: 0.0524, s1.acc: 96.6505, s1.loss_bbox: 0.0601, s2.loss_cls: 0.0260, s2.acc: 96.7135, s2.loss_bbox: 0.0386, loss: 0.3929
2021-10-10 09:02:18,221 - mmdet - INFO - Epoch [12][250/488]	lr: 1.000e-04, eta: 4:12:15, time: 1.777, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0195, s0.loss_cls: 0.1185, s0.acc: 96.0112, s0.loss_bbox: 0.0648, s1.loss_cls: 0.0506, s1.acc: 96.7213, s1.loss_bbox: 0.0595, s2.loss_cls: 0.0255, s2.acc: 96.8556, s2.loss_bbox: 0.0376, loss: 0.3888
2021-10-10 09:03:49,408 - mmdet - INFO - Epoch [12][300/488]	lr: 1.000e-04, eta: 4:11:02, time: 1.824, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0213, s0.loss_cls: 0.1314, s0.acc: 95.5479, s0.loss_bbox: 0.0724, s1.loss_cls: 0.0576, s1.acc: 96.2237, s1.loss_bbox: 0.0664, s2.loss_cls: 0.0285, s2.acc: 96.3170, s2.loss_bbox: 0.0420, loss: 0.4317
2021-10-10 09:05:18,520 - mmdet - INFO - Epoch [12][350/488]	lr: 1.000e-04, eta: 4:09:47, time: 1.782, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0134, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.1258, s0.acc: 95.7056, s0.loss_bbox: 0.0704, s1.loss_cls: 0.0552, s1.acc: 96.3150, s1.loss_bbox: 0.0660, s2.loss_cls: 0.0282, s2.acc: 96.1833, s2.loss_bbox: 0.0424, loss: 0.4241
2021-10-10 09:06:50,210 - mmdet - INFO - Epoch [12][400/488]	lr: 1.000e-04, eta: 4:08:34, time: 1.834, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.1252, s0.acc: 95.8154, s0.loss_bbox: 0.0688, s1.loss_cls: 0.0548, s1.acc: 96.4935, s1.loss_bbox: 0.0640, s2.loss_cls: 0.0271, s2.acc: 96.5428, s2.loss_bbox: 0.0415, loss: 0.4175
2021-10-10 09:08:19,678 - mmdet - INFO - Epoch [12][450/488]	lr: 1.000e-04, eta: 4:07:19, time: 1.789, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0192, s0.loss_cls: 0.1217, s0.acc: 95.8350, s0.loss_bbox: 0.0652, s1.loss_cls: 0.0538, s1.acc: 96.3884, s1.loss_bbox: 0.0625, s2.loss_cls: 0.0270, s2.acc: 96.3444, s2.loss_bbox: 0.0393, loss: 0.4006
2021-10-10 09:09:28,323 - mmdet - INFO - Saving checkpoint at 12 epochs
2021-10-10 09:11:19,011 - mmdet - INFO - Evaluating bbox...
2021-10-10 09:11:22,625 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 09:11:22,625 - mmdet - INFO - Epoch(val) [12][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5040, bbox_mAP_75: 0.3940, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0740, bbox_mAP_l: 0.4380, bbox_mAP_copypaste: 0.362 0.504 0.394 0.028 0.074 0.438
2021-10-10 09:12:54,276 - mmdet - INFO - Epoch [13][50/488]	lr: 1.000e-04, eta: 4:03:27, time: 1.833, data_time: 0.071, memory: 25184, loss_rpn_cls: 0.0121, loss_rpn_bbox: 0.0201, s0.loss_cls: 0.1244, s0.acc: 95.7339, s0.loss_bbox: 0.0677, s1.loss_cls: 0.0546, s1.acc: 96.4228, s1.loss_bbox: 0.0635, s2.loss_cls: 0.0271, s2.acc: 96.4873, s2.loss_bbox: 0.0405, loss: 0.4099
2021-10-10 09:14:25,911 - mmdet - INFO - Epoch [13][100/488]	lr: 1.000e-04, eta: 4:02:15, time: 1.833, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0222, s0.loss_cls: 0.1287, s0.acc: 95.6279, s0.loss_bbox: 0.0683, s1.loss_cls: 0.0560, s1.acc: 96.3203, s1.loss_bbox: 0.0631, s2.loss_cls: 0.0274, s2.acc: 96.4364, s2.loss_bbox: 0.0393, loss: 0.4176
2021-10-10 09:15:54,715 - mmdet - INFO - Epoch [13][150/488]	lr: 1.000e-04, eta: 4:00:59, time: 1.776, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0202, s0.loss_cls: 0.1166, s0.acc: 96.0073, s0.loss_bbox: 0.0650, s1.loss_cls: 0.0492, s1.acc: 96.6970, s1.loss_bbox: 0.0575, s2.loss_cls: 0.0242, s2.acc: 96.8184, s2.loss_bbox: 0.0353, loss: 0.3794
2021-10-10 09:17:25,180 - mmdet - INFO - Epoch [13][200/488]	lr: 1.000e-04, eta: 3:59:45, time: 1.809, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0192, s0.loss_cls: 0.1199, s0.acc: 95.9497, s0.loss_bbox: 0.0657, s1.loss_cls: 0.0514, s1.acc: 96.6242, s1.loss_bbox: 0.0615, s2.loss_cls: 0.0253, s2.acc: 96.6398, s2.loss_bbox: 0.0399, loss: 0.3943
2021-10-10 09:18:54,602 - mmdet - INFO - Epoch [13][250/488]	lr: 1.000e-04, eta: 3:58:29, time: 1.788, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0222, s0.loss_cls: 0.1345, s0.acc: 95.4092, s0.loss_bbox: 0.0733, s1.loss_cls: 0.0583, s1.acc: 96.1666, s1.loss_bbox: 0.0677, s2.loss_cls: 0.0296, s2.acc: 96.1252, s2.loss_bbox: 0.0440, loss: 0.4431
2021-10-10 09:20:23,682 - mmdet - INFO - Epoch [13][300/488]	lr: 1.000e-04, eta: 3:57:12, time: 1.782, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0210, s0.loss_cls: 0.1254, s0.acc: 95.7686, s0.loss_bbox: 0.0692, s1.loss_cls: 0.0534, s1.acc: 96.5471, s1.loss_bbox: 0.0632, s2.loss_cls: 0.0272, s2.acc: 96.4076, s2.loss_bbox: 0.0409, loss: 0.4139
2021-10-10 09:21:55,375 - mmdet - INFO - Epoch [13][350/488]	lr: 1.000e-04, eta: 3:55:59, time: 1.834, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0193, s0.loss_cls: 0.1193, s0.acc: 95.9761, s0.loss_bbox: 0.0641, s1.loss_cls: 0.0514, s1.acc: 96.6701, s1.loss_bbox: 0.0621, s2.loss_cls: 0.0263, s2.acc: 96.6813, s2.loss_bbox: 0.0412, loss: 0.3955
2021-10-10 09:23:27,074 - mmdet - INFO - Epoch [13][400/488]	lr: 1.000e-04, eta: 3:54:45, time: 1.834, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0250, s0.loss_cls: 0.1308, s0.acc: 95.5293, s0.loss_bbox: 0.0743, s1.loss_cls: 0.0576, s1.acc: 96.2410, s1.loss_bbox: 0.0670, s2.loss_cls: 0.0286, s2.acc: 96.2444, s2.loss_bbox: 0.0416, loss: 0.4381
2021-10-10 09:24:56,321 - mmdet - INFO - Epoch [13][450/488]	lr: 1.000e-04, eta: 3:53:28, time: 1.785, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.1150, s0.acc: 96.0776, s0.loss_bbox: 0.0649, s1.loss_cls: 0.0502, s1.acc: 96.7024, s1.loss_bbox: 0.0603, s2.loss_cls: 0.0254, s2.acc: 96.6780, s2.loss_bbox: 0.0390, loss: 0.3886
2021-10-10 09:26:05,673 - mmdet - INFO - Saving checkpoint at 13 epochs
2021-10-10 09:27:54,583 - mmdet - INFO - Evaluating bbox...
2021-10-10 09:27:58,360 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 09:27:58,361 - mmdet - INFO - Epoch(val) [13][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5050, bbox_mAP_75: 0.3940, bbox_mAP_s: 0.0260, bbox_mAP_m: 0.0740, bbox_mAP_l: 0.4380, bbox_mAP_copypaste: 0.362 0.505 0.394 0.026 0.074 0.438
2021-10-10 09:29:32,066 - mmdet - INFO - Epoch [14][50/488]	lr: 1.000e-04, eta: 3:49:50, time: 1.874, data_time: 0.074, memory: 25184, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0228, s0.loss_cls: 0.1319, s0.acc: 95.4604, s0.loss_bbox: 0.0766, s1.loss_cls: 0.0576, s1.acc: 96.0811, s1.loss_bbox: 0.0710, s2.loss_cls: 0.0289, s2.acc: 96.0981, s2.loss_bbox: 0.0448, loss: 0.4475
2021-10-10 09:31:01,416 - mmdet - INFO - Epoch [14][100/488]	lr: 1.000e-04, eta: 3:48:34, time: 1.787, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0195, s0.loss_cls: 0.1075, s0.acc: 96.2939, s0.loss_bbox: 0.0589, s1.loss_cls: 0.0467, s1.acc: 96.8751, s1.loss_bbox: 0.0552, s2.loss_cls: 0.0236, s2.acc: 96.9212, s2.loss_bbox: 0.0360, loss: 0.3591
2021-10-10 09:32:32,709 - mmdet - INFO - Epoch [14][150/488]	lr: 1.000e-04, eta: 3:47:20, time: 1.826, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0219, s0.loss_cls: 0.1181, s0.acc: 96.0488, s0.loss_bbox: 0.0650, s1.loss_cls: 0.0523, s1.acc: 96.6515, s1.loss_bbox: 0.0590, s2.loss_cls: 0.0260, s2.acc: 96.6478, s2.loss_bbox: 0.0373, loss: 0.3912
2021-10-10 09:34:02,803 - mmdet - INFO - Epoch [14][200/488]	lr: 1.000e-04, eta: 3:46:04, time: 1.802, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0215, s0.loss_cls: 0.1205, s0.acc: 95.9800, s0.loss_bbox: 0.0641, s1.loss_cls: 0.0522, s1.acc: 96.6462, s1.loss_bbox: 0.0606, s2.loss_cls: 0.0259, s2.acc: 96.6771, s2.loss_bbox: 0.0406, loss: 0.3974
2021-10-10 09:35:33,755 - mmdet - INFO - Epoch [14][250/488]	lr: 1.000e-04, eta: 3:44:49, time: 1.819, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0198, s0.loss_cls: 0.1194, s0.acc: 95.9956, s0.loss_bbox: 0.0645, s1.loss_cls: 0.0503, s1.acc: 96.7399, s1.loss_bbox: 0.0590, s2.loss_cls: 0.0248, s2.acc: 96.7171, s2.loss_bbox: 0.0375, loss: 0.3877
2021-10-10 09:37:03,360 - mmdet - INFO - Epoch [14][300/488]	lr: 1.000e-04, eta: 3:43:32, time: 1.792, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0131, loss_rpn_bbox: 0.0234, s0.loss_cls: 0.1317, s0.acc: 95.5127, s0.loss_bbox: 0.0737, s1.loss_cls: 0.0568, s1.acc: 96.2420, s1.loss_bbox: 0.0684, s2.loss_cls: 0.0281, s2.acc: 96.2940, s2.loss_bbox: 0.0432, loss: 0.4383
2021-10-10 09:38:34,077 - mmdet - INFO - Epoch [14][350/488]	lr: 1.000e-04, eta: 3:42:16, time: 1.814, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.1263, s0.acc: 95.7437, s0.loss_bbox: 0.0681, s1.loss_cls: 0.0535, s1.acc: 96.4787, s1.loss_bbox: 0.0627, s2.loss_cls: 0.0269, s2.acc: 96.6027, s2.loss_bbox: 0.0400, loss: 0.4122
2021-10-10 09:40:02,968 - mmdet - INFO - Epoch [14][400/488]	lr: 1.000e-04, eta: 3:40:58, time: 1.778, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0217, s0.loss_cls: 0.1309, s0.acc: 95.5317, s0.loss_bbox: 0.0731, s1.loss_cls: 0.0577, s1.acc: 96.2235, s1.loss_bbox: 0.0672, s2.loss_cls: 0.0290, s2.acc: 96.1883, s2.loss_bbox: 0.0427, loss: 0.4335
2021-10-10 09:41:34,013 - mmdet - INFO - Epoch [14][450/488]	lr: 1.000e-04, eta: 3:39:43, time: 1.821, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0194, s0.loss_cls: 0.1251, s0.acc: 95.7832, s0.loss_bbox: 0.0679, s1.loss_cls: 0.0539, s1.acc: 96.5084, s1.loss_bbox: 0.0616, s2.loss_cls: 0.0267, s2.acc: 96.5439, s2.loss_bbox: 0.0392, loss: 0.4065
2021-10-10 09:42:41,528 - mmdet - INFO - Saving checkpoint at 14 epochs
2021-10-10 09:44:30,816 - mmdet - INFO - Evaluating bbox...
2021-10-10 09:44:34,438 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 09:44:34,438 - mmdet - INFO - Epoch(val) [14][986]	bbox_mAP: 0.3610, bbox_mAP_50: 0.5050, bbox_mAP_75: 0.3920, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0730, bbox_mAP_l: 0.4370, bbox_mAP_copypaste: 0.361 0.505 0.392 0.028 0.073 0.437
2021-10-10 09:46:08,816 - mmdet - INFO - Epoch [15][50/488]	lr: 1.000e-04, eta: 3:36:14, time: 1.887, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0235, s0.loss_cls: 0.1292, s0.acc: 95.6240, s0.loss_bbox: 0.0720, s1.loss_cls: 0.0557, s1.acc: 96.2947, s1.loss_bbox: 0.0669, s2.loss_cls: 0.0280, s2.acc: 96.3251, s2.loss_bbox: 0.0421, loss: 0.4314
2021-10-10 09:47:37,882 - mmdet - INFO - Epoch [15][100/488]	lr: 1.000e-04, eta: 3:34:57, time: 1.781, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0207, s0.loss_cls: 0.1259, s0.acc: 95.7490, s0.loss_bbox: 0.0655, s1.loss_cls: 0.0529, s1.acc: 96.5935, s1.loss_bbox: 0.0601, s2.loss_cls: 0.0267, s2.acc: 96.5884, s2.loss_bbox: 0.0384, loss: 0.4033
2021-10-10 09:49:09,270 - mmdet - INFO - Epoch [15][150/488]	lr: 1.000e-04, eta: 3:33:42, time: 1.828, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0199, s0.loss_cls: 0.1200, s0.acc: 95.9370, s0.loss_bbox: 0.0670, s1.loss_cls: 0.0506, s1.acc: 96.6985, s1.loss_bbox: 0.0614, s2.loss_cls: 0.0253, s2.acc: 96.6534, s2.loss_bbox: 0.0406, loss: 0.3965
2021-10-10 09:50:38,482 - mmdet - INFO - Epoch [15][200/488]	lr: 1.000e-04, eta: 3:32:24, time: 1.784, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0222, s0.loss_cls: 0.1200, s0.acc: 95.9214, s0.loss_bbox: 0.0652, s1.loss_cls: 0.0518, s1.acc: 96.5539, s1.loss_bbox: 0.0601, s2.loss_cls: 0.0256, s2.acc: 96.6735, s2.loss_bbox: 0.0386, loss: 0.3954
2021-10-10 09:52:07,179 - mmdet - INFO - Epoch [15][250/488]	lr: 1.000e-04, eta: 3:31:05, time: 1.774, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0185, s0.loss_cls: 0.1121, s0.acc: 96.2046, s0.loss_bbox: 0.0615, s1.loss_cls: 0.0493, s1.acc: 96.7963, s1.loss_bbox: 0.0577, s2.loss_cls: 0.0249, s2.acc: 96.7892, s2.loss_bbox: 0.0367, loss: 0.3714
2021-10-10 09:53:38,315 - mmdet - INFO - Epoch [15][300/488]	lr: 1.000e-04, eta: 3:29:49, time: 1.823, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.1233, s0.acc: 95.7275, s0.loss_bbox: 0.0747, s1.loss_cls: 0.0531, s1.acc: 96.4959, s1.loss_bbox: 0.0675, s2.loss_cls: 0.0265, s2.acc: 96.5626, s2.loss_bbox: 0.0427, loss: 0.4221
2021-10-10 09:55:09,169 - mmdet - INFO - Epoch [15][350/488]	lr: 1.000e-04, eta: 3:28:33, time: 1.817, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0208, s0.loss_cls: 0.1258, s0.acc: 95.7754, s0.loss_bbox: 0.0686, s1.loss_cls: 0.0552, s1.acc: 96.4069, s1.loss_bbox: 0.0619, s2.loss_cls: 0.0277, s2.acc: 96.3649, s2.loss_bbox: 0.0391, loss: 0.4118
2021-10-10 09:56:38,396 - mmdet - INFO - Epoch [15][400/488]	lr: 1.000e-04, eta: 3:27:14, time: 1.784, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0213, s0.loss_cls: 0.1242, s0.acc: 95.8271, s0.loss_bbox: 0.0675, s1.loss_cls: 0.0554, s1.acc: 96.4134, s1.loss_bbox: 0.0641, s2.loss_cls: 0.0274, s2.acc: 96.5252, s2.loss_bbox: 0.0402, loss: 0.4127
2021-10-10 09:58:10,008 - mmdet - INFO - Epoch [15][450/488]	lr: 1.000e-04, eta: 3:25:58, time: 1.832, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0122, loss_rpn_bbox: 0.0210, s0.loss_cls: 0.1236, s0.acc: 95.8809, s0.loss_bbox: 0.0696, s1.loss_cls: 0.0522, s1.acc: 96.5880, s1.loss_bbox: 0.0629, s2.loss_cls: 0.0264, s2.acc: 96.5827, s2.loss_bbox: 0.0408, loss: 0.4087
2021-10-10 09:59:19,352 - mmdet - INFO - Saving checkpoint at 15 epochs
2021-10-10 10:01:09,904 - mmdet - INFO - Evaluating bbox...
2021-10-10 10:01:13,831 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 10:01:13,832 - mmdet - INFO - Epoch(val) [15][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5060, bbox_mAP_75: 0.3910, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0740, bbox_mAP_l: 0.4390, bbox_mAP_copypaste: 0.362 0.506 0.391 0.028 0.074 0.439
2021-10-10 10:02:47,162 - mmdet - INFO - Epoch [16][50/488]	lr: 1.000e-04, eta: 3:22:37, time: 1.866, data_time: 0.075, memory: 25184, loss_rpn_cls: 0.0122, loss_rpn_bbox: 0.0209, s0.loss_cls: 0.1282, s0.acc: 95.6206, s0.loss_bbox: 0.0739, s1.loss_cls: 0.0562, s1.acc: 96.2750, s1.loss_bbox: 0.0673, s2.loss_cls: 0.0288, s2.acc: 96.2507, s2.loss_bbox: 0.0439, loss: 0.4313
2021-10-10 10:04:18,334 - mmdet - INFO - Epoch [16][100/488]	lr: 1.000e-04, eta: 3:21:20, time: 1.823, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0199, s0.loss_cls: 0.1123, s0.acc: 96.1958, s0.loss_bbox: 0.0602, s1.loss_cls: 0.0489, s1.acc: 96.8550, s1.loss_bbox: 0.0567, s2.loss_cls: 0.0251, s2.acc: 96.7190, s2.loss_bbox: 0.0356, loss: 0.3702
2021-10-10 10:05:47,418 - mmdet - INFO - Epoch [16][150/488]	lr: 1.000e-04, eta: 3:20:02, time: 1.782, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0215, s0.loss_cls: 0.1207, s0.acc: 95.9404, s0.loss_bbox: 0.0659, s1.loss_cls: 0.0514, s1.acc: 96.5860, s1.loss_bbox: 0.0619, s2.loss_cls: 0.0258, s2.acc: 96.6406, s2.loss_bbox: 0.0401, loss: 0.3989
2021-10-10 10:07:18,043 - mmdet - INFO - Epoch [16][200/488]	lr: 1.000e-04, eta: 3:18:45, time: 1.812, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0211, s0.loss_cls: 0.1174, s0.acc: 96.0439, s0.loss_bbox: 0.0647, s1.loss_cls: 0.0492, s1.acc: 96.7603, s1.loss_bbox: 0.0593, s2.loss_cls: 0.0251, s2.acc: 96.7798, s2.loss_bbox: 0.0385, loss: 0.3881
2021-10-10 10:08:47,060 - mmdet - INFO - Epoch [16][250/488]	lr: 1.000e-04, eta: 3:17:26, time: 1.780, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0174, s0.loss_cls: 0.1142, s0.acc: 96.0918, s0.loss_bbox: 0.0652, s1.loss_cls: 0.0486, s1.acc: 96.7885, s1.loss_bbox: 0.0603, s2.loss_cls: 0.0242, s2.acc: 96.9371, s2.loss_bbox: 0.0386, loss: 0.3793
2021-10-10 10:10:18,001 - mmdet - INFO - Epoch [16][300/488]	lr: 1.000e-04, eta: 3:16:09, time: 1.819, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0225, s0.loss_cls: 0.1271, s0.acc: 95.7241, s0.loss_bbox: 0.0710, s1.loss_cls: 0.0537, s1.acc: 96.5488, s1.loss_bbox: 0.0621, s2.loss_cls: 0.0265, s2.acc: 96.6078, s2.loss_bbox: 0.0382, loss: 0.4150
2021-10-10 10:11:46,945 - mmdet - INFO - Epoch [16][350/488]	lr: 1.000e-04, eta: 3:14:50, time: 1.779, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0222, s0.loss_cls: 0.1262, s0.acc: 95.7319, s0.loss_bbox: 0.0694, s1.loss_cls: 0.0538, s1.acc: 96.4244, s1.loss_bbox: 0.0641, s2.loss_cls: 0.0271, s2.acc: 96.3917, s2.loss_bbox: 0.0415, loss: 0.4159
2021-10-10 10:13:18,328 - mmdet - INFO - Epoch [16][400/488]	lr: 1.000e-04, eta: 3:13:32, time: 1.828, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0242, s0.loss_cls: 0.1313, s0.acc: 95.5029, s0.loss_bbox: 0.0726, s1.loss_cls: 0.0570, s1.acc: 96.2905, s1.loss_bbox: 0.0660, s2.loss_cls: 0.0287, s2.acc: 96.2283, s2.loss_bbox: 0.0428, loss: 0.4359
2021-10-10 10:14:47,293 - mmdet - INFO - Epoch [16][450/488]	lr: 1.000e-04, eta: 3:12:13, time: 1.779, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0212, s0.loss_cls: 0.1207, s0.acc: 95.9204, s0.loss_bbox: 0.0664, s1.loss_cls: 0.0507, s1.acc: 96.6860, s1.loss_bbox: 0.0610, s2.loss_cls: 0.0251, s2.acc: 96.7225, s2.loss_bbox: 0.0395, loss: 0.3971
2021-10-10 10:15:55,026 - mmdet - INFO - Saving checkpoint at 16 epochs
2021-10-10 10:17:46,456 - mmdet - INFO - Evaluating bbox...
2021-10-10 10:17:49,983 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 10:17:49,984 - mmdet - INFO - Epoch(val) [16][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5050, bbox_mAP_75: 0.3920, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0730, bbox_mAP_l: 0.4380, bbox_mAP_copypaste: 0.362 0.505 0.392 0.028 0.073 0.438
2021-10-10 10:19:23,380 - mmdet - INFO - Epoch [17][50/488]	lr: 1.000e-04, eta: 3:08:58, time: 1.868, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0216, s0.loss_cls: 0.1217, s0.acc: 95.9033, s0.loss_bbox: 0.0641, s1.loss_cls: 0.0524, s1.acc: 96.5838, s1.loss_bbox: 0.0594, s2.loss_cls: 0.0269, s2.acc: 96.5006, s2.loss_bbox: 0.0381, loss: 0.3958
2021-10-10 10:20:52,445 - mmdet - INFO - Epoch [17][100/488]	lr: 1.000e-04, eta: 3:07:39, time: 1.781, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0131, loss_rpn_bbox: 0.0197, s0.loss_cls: 0.1238, s0.acc: 95.7910, s0.loss_bbox: 0.0654, s1.loss_cls: 0.0524, s1.acc: 96.5866, s1.loss_bbox: 0.0597, s2.loss_cls: 0.0261, s2.acc: 96.5970, s2.loss_bbox: 0.0384, loss: 0.3987
2021-10-10 10:22:23,224 - mmdet - INFO - Epoch [17][150/488]	lr: 1.000e-04, eta: 3:06:22, time: 1.816, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0210, s0.loss_cls: 0.1241, s0.acc: 95.7139, s0.loss_bbox: 0.0693, s1.loss_cls: 0.0518, s1.acc: 96.5878, s1.loss_bbox: 0.0613, s2.loss_cls: 0.0263, s2.acc: 96.4988, s2.loss_bbox: 0.0397, loss: 0.4061
2021-10-10 10:23:52,295 - mmdet - INFO - Epoch [17][200/488]	lr: 1.000e-04, eta: 3:05:03, time: 1.781, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0210, s0.loss_cls: 0.1144, s0.acc: 96.0483, s0.loss_bbox: 0.0671, s1.loss_cls: 0.0485, s1.acc: 96.6841, s1.loss_bbox: 0.0621, s2.loss_cls: 0.0246, s2.acc: 96.7675, s2.loss_bbox: 0.0388, loss: 0.3881
2021-10-10 10:25:23,176 - mmdet - INFO - Epoch [17][250/488]	lr: 1.000e-04, eta: 3:03:45, time: 1.818, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0202, s0.loss_cls: 0.1152, s0.acc: 96.1514, s0.loss_bbox: 0.0642, s1.loss_cls: 0.0480, s1.acc: 96.9156, s1.loss_bbox: 0.0587, s2.loss_cls: 0.0246, s2.acc: 96.8788, s2.loss_bbox: 0.0384, loss: 0.3810
2021-10-10 10:26:53,940 - mmdet - INFO - Epoch [17][300/488]	lr: 1.000e-04, eta: 3:02:27, time: 1.815, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0221, s0.loss_cls: 0.1243, s0.acc: 95.8394, s0.loss_bbox: 0.0671, s1.loss_cls: 0.0538, s1.acc: 96.5074, s1.loss_bbox: 0.0599, s2.loss_cls: 0.0267, s2.acc: 96.6588, s2.loss_bbox: 0.0383, loss: 0.4048
2021-10-10 10:28:23,568 - mmdet - INFO - Epoch [17][350/488]	lr: 1.000e-04, eta: 3:01:07, time: 1.793, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0221, s0.loss_cls: 0.1265, s0.acc: 95.7622, s0.loss_bbox: 0.0725, s1.loss_cls: 0.0538, s1.acc: 96.4757, s1.loss_bbox: 0.0657, s2.loss_cls: 0.0266, s2.acc: 96.4731, s2.loss_bbox: 0.0419, loss: 0.4217
2021-10-10 10:29:55,118 - mmdet - INFO - Epoch [17][400/488]	lr: 1.000e-04, eta: 2:59:50, time: 1.831, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0221, s0.loss_cls: 0.1264, s0.acc: 95.6382, s0.loss_bbox: 0.0721, s1.loss_cls: 0.0541, s1.acc: 96.3963, s1.loss_bbox: 0.0667, s2.loss_cls: 0.0269, s2.acc: 96.4435, s2.loss_bbox: 0.0420, loss: 0.4222
2021-10-10 10:31:24,302 - mmdet - INFO - Epoch [17][450/488]	lr: 1.000e-04, eta: 2:58:30, time: 1.784, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0205, s0.loss_cls: 0.1220, s0.acc: 95.7925, s0.loss_bbox: 0.0684, s1.loss_cls: 0.0526, s1.acc: 96.5214, s1.loss_bbox: 0.0631, s2.loss_cls: 0.0262, s2.acc: 96.5774, s2.loss_bbox: 0.0405, loss: 0.4067
2021-10-10 10:32:34,188 - mmdet - INFO - Saving checkpoint at 17 epochs
2021-10-10 10:34:23,318 - mmdet - INFO - Evaluating bbox...
2021-10-10 10:34:27,016 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 10:34:27,017 - mmdet - INFO - Epoch(val) [17][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5050, bbox_mAP_75: 0.3930, bbox_mAP_s: 0.0260, bbox_mAP_m: 0.0730, bbox_mAP_l: 0.4380, bbox_mAP_copypaste: 0.362 0.505 0.393 0.026 0.073 0.438
2021-10-10 10:35:59,936 - mmdet - INFO - Epoch [18][50/488]	lr: 1.000e-04, eta: 2:55:21, time: 1.858, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0186, s0.loss_cls: 0.1225, s0.acc: 95.7822, s0.loss_bbox: 0.0691, s1.loss_cls: 0.0511, s1.acc: 96.6405, s1.loss_bbox: 0.0640, s2.loss_cls: 0.0259, s2.acc: 96.6489, s2.loss_bbox: 0.0408, loss: 0.4049
2021-10-10 10:37:28,800 - mmdet - INFO - Epoch [18][100/488]	lr: 1.000e-04, eta: 2:54:01, time: 1.777, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0226, s0.loss_cls: 0.1194, s0.acc: 96.0386, s0.loss_bbox: 0.0673, s1.loss_cls: 0.0512, s1.acc: 96.6761, s1.loss_bbox: 0.0608, s2.loss_cls: 0.0258, s2.acc: 96.7410, s2.loss_bbox: 0.0397, loss: 0.3976
2021-10-10 10:38:59,996 - mmdet - INFO - Epoch [18][150/488]	lr: 1.000e-04, eta: 2:52:43, time: 1.824, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0230, s0.loss_cls: 0.1335, s0.acc: 95.4336, s0.loss_bbox: 0.0733, s1.loss_cls: 0.0560, s1.acc: 96.3780, s1.loss_bbox: 0.0657, s2.loss_cls: 0.0282, s2.acc: 96.2838, s2.loss_bbox: 0.0413, loss: 0.4337
2021-10-10 10:40:28,985 - mmdet - INFO - Epoch [18][200/488]	lr: 1.000e-04, eta: 2:51:23, time: 1.780, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0222, s0.loss_cls: 0.1211, s0.acc: 95.8818, s0.loss_bbox: 0.0674, s1.loss_cls: 0.0523, s1.acc: 96.5824, s1.loss_bbox: 0.0626, s2.loss_cls: 0.0260, s2.acc: 96.5296, s2.loss_bbox: 0.0397, loss: 0.4033
2021-10-10 10:42:00,663 - mmdet - INFO - Epoch [18][250/488]	lr: 1.000e-04, eta: 2:50:05, time: 1.834, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0130, loss_rpn_bbox: 0.0217, s0.loss_cls: 0.1235, s0.acc: 95.8086, s0.loss_bbox: 0.0695, s1.loss_cls: 0.0520, s1.acc: 96.6572, s1.loss_bbox: 0.0631, s2.loss_cls: 0.0263, s2.acc: 96.6566, s2.loss_bbox: 0.0406, loss: 0.4097
2021-10-10 10:43:29,663 - mmdet - INFO - Epoch [18][300/488]	lr: 1.000e-04, eta: 2:48:45, time: 1.780, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0105, loss_rpn_bbox: 0.0193, s0.loss_cls: 0.1080, s0.acc: 96.2969, s0.loss_bbox: 0.0600, s1.loss_cls: 0.0459, s1.acc: 96.9136, s1.loss_bbox: 0.0554, s2.loss_cls: 0.0230, s2.acc: 96.8677, s2.loss_bbox: 0.0364, loss: 0.3585
2021-10-10 10:44:58,704 - mmdet - INFO - Epoch [18][350/488]	lr: 1.000e-04, eta: 2:47:25, time: 1.781, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0201, s0.loss_cls: 0.1127, s0.acc: 96.1431, s0.loss_bbox: 0.0644, s1.loss_cls: 0.0488, s1.acc: 96.8262, s1.loss_bbox: 0.0573, s2.loss_cls: 0.0245, s2.acc: 96.8679, s2.loss_bbox: 0.0362, loss: 0.3765
2021-10-10 10:46:29,556 - mmdet - INFO - Epoch [18][400/488]	lr: 1.000e-04, eta: 2:46:06, time: 1.817, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0234, s0.loss_cls: 0.1272, s0.acc: 95.6172, s0.loss_bbox: 0.0713, s1.loss_cls: 0.0533, s1.acc: 96.4435, s1.loss_bbox: 0.0648, s2.loss_cls: 0.0273, s2.acc: 96.3831, s2.loss_bbox: 0.0418, loss: 0.4217
2021-10-10 10:48:00,218 - mmdet - INFO - Epoch [18][450/488]	lr: 1.000e-04, eta: 2:44:47, time: 1.813, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0179, s0.loss_cls: 0.1077, s0.acc: 96.2959, s0.loss_bbox: 0.0587, s1.loss_cls: 0.0459, s1.acc: 96.9741, s1.loss_bbox: 0.0567, s2.loss_cls: 0.0238, s2.acc: 96.7394, s2.loss_bbox: 0.0363, loss: 0.3583
2021-10-10 10:49:08,876 - mmdet - INFO - Saving checkpoint at 18 epochs
2021-10-10 10:50:59,595 - mmdet - INFO - Evaluating bbox...
2021-10-10 10:51:03,789 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 10:51:03,790 - mmdet - INFO - Epoch(val) [18][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5080, bbox_mAP_75: 0.3930, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0730, bbox_mAP_l: 0.4390, bbox_mAP_copypaste: 0.362 0.508 0.393 0.028 0.073 0.439
2021-10-10 10:52:36,077 - mmdet - INFO - Epoch [19][50/488]	lr: 1.000e-04, eta: 2:41:43, time: 1.845, data_time: 0.073, memory: 25184, loss_rpn_cls: 0.0137, loss_rpn_bbox: 0.0183, s0.loss_cls: 0.1178, s0.acc: 95.9722, s0.loss_bbox: 0.0673, s1.loss_cls: 0.0502, s1.acc: 96.6603, s1.loss_bbox: 0.0630, s2.loss_cls: 0.0255, s2.acc: 96.6631, s2.loss_bbox: 0.0403, loss: 0.3961
2021-10-10 10:54:07,279 - mmdet - INFO - Epoch [19][100/488]	lr: 1.000e-04, eta: 2:40:24, time: 1.824, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0114, loss_rpn_bbox: 0.0210, s0.loss_cls: 0.1100, s0.acc: 96.3330, s0.loss_bbox: 0.0623, s1.loss_cls: 0.0466, s1.acc: 96.9723, s1.loss_bbox: 0.0568, s2.loss_cls: 0.0233, s2.acc: 97.0296, s2.loss_bbox: 0.0366, loss: 0.3680
2021-10-10 10:55:37,351 - mmdet - INFO - Epoch [19][150/488]	lr: 1.000e-04, eta: 2:39:05, time: 1.801, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0193, s0.loss_cls: 0.1110, s0.acc: 96.2007, s0.loss_bbox: 0.0618, s1.loss_cls: 0.0462, s1.acc: 96.9938, s1.loss_bbox: 0.0578, s2.loss_cls: 0.0233, s2.acc: 96.8678, s2.loss_bbox: 0.0380, loss: 0.3681
2021-10-10 10:57:07,143 - mmdet - INFO - Epoch [19][200/488]	lr: 1.000e-04, eta: 2:37:45, time: 1.796, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0235, s0.loss_cls: 0.1240, s0.acc: 95.7935, s0.loss_bbox: 0.0701, s1.loss_cls: 0.0537, s1.acc: 96.4735, s1.loss_bbox: 0.0646, s2.loss_cls: 0.0268, s2.acc: 96.5078, s2.loss_bbox: 0.0401, loss: 0.4146
2021-10-10 10:58:38,347 - mmdet - INFO - Epoch [19][250/488]	lr: 1.000e-04, eta: 2:36:26, time: 1.824, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0195, s0.loss_cls: 0.1157, s0.acc: 95.9312, s0.loss_bbox: 0.0651, s1.loss_cls: 0.0499, s1.acc: 96.6274, s1.loss_bbox: 0.0616, s2.loss_cls: 0.0257, s2.acc: 96.5629, s2.loss_bbox: 0.0393, loss: 0.3884
2021-10-10 11:00:07,561 - mmdet - INFO - Epoch [19][300/488]	lr: 1.000e-04, eta: 2:35:06, time: 1.784, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0122, loss_rpn_bbox: 0.0231, s0.loss_cls: 0.1241, s0.acc: 95.7485, s0.loss_bbox: 0.0699, s1.loss_cls: 0.0527, s1.acc: 96.5450, s1.loss_bbox: 0.0647, s2.loss_cls: 0.0263, s2.acc: 96.5989, s2.loss_bbox: 0.0414, loss: 0.4142
2021-10-10 11:01:36,683 - mmdet - INFO - Epoch [19][350/488]	lr: 1.000e-04, eta: 2:33:45, time: 1.782, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.1276, s0.acc: 95.6641, s0.loss_bbox: 0.0679, s1.loss_cls: 0.0532, s1.acc: 96.4838, s1.loss_bbox: 0.0607, s2.loss_cls: 0.0263, s2.acc: 96.5588, s2.loss_bbox: 0.0393, loss: 0.4098
2021-10-10 11:03:07,919 - mmdet - INFO - Epoch [19][400/488]	lr: 1.000e-04, eta: 2:32:26, time: 1.825, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0185, s0.loss_cls: 0.1112, s0.acc: 96.2876, s0.loss_bbox: 0.0616, s1.loss_cls: 0.0476, s1.acc: 96.8887, s1.loss_bbox: 0.0568, s2.loss_cls: 0.0239, s2.acc: 96.8292, s2.loss_bbox: 0.0356, loss: 0.3664
2021-10-10 11:04:37,174 - mmdet - INFO - Epoch [19][450/488]	lr: 1.000e-04, eta: 2:31:05, time: 1.785, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0230, s0.loss_cls: 0.1262, s0.acc: 95.6494, s0.loss_bbox: 0.0721, s1.loss_cls: 0.0539, s1.acc: 96.4871, s1.loss_bbox: 0.0658, s2.loss_cls: 0.0279, s2.acc: 96.3578, s2.loss_bbox: 0.0423, loss: 0.4232
2021-10-10 11:05:46,960 - mmdet - INFO - Saving checkpoint at 19 epochs
2021-10-10 11:07:35,878 - mmdet - INFO - Evaluating bbox...
2021-10-10 11:07:39,465 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 11:07:39,465 - mmdet - INFO - Epoch(val) [19][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5070, bbox_mAP_75: 0.3930, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0740, bbox_mAP_l: 0.4390, bbox_mAP_copypaste: 0.362 0.507 0.393 0.028 0.074 0.439
2021-10-10 11:09:13,419 - mmdet - INFO - Epoch [20][50/488]	lr: 1.000e-04, eta: 2:28:07, time: 1.879, data_time: 0.072, memory: 25184, loss_rpn_cls: 0.0112, loss_rpn_bbox: 0.0204, s0.loss_cls: 0.1228, s0.acc: 95.8071, s0.loss_bbox: 0.0681, s1.loss_cls: 0.0514, s1.acc: 96.6436, s1.loss_bbox: 0.0627, s2.loss_cls: 0.0260, s2.acc: 96.6602, s2.loss_bbox: 0.0409, loss: 0.4034
2021-10-10 11:10:42,468 - mmdet - INFO - Epoch [20][100/488]	lr: 1.000e-04, eta: 2:26:47, time: 1.781, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0112, loss_rpn_bbox: 0.0194, s0.loss_cls: 0.1138, s0.acc: 96.1211, s0.loss_bbox: 0.0660, s1.loss_cls: 0.0484, s1.acc: 96.8280, s1.loss_bbox: 0.0604, s2.loss_cls: 0.0245, s2.acc: 96.8958, s2.loss_bbox: 0.0386, loss: 0.3823
2021-10-10 11:12:12,812 - mmdet - INFO - Epoch [20][150/488]	lr: 1.000e-04, eta: 2:25:27, time: 1.807, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0206, s0.loss_cls: 0.1124, s0.acc: 96.1787, s0.loss_bbox: 0.0629, s1.loss_cls: 0.0483, s1.acc: 96.8391, s1.loss_bbox: 0.0583, s2.loss_cls: 0.0241, s2.acc: 96.8991, s2.loss_bbox: 0.0366, loss: 0.3748
2021-10-10 11:13:44,172 - mmdet - INFO - Epoch [20][200/488]	lr: 1.000e-04, eta: 2:24:07, time: 1.827, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0224, s0.loss_cls: 0.1290, s0.acc: 95.5527, s0.loss_bbox: 0.0732, s1.loss_cls: 0.0560, s1.acc: 96.3310, s1.loss_bbox: 0.0663, s2.loss_cls: 0.0285, s2.acc: 96.2857, s2.loss_bbox: 0.0422, loss: 0.4312
2021-10-10 11:15:13,037 - mmdet - INFO - Epoch [20][250/488]	lr: 1.000e-04, eta: 2:22:46, time: 1.777, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0177, s0.loss_cls: 0.1077, s0.acc: 96.3203, s0.loss_bbox: 0.0584, s1.loss_cls: 0.0457, s1.acc: 97.0389, s1.loss_bbox: 0.0545, s2.loss_cls: 0.0229, s2.acc: 97.1033, s2.loss_bbox: 0.0361, loss: 0.3542
2021-10-10 11:16:44,455 - mmdet - INFO - Epoch [20][300/488]	lr: 1.000e-04, eta: 2:21:27, time: 1.828, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.1188, s0.acc: 96.0347, s0.loss_bbox: 0.0685, s1.loss_cls: 0.0488, s1.acc: 96.8595, s1.loss_bbox: 0.0599, s2.loss_cls: 0.0242, s2.acc: 96.9348, s2.loss_bbox: 0.0387, loss: 0.3930
2021-10-10 11:18:13,898 - mmdet - INFO - Epoch [20][350/488]	lr: 1.000e-04, eta: 2:20:06, time: 1.789, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0215, s0.loss_cls: 0.1162, s0.acc: 95.9961, s0.loss_bbox: 0.0646, s1.loss_cls: 0.0491, s1.acc: 96.7419, s1.loss_bbox: 0.0601, s2.loss_cls: 0.0248, s2.acc: 96.7504, s2.loss_bbox: 0.0379, loss: 0.3851
2021-10-10 11:19:44,869 - mmdet - INFO - Epoch [20][400/488]	lr: 1.000e-04, eta: 2:18:46, time: 1.819, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.1263, s0.acc: 95.7100, s0.loss_bbox: 0.0683, s1.loss_cls: 0.0535, s1.acc: 96.4393, s1.loss_bbox: 0.0630, s2.loss_cls: 0.0264, s2.acc: 96.4384, s2.loss_bbox: 0.0406, loss: 0.4123
2021-10-10 11:21:15,782 - mmdet - INFO - Epoch [20][450/488]	lr: 1.000e-04, eta: 2:17:26, time: 1.818, data_time: 0.023, memory: 25184, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0200, s0.loss_cls: 0.1158, s0.acc: 96.0435, s0.loss_bbox: 0.0627, s1.loss_cls: 0.0499, s1.acc: 96.6046, s1.loss_bbox: 0.0598, s2.loss_cls: 0.0252, s2.acc: 96.5574, s2.loss_bbox: 0.0392, loss: 0.3837
2021-10-10 11:22:23,375 - mmdet - INFO - Saving checkpoint at 20 epochs
2021-10-10 11:24:12,397 - mmdet - INFO - Evaluating bbox...
2021-10-10 11:24:16,205 - mmdet - INFO - Exp name: k-fold_1.py
2021-10-10 11:24:16,205 - mmdet - INFO - Epoch(val) [20][986]	bbox_mAP: 0.3620, bbox_mAP_50: 0.5060, bbox_mAP_75: 0.3930, bbox_mAP_s: 0.0280, bbox_mAP_m: 0.0730, bbox_mAP_l: 0.4390, bbox_mAP_copypaste: 0.362 0.506 0.393 0.028 0.073 0.439
2021-10-10 11:25:50,073 - mmdet - INFO - Epoch [21][50/488]	lr: 1.000e-04, eta: 2:14:32, time: 1.877, data_time: 0.072, memory: 25184, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0214, s0.loss_cls: 0.1201, s0.acc: 95.9053, s0.loss_bbox: 0.0682, s1.loss_cls: 0.0515, s1.acc: 96.6108, s1.loss_bbox: 0.0615, s2.loss_cls: 0.0258, s2.acc: 96.6555, s2.loss_bbox: 0.0392, loss: 0.4001
2021-10-10 11:27:18,711 - mmdet - INFO - Epoch [21][100/488]	lr: 1.000e-04, eta: 2:13:11, time: 1.773, data_time: 0.019, memory: 25184, loss_rpn_cls: 0.0121, loss_rpn_bbox: 0.0185, s0.loss_cls: 0.1109, s0.acc: 96.2119, s0.loss_bbox: 0.0655, s1.loss_cls: 0.0463, s1.acc: 97.0196, s1.loss_bbox: 0.0610, s2.loss_cls: 0.0234, s2.acc: 96.9589, s2.loss_bbox: 0.0396, loss: 0.3772
2021-10-10 11:28:50,463 - mmdet - INFO - Epoch [21][150/488]	lr: 1.000e-04, eta: 2:11:51, time: 1.835, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0112, loss_rpn_bbox: 0.0213, s0.loss_cls: 0.1156, s0.acc: 96.0571, s0.loss_bbox: 0.0652, s1.loss_cls: 0.0495, s1.acc: 96.7857, s1.loss_bbox: 0.0606, s2.loss_cls: 0.0251, s2.acc: 96.7036, s2.loss_bbox: 0.0387, loss: 0.3871
2021-10-10 11:30:21,734 - mmdet - INFO - Epoch [21][200/488]	lr: 1.000e-04, eta: 2:10:31, time: 1.825, data_time: 0.022, memory: 25184, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0185, s0.loss_cls: 0.1131, s0.acc: 96.1479, s0.loss_bbox: 0.0646, s1.loss_cls: 0.0481, s1.acc: 96.8736, s1.loss_bbox: 0.0582, s2.loss_cls: 0.0238, s2.acc: 96.9467, s2.loss_bbox: 0.0368, loss: 0.3740
2021-10-10 11:31:50,479 - mmdet - INFO - Epoch [21][250/488]	lr: 1.000e-04, eta: 2:09:10, time: 1.775, data_time: 0.020, memory: 25184, loss_rpn_cls: 0.0134, loss_rpn_bbox: 0.0224, s0.loss_cls: 0.1266, s0.acc: 95.6997, s0.loss_bbox: 0.0689, s1.loss_cls: 0.0534, s1.acc: 96.4550, s1.loss_bbox: 0.0625, s2.loss_cls: 0.0273, s2.acc: 96.3885, s2.loss_bbox: 0.0407, loss: 0.4151
2021-10-10 11:33:21,538 - mmdet - INFO - Epoch [21][300/488]	lr: 1.000e-04, eta: 2:07:49, time: 1.821, data_time: 0.021, memory: 25184, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0230, s0.loss_cls: 0.1237, s0.acc: 95.8525, s0.loss_bbox: 0.0671, s1.loss_cls: 0.0524, s1.acc: 96.6397, s1.loss_bbox: 0.0613, s2.loss_cls: 0.0262, s2.acc: 96.6133, s2.loss_bbox: 0.0400, loss: 0.4055
