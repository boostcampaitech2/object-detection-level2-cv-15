{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.15.1+2577e37", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(type='FocalLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='FocalLoss',\n                    use_sigmoid=True,\n                    gamma=2.0,\n                    alpha=0.25,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='FocalLoss',\n                    use_sigmoid=True,\n                    gamma=2.0,\n                    alpha=0.25,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='FocalLoss',\n                    use_sigmoid=True,\n                    gamma=2.0,\n                    alpha=0.25,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../dataset/test.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/final3'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "final3.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 6669, "data_time": 0.05569, "loss_rpn_cls": 196.59471, "loss_rpn_bbox": 1.1472, "s0.loss_cls": 1.26849, "s0.acc": 79.52051, "s0.loss_bbox": 0.23817, "s1.loss_cls": 0.5658, "s1.acc": 71.41113, "s1.loss_bbox": 0.0959, "s2.loss_cls": 0.26537, "s2.acc": 83.04688, "s2.loss_bbox": 0.02687, "loss": 200.2025, "time": 0.62334}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 6669, "data_time": 0.01185, "loss_rpn_cls": 1.7734, "loss_rpn_bbox": 0.47815, "s0.loss_cls": 0.07736, "s0.acc": 94.67285, "s0.loss_bbox": 0.12187, "s1.loss_cls": 0.03585, "s1.acc": 97.96973, "s1.loss_bbox": 0.03712, "s2.loss_cls": 0.01162, "s2.acc": 98.79688, "s2.loss_bbox": 0.01043, "loss": 2.54579, "time": 0.57835}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0003, "memory": 6669, "data_time": 0.0117, "loss_rpn_cls": 1.58681, "loss_rpn_bbox": 0.60297, "s0.loss_cls": 0.09856, "s0.acc": 94.63281, "s0.loss_bbox": 0.1309, "s1.loss_cls": 0.02276, "s1.acc": 97.82812, "s1.loss_bbox": 0.03515, "s2.loss_cls": 0.0097, "s2.acc": 98.69824, "s2.loss_bbox": 0.00887, "loss": 2.49572, "time": 0.57012}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0004, "memory": 6669, "data_time": 0.01166, "loss_rpn_cls": 0.80722, "loss_rpn_bbox": 0.48125, "s0.loss_cls": 0.06023, "s0.acc": 94.49414, "s0.loss_bbox": 0.12895, "s1.loss_cls": 0.01789, "s1.acc": 97.43652, "s1.loss_bbox": 0.04014, "s2.loss_cls": 0.00635, "s2.acc": 98.69336, "s2.loss_bbox": 0.00576, "loss": 1.54779, "time": 0.5758}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0005, "memory": 6669, "data_time": 0.01206, "loss_rpn_cls": 0.74876, "loss_rpn_bbox": 0.47628, "s0.loss_cls": 0.06379, "s0.acc": 93.3877, "s0.loss_bbox": 0.15523, "s1.loss_cls": 0.0188, "s1.acc": 96.95215, "s1.loss_bbox": 0.04684, "s2.loss_cls": 0.00671, "s2.acc": 98.39648, "s2.loss_bbox": 0.00682, "loss": 1.52324, "time": 0.57556}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0006, "memory": 6669, "data_time": 0.01237, "loss_rpn_cls": 0.75055, "loss_rpn_bbox": 0.47164, "s0.loss_cls": 0.06144, "s0.acc": 93.5752, "s0.loss_bbox": 0.15208, "s1.loss_cls": 0.01789, "s1.acc": 97.07715, "s1.loss_bbox": 0.04606, "s2.loss_cls": 0.00595, "s2.acc": 98.51074, "s2.loss_bbox": 0.00652, "loss": 1.51213, "time": 0.57367}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0007, "memory": 6669, "data_time": 0.01207, "loss_rpn_cls": 0.94722, "loss_rpn_bbox": 0.51282, "s0.loss_cls": 0.07481, "s0.acc": 92.83008, "s0.loss_bbox": 0.17017, "s1.loss_cls": 0.02419, "s1.acc": 96.62695, "s1.loss_bbox": 0.05279, "s2.loss_cls": 0.00801, "s2.acc": 98.23828, "s2.loss_bbox": 0.00832, "loss": 1.79833, "time": 0.57708}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0008, "memory": 6669, "data_time": 0.01326, "loss_rpn_cls": 1.12165, "loss_rpn_bbox": 0.65216, "s0.loss_cls": 0.08168, "s0.acc": 94.43066, "s0.loss_bbox": 0.14347, "s1.loss_cls": 0.02172, "s1.acc": 97.97363, "s1.loss_bbox": 0.03467, "s2.loss_cls": 0.00747, "s2.acc": 98.83887, "s2.loss_bbox": 0.00693, "loss": 2.06974, "time": 0.57109}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0009, "memory": 6669, "data_time": 0.01295, "loss_rpn_cls": 0.86037, "loss_rpn_bbox": 0.55708, "s0.loss_cls": 0.0634, "s0.acc": 94.26172, "s0.loss_bbox": 0.14412, "s1.loss_cls": 0.01974, "s1.acc": 97.37988, "s1.loss_bbox": 0.03951, "s2.loss_cls": 0.00716, "s2.acc": 98.5752, "s2.loss_bbox": 0.00551, "loss": 1.6969, "time": 0.57405}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.001, "memory": 6669, "data_time": 0.01241, "loss_rpn_cls": 0.73619, "loss_rpn_bbox": 0.48403, "s0.loss_cls": 0.06018, "s0.acc": 93.58398, "s0.loss_bbox": 0.15716, "s1.loss_cls": 0.01873, "s1.acc": 97.05371, "s1.loss_bbox": 0.04763, "s2.loss_cls": 0.00614, "s2.acc": 98.5332, "s2.loss_bbox": 0.00682, "loss": 1.51688, "time": 0.56955}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.001, "memory": 6669, "data_time": 0.01233, "loss_rpn_cls": 0.80157, "loss_rpn_bbox": 0.45787, "s0.loss_cls": 0.06104, "s0.acc": 93.71289, "s0.loss_bbox": 0.15017, "s1.loss_cls": 0.01781, "s1.acc": 97.1748, "s1.loss_bbox": 0.0457, "s2.loss_cls": 0.00568, "s2.acc": 98.61719, "s2.loss_bbox": 0.00578, "loss": 1.54562, "time": 0.56814}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.001, "memory": 6669, "data_time": 0.01255, "loss_rpn_cls": 0.71879, "loss_rpn_bbox": 0.48775, "s0.loss_cls": 0.05971, "s0.acc": 93.27344, "s0.loss_bbox": 0.15599, "s1.loss_cls": 0.01882, "s1.acc": 96.65723, "s1.loss_bbox": 0.05567, "s2.loss_cls": 0.0061, "s2.acc": 98.39648, "s2.loss_bbox": 0.0082, "loss": 1.51103, "time": 0.57012}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.001, "memory": 6669, "data_time": 0.0127, "loss_rpn_cls": 0.77224, "loss_rpn_bbox": 0.46935, "s0.loss_cls": 0.06035, "s0.acc": 93.39453, "s0.loss_bbox": 0.14812, "s1.loss_cls": 0.01933, "s1.acc": 96.48047, "s1.loss_bbox": 0.05837, "s2.loss_cls": 0.00619, "s2.acc": 98.28613, "s2.loss_bbox": 0.00943, "loss": 1.54338, "time": 0.57184}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.001, "memory": 6669, "data_time": 0.01245, "loss_rpn_cls": 0.69939, "loss_rpn_bbox": 0.44559, "s0.loss_cls": 0.0583, "s0.acc": 93.3916, "s0.loss_bbox": 0.14057, "s1.loss_cls": 0.0207, "s1.acc": 96.02832, "s1.loss_bbox": 0.06633, "s2.loss_cls": 0.00691, "s2.acc": 98.00586, "s2.loss_bbox": 0.0131, "loss": 1.45089, "time": 0.57511}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.001, "memory": 6669, "data_time": 0.01225, "loss_rpn_cls": 0.69306, "loss_rpn_bbox": 0.44782, "s0.loss_cls": 0.06115, "s0.acc": 93.03906, "s0.loss_bbox": 0.15247, "s1.loss_cls": 0.02081, "s1.acc": 96.08594, "s1.loss_bbox": 0.06392, "s2.loss_cls": 0.0068, "s2.acc": 97.97363, "s2.loss_bbox": 0.01241, "loss": 1.45843, "time": 0.57375}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.001, "memory": 6669, "data_time": 0.01215, "loss_rpn_cls": 0.67249, "loss_rpn_bbox": 0.4815, "s0.loss_cls": 0.05825, "s0.acc": 93.32031, "s0.loss_bbox": 0.14372, "s1.loss_cls": 0.02088, "s1.acc": 95.98633, "s1.loss_bbox": 0.06497, "s2.loss_cls": 0.00695, "s2.acc": 97.8623, "s2.loss_bbox": 0.01432, "loss": 1.46307, "time": 0.57807}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.001, "memory": 6669, "data_time": 0.01211, "loss_rpn_cls": 0.66861, "loss_rpn_bbox": 0.48027, "s0.loss_cls": 0.05885, "s0.acc": 93.15039, "s0.loss_bbox": 0.14693, "s1.loss_cls": 0.02163, "s1.acc": 95.8584, "s1.loss_bbox": 0.0689, "s2.loss_cls": 0.00704, "s2.acc": 97.84668, "s2.loss_bbox": 0.01504, "loss": 1.46728, "time": 0.57889}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.001, "memory": 6669, "data_time": 0.01199, "loss_rpn_cls": 0.68483, "loss_rpn_bbox": 0.47174, "s0.loss_cls": 0.06123, "s0.acc": 92.82812, "s0.loss_bbox": 0.15428, "s1.loss_cls": 0.02228, "s1.acc": 95.60938, "s1.loss_bbox": 0.07174, "s2.loss_cls": 0.00737, "s2.acc": 97.61719, "s2.loss_bbox": 0.01618, "loss": 1.48965, "time": 0.57203}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.001, "memory": 6669, "data_time": 0.01206, "loss_rpn_cls": 0.67112, "loss_rpn_bbox": 0.48268, "s0.loss_cls": 0.05439, "s0.acc": 93.70801, "s0.loss_bbox": 0.13456, "s1.loss_cls": 0.01985, "s1.acc": 95.98535, "s1.loss_bbox": 0.06535, "s2.loss_cls": 0.00669, "s2.acc": 97.76465, "s2.loss_bbox": 0.01609, "loss": 1.45073, "time": 0.57341}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.001, "memory": 6669, "data_time": 0.01226, "loss_rpn_cls": 0.67656, "loss_rpn_bbox": 0.51932, "s0.loss_cls": 0.06102, "s0.acc": 92.82422, "s0.loss_bbox": 0.15115, "s1.loss_cls": 0.02273, "s1.acc": 95.43164, "s1.loss_bbox": 0.07487, "s2.loss_cls": 0.00766, "s2.acc": 97.56641, "s2.loss_bbox": 0.01633, "loss": 1.52964, "time": 0.57374}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.001, "memory": 6669, "data_time": 0.01228, "loss_rpn_cls": 0.68362, "loss_rpn_bbox": 0.46919, "s0.loss_cls": 0.05483, "s0.acc": 93.69434, "s0.loss_bbox": 0.13018, "s1.loss_cls": 0.02052, "s1.acc": 95.84766, "s1.loss_bbox": 0.0673, "s2.loss_cls": 0.00705, "s2.acc": 97.67676, "s2.loss_bbox": 0.01655, "loss": 1.44923, "time": 0.57214}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.001, "memory": 6669, "data_time": 0.0123, "loss_rpn_cls": 0.68508, "loss_rpn_bbox": 0.47292, "s0.loss_cls": 0.05219, "s0.acc": 93.9375, "s0.loss_bbox": 0.1247, "s1.loss_cls": 0.01938, "s1.acc": 96.04785, "s1.loss_bbox": 0.0639, "s2.loss_cls": 0.00667, "s2.acc": 97.83594, "s2.loss_bbox": 0.0149, "loss": 1.43973, "time": 0.57685}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.001, "memory": 6669, "data_time": 0.0121, "loss_rpn_cls": 0.65706, "loss_rpn_bbox": 0.45524, "s0.loss_cls": 0.05994, "s0.acc": 92.66602, "s0.loss_bbox": 0.15144, "s1.loss_cls": 0.02313, "s1.acc": 95.06348, "s1.loss_bbox": 0.08132, "s2.loss_cls": 0.00803, "s2.acc": 97.23535, "s2.loss_bbox": 0.02087, "loss": 1.45702, "time": 0.57266}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.001, "memory": 6669, "data_time": 0.01222, "loss_rpn_cls": 0.64341, "loss_rpn_bbox": 0.46175, "s0.loss_cls": 0.05849, "s0.acc": 92.84668, "s0.loss_bbox": 0.14542, "s1.loss_cls": 0.02281, "s1.acc": 95.0752, "s1.loss_bbox": 0.08062, "s2.loss_cls": 0.0081, "s2.acc": 97.19336, "s2.loss_bbox": 0.02097, "loss": 1.44156, "time": 0.57409}
{"mode": "val", "epoch": 1, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.006, "bbox_mAP_50": 0.018, "bbox_mAP_75": 0.003, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.008, "bbox_mAP_copypaste": "0.006 0.018 0.003 0.000 0.000 0.008"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.001, "memory": 6669, "data_time": 0.05643, "loss_rpn_cls": 0.64867, "loss_rpn_bbox": 0.42325, "s0.loss_cls": 0.05738, "s0.acc": 92.83496, "s0.loss_bbox": 0.14395, "s1.loss_cls": 0.02227, "s1.acc": 95.00879, "s1.loss_bbox": 0.07835, "s2.loss_cls": 0.00813, "s2.acc": 96.95703, "s2.loss_bbox": 0.0233, "loss": 1.40527, "time": 0.61849}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 6669, "data_time": 0.01169, "loss_rpn_cls": 0.67806, "loss_rpn_bbox": 0.44007, "s0.loss_cls": 0.06593, "s0.acc": 92.12793, "s0.loss_bbox": 0.15805, "s1.loss_cls": 0.02614, "s1.acc": 94.52832, "s1.loss_bbox": 0.08576, "s2.loss_cls": 0.00938, "s2.acc": 96.71094, "s2.loss_bbox": 0.02373, "loss": 1.48712, "time": 0.57376}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.001, "memory": 6669, "data_time": 0.0118, "loss_rpn_cls": 0.62911, "loss_rpn_bbox": 0.48086, "s0.loss_cls": 0.06311, "s0.acc": 92.08789, "s0.loss_bbox": 0.16467, "s1.loss_cls": 0.02428, "s1.acc": 94.64844, "s1.loss_bbox": 0.08539, "s2.loss_cls": 0.00886, "s2.acc": 96.79102, "s2.loss_bbox": 0.02367, "loss": 1.47994, "time": 0.57412}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 6669, "data_time": 0.01175, "loss_rpn_cls": 0.64576, "loss_rpn_bbox": 0.46591, "s0.loss_cls": 0.06308, "s0.acc": 92.3457, "s0.loss_bbox": 0.15539, "s1.loss_cls": 0.02415, "s1.acc": 94.7373, "s1.loss_bbox": 0.08521, "s2.loss_cls": 0.00859, "s2.acc": 96.91992, "s2.loss_bbox": 0.02324, "loss": 1.47132, "time": 0.57195}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.001, "memory": 6669, "data_time": 0.01195, "loss_rpn_cls": 0.61014, "loss_rpn_bbox": 0.44113, "s0.loss_cls": 0.06022, "s0.acc": 92.2998, "s0.loss_bbox": 0.15377, "s1.loss_cls": 0.02419, "s1.acc": 94.37695, "s1.loss_bbox": 0.0893, "s2.loss_cls": 0.00901, "s2.acc": 96.55371, "s2.loss_bbox": 0.02637, "loss": 1.41414, "time": 0.57488}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 6669, "data_time": 0.01193, "loss_rpn_cls": 0.61359, "loss_rpn_bbox": 0.46156, "s0.loss_cls": 0.06228, "s0.acc": 92.0332, "s0.loss_bbox": 0.15374, "s1.loss_cls": 0.02569, "s1.acc": 93.82422, "s1.loss_bbox": 0.09539, "s2.loss_cls": 0.00974, "s2.acc": 96.05371, "s2.loss_bbox": 0.03055, "loss": 1.45255, "time": 0.57386}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.001, "memory": 6669, "data_time": 0.01198, "loss_rpn_cls": 0.7308, "loss_rpn_bbox": 0.45879, "s0.loss_cls": 0.05684, "s0.acc": 93.33594, "s0.loss_bbox": 0.13351, "s1.loss_cls": 0.02211, "s1.acc": 95.30273, "s1.loss_bbox": 0.07328, "s2.loss_cls": 0.00825, "s2.acc": 97.02148, "s2.loss_bbox": 0.02242, "loss": 1.50599, "time": 0.57346}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.001, "memory": 6669, "data_time": 0.01196, "loss_rpn_cls": 0.65319, "loss_rpn_bbox": 0.43186, "s0.loss_cls": 0.05944, "s0.acc": 92.49902, "s0.loss_bbox": 0.14746, "s1.loss_cls": 0.0245, "s1.acc": 94.44043, "s1.loss_bbox": 0.08664, "s2.loss_cls": 0.00885, "s2.acc": 96.56055, "s2.loss_bbox": 0.02652, "loss": 1.43846, "time": 0.57325}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.001, "memory": 6669, "data_time": 0.0121, "loss_rpn_cls": 0.61947, "loss_rpn_bbox": 0.45742, "s0.loss_cls": 0.06266, "s0.acc": 92.10547, "s0.loss_bbox": 0.15203, "s1.loss_cls": 0.02569, "s1.acc": 93.92383, "s1.loss_bbox": 0.09371, "s2.loss_cls": 0.00967, "s2.acc": 96.14551, "s2.loss_bbox": 0.02968, "loss": 1.45032, "time": 0.58632}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.001, "memory": 6669, "data_time": 0.01201, "loss_rpn_cls": 0.75867, "loss_rpn_bbox": 0.48778, "s0.loss_cls": 0.06247, "s0.acc": 92.78906, "s0.loss_bbox": 0.14184, "s1.loss_cls": 0.02475, "s1.acc": 94.79004, "s1.loss_bbox": 0.0803, "s2.loss_cls": 0.0093, "s2.acc": 96.73047, "s2.loss_bbox": 0.02409, "loss": 1.58921, "time": 0.57149}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.001, "memory": 6669, "data_time": 0.01216, "loss_rpn_cls": 0.70482, "loss_rpn_bbox": 0.49342, "s0.loss_cls": 0.05958, "s0.acc": 92.81836, "s0.loss_bbox": 0.13871, "s1.loss_cls": 0.02444, "s1.acc": 94.63379, "s1.loss_bbox": 0.08186, "s2.loss_cls": 0.00927, "s2.acc": 96.62793, "s2.loss_bbox": 0.02464, "loss": 1.53675, "time": 0.57367}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.001, "memory": 6669, "data_time": 0.01216, "loss_rpn_cls": 0.63571, "loss_rpn_bbox": 0.4459, "s0.loss_cls": 0.06279, "s0.acc": 91.90234, "s0.loss_bbox": 0.15542, "s1.loss_cls": 0.02598, "s1.acc": 93.73242, "s1.loss_bbox": 0.09681, "s2.loss_cls": 0.00995, "s2.acc": 95.98535, "s2.loss_bbox": 0.0307, "loss": 1.46327, "time": 0.57299}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.001, "memory": 6669, "data_time": 0.01217, "loss_rpn_cls": 0.62228, "loss_rpn_bbox": 0.45736, "s0.loss_cls": 0.06311, "s0.acc": 91.93066, "s0.loss_bbox": 0.15086, "s1.loss_cls": 0.0267, "s1.acc": 93.55078, "s1.loss_bbox": 0.09739, "s2.loss_cls": 0.01053, "s2.acc": 95.72852, "s2.loss_bbox": 0.03319, "loss": 1.46142, "time": 0.57358}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.001, "memory": 6669, "data_time": 0.01224, "loss_rpn_cls": 0.62716, "loss_rpn_bbox": 0.47746, "s0.loss_cls": 0.05172, "s0.acc": 93.41211, "s0.loss_bbox": 0.12564, "s1.loss_cls": 0.0223, "s1.acc": 94.58105, "s1.loss_bbox": 0.08343, "s2.loss_cls": 0.00861, "s2.acc": 96.41797, "s2.loss_bbox": 0.02859, "loss": 1.4249, "time": 0.57257}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.001, "memory": 6669, "data_time": 0.01248, "loss_rpn_cls": 0.60403, "loss_rpn_bbox": 0.47752, "s0.loss_cls": 0.05945, "s0.acc": 92.25, "s0.loss_bbox": 0.14705, "s1.loss_cls": 0.02505, "s1.acc": 93.79785, "s1.loss_bbox": 0.09268, "s2.loss_cls": 0.00981, "s2.acc": 95.75195, "s2.loss_bbox": 0.03274, "loss": 1.44831, "time": 0.57339}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.001, "memory": 6669, "data_time": 0.01246, "loss_rpn_cls": 0.62289, "loss_rpn_bbox": 0.44509, "s0.loss_cls": 0.05991, "s0.acc": 92.0752, "s0.loss_bbox": 0.14203, "s1.loss_cls": 0.02692, "s1.acc": 93.25879, "s1.loss_bbox": 0.1001, "s2.loss_cls": 0.01051, "s2.acc": 95.33203, "s2.loss_bbox": 0.03564, "loss": 1.44309, "time": 0.57309}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.001, "memory": 6669, "data_time": 0.0127, "loss_rpn_cls": 0.60255, "loss_rpn_bbox": 0.41537, "s0.loss_cls": 0.06606, "s0.acc": 91.2959, "s0.loss_bbox": 0.16043, "s1.loss_cls": 0.02889, "s1.acc": 92.69336, "s1.loss_bbox": 0.10908, "s2.loss_cls": 0.01149, "s2.acc": 95.00586, "s2.loss_bbox": 0.03987, "loss": 1.43375, "time": 0.57129}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.001, "memory": 6669, "data_time": 0.0127, "loss_rpn_cls": 0.59297, "loss_rpn_bbox": 0.43169, "s0.loss_cls": 0.05979, "s0.acc": 92.16016, "s0.loss_bbox": 0.1401, "s1.loss_cls": 0.02651, "s1.acc": 93.29785, "s1.loss_bbox": 0.0991, "s2.loss_cls": 0.01044, "s2.acc": 95.31836, "s2.loss_bbox": 0.03649, "loss": 1.3971, "time": 0.57093}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.001, "memory": 6669, "data_time": 0.01264, "loss_rpn_cls": 0.59416, "loss_rpn_bbox": 0.4295, "s0.loss_cls": 0.06756, "s0.acc": 90.71387, "s0.loss_bbox": 0.1639, "s1.loss_cls": 0.03021, "s1.acc": 92.11523, "s1.loss_bbox": 0.1178, "s2.loss_cls": 0.01188, "s2.acc": 94.52441, "s2.loss_bbox": 0.04306, "loss": 1.45806, "time": 0.57028}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.001, "memory": 6669, "data_time": 0.01262, "loss_rpn_cls": 0.57674, "loss_rpn_bbox": 0.43859, "s0.loss_cls": 0.05999, "s0.acc": 91.94141, "s0.loss_bbox": 0.14389, "s1.loss_cls": 0.02706, "s1.acc": 93.04297, "s1.loss_bbox": 0.10103, "s2.loss_cls": 0.01101, "s2.acc": 94.92285, "s2.loss_bbox": 0.03823, "loss": 1.39655, "time": 0.57317}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.001, "memory": 6669, "data_time": 0.0127, "loss_rpn_cls": 0.58283, "loss_rpn_bbox": 0.41744, "s0.loss_cls": 0.06175, "s0.acc": 91.6748, "s0.loss_bbox": 0.14989, "s1.loss_cls": 0.02717, "s1.acc": 92.80176, "s1.loss_bbox": 0.10811, "s2.loss_cls": 0.01087, "s2.acc": 94.97168, "s2.loss_bbox": 0.04089, "loss": 1.39894, "time": 0.57009}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.001, "memory": 6669, "data_time": 0.01257, "loss_rpn_cls": 0.60851, "loss_rpn_bbox": 0.42768, "s0.loss_cls": 0.0643, "s0.acc": 91.34375, "s0.loss_bbox": 0.15378, "s1.loss_cls": 0.02894, "s1.acc": 92.57306, "s1.loss_bbox": 0.10945, "s2.loss_cls": 0.01177, "s2.acc": 94.62504, "s2.loss_bbox": 0.04278, "loss": 1.44721, "time": 0.57194}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.001, "memory": 6669, "data_time": 0.01266, "loss_rpn_cls": 0.5855, "loss_rpn_bbox": 0.41908, "s0.loss_cls": 0.06027, "s0.acc": 91.81055, "s0.loss_bbox": 0.143, "s1.loss_cls": 0.02724, "s1.acc": 92.80762, "s1.loss_bbox": 0.10367, "s2.loss_cls": 0.0113, "s2.acc": 94.81641, "s2.loss_bbox": 0.03981, "loss": 1.38987, "time": 0.57358}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.001, "memory": 6669, "data_time": 0.01273, "loss_rpn_cls": 0.59257, "loss_rpn_bbox": 0.44862, "s0.loss_cls": 0.05918, "s0.acc": 91.6748, "s0.loss_bbox": 0.14685, "s1.loss_cls": 0.02654, "s1.acc": 92.84375, "s1.loss_bbox": 0.10315, "s2.loss_cls": 0.01109, "s2.acc": 94.64746, "s2.loss_bbox": 0.04169, "loss": 1.42967, "time": 0.57295}
{"mode": "val", "epoch": 2, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.022, "bbox_mAP_50": 0.047, "bbox_mAP_75": 0.018, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.003, "bbox_mAP_l": 0.028, "bbox_mAP_copypaste": "0.022 0.047 0.018 0.000 0.003 0.028"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.001, "memory": 6669, "data_time": 0.05653, "loss_rpn_cls": 0.57577, "loss_rpn_bbox": 0.40869, "s0.loss_cls": 0.05678, "s0.acc": 92.44922, "s0.loss_bbox": 0.12992, "s1.loss_cls": 0.02631, "s1.acc": 93.08203, "s1.loss_bbox": 0.09642, "s2.loss_cls": 0.01087, "s2.acc": 94.74609, "s2.loss_bbox": 0.03867, "loss": 1.34343, "time": 0.61605}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 6669, "data_time": 0.01199, "loss_rpn_cls": 0.56534, "loss_rpn_bbox": 0.40376, "s0.loss_cls": 0.06036, "s0.acc": 91.49414, "s0.loss_bbox": 0.14606, "s1.loss_cls": 0.02741, "s1.acc": 92.40527, "s1.loss_bbox": 0.10682, "s2.loss_cls": 0.01146, "s2.acc": 94.2959, "s2.loss_bbox": 0.04326, "loss": 1.36448, "time": 0.57026}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.001, "memory": 6669, "data_time": 0.01194, "loss_rpn_cls": 0.55974, "loss_rpn_bbox": 0.41756, "s0.loss_cls": 0.06512, "s0.acc": 90.93262, "s0.loss_bbox": 0.15507, "s1.loss_cls": 0.03006, "s1.acc": 91.87305, "s1.loss_bbox": 0.11361, "s2.loss_cls": 0.01246, "s2.acc": 93.81836, "s2.loss_bbox": 0.04682, "loss": 1.40043, "time": 0.56998}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 6669, "data_time": 0.01212, "loss_rpn_cls": 0.56379, "loss_rpn_bbox": 0.44209, "s0.loss_cls": 0.0644, "s0.acc": 91.00586, "s0.loss_bbox": 0.15599, "s1.loss_cls": 0.02877, "s1.acc": 92.18262, "s1.loss_bbox": 0.10855, "s2.loss_cls": 0.01177, "s2.acc": 94.24805, "s2.loss_bbox": 0.04216, "loss": 1.41751, "time": 0.57078}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.001, "memory": 6669, "data_time": 0.01212, "loss_rpn_cls": 0.58375, "loss_rpn_bbox": 0.41693, "s0.loss_cls": 0.06122, "s0.acc": 91.64648, "s0.loss_bbox": 0.14204, "s1.loss_cls": 0.02791, "s1.acc": 92.45117, "s1.loss_bbox": 0.10502, "s2.loss_cls": 0.01189, "s2.acc": 94.20898, "s2.loss_bbox": 0.04399, "loss": 1.39276, "time": 0.57115}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 6669, "data_time": 0.01218, "loss_rpn_cls": 0.576, "loss_rpn_bbox": 0.43897, "s0.loss_cls": 0.05957, "s0.acc": 91.85352, "s0.loss_bbox": 0.13203, "s1.loss_cls": 0.0275, "s1.acc": 92.36816, "s1.loss_bbox": 0.10083, "s2.loss_cls": 0.01164, "s2.acc": 93.9209, "s2.loss_bbox": 0.04321, "loss": 1.38974, "time": 0.57042}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.001, "memory": 6669, "data_time": 0.01212, "loss_rpn_cls": 0.56067, "loss_rpn_bbox": 0.41055, "s0.loss_cls": 0.06088, "s0.acc": 91.36816, "s0.loss_bbox": 0.14525, "s1.loss_cls": 0.02836, "s1.acc": 92.22555, "s1.loss_bbox": 0.10922, "s2.loss_cls": 0.01199, "s2.acc": 93.99928, "s2.loss_bbox": 0.04468, "loss": 1.3716, "time": 0.5723}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.001, "memory": 6669, "data_time": 0.01244, "loss_rpn_cls": 0.57105, "loss_rpn_bbox": 0.39156, "s0.loss_cls": 0.06544, "s0.acc": 90.99609, "s0.loss_bbox": 0.15236, "s1.loss_cls": 0.03057, "s1.acc": 91.63086, "s1.loss_bbox": 0.11296, "s2.loss_cls": 0.01279, "s2.acc": 93.51758, "s2.loss_bbox": 0.04796, "loss": 1.38469, "time": 0.57177}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.001, "memory": 6669, "data_time": 0.01234, "loss_rpn_cls": 0.54376, "loss_rpn_bbox": 0.37836, "s0.loss_cls": 0.06143, "s0.acc": 91.05078, "s0.loss_bbox": 0.14865, "s1.loss_cls": 0.02864, "s1.acc": 91.78428, "s1.loss_bbox": 0.1121, "s2.loss_cls": 0.01233, "s2.acc": 93.57839, "s2.loss_bbox": 0.04915, "loss": 1.33442, "time": 0.56817}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.001, "memory": 6669, "data_time": 0.01216, "loss_rpn_cls": 0.54048, "loss_rpn_bbox": 0.40144, "s0.loss_cls": 0.06702, "s0.acc": 90.44141, "s0.loss_bbox": 0.16045, "s1.loss_cls": 0.03065, "s1.acc": 91.49512, "s1.loss_bbox": 0.11652, "s2.loss_cls": 0.01297, "s2.acc": 93.35938, "s2.loss_bbox": 0.04839, "loss": 1.37793, "time": 0.56974}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.001, "memory": 6669, "data_time": 0.0119, "loss_rpn_cls": 0.56779, "loss_rpn_bbox": 0.37263, "s0.loss_cls": 0.06781, "s0.acc": 90.56055, "s0.loss_bbox": 0.15951, "s1.loss_cls": 0.03106, "s1.acc": 91.60514, "s1.loss_bbox": 0.11587, "s2.loss_cls": 0.01286, "s2.acc": 93.54199, "s2.loss_bbox": 0.04824, "loss": 1.37577, "time": 0.57061}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.001, "memory": 6669, "data_time": 0.01196, "loss_rpn_cls": 0.55532, "loss_rpn_bbox": 0.36723, "s0.loss_cls": 0.06111, "s0.acc": 91.16992, "s0.loss_bbox": 0.14657, "s1.loss_cls": 0.02819, "s1.acc": 92.03303, "s1.loss_bbox": 0.10504, "s2.loss_cls": 0.01217, "s2.acc": 93.60051, "s2.loss_bbox": 0.0465, "loss": 1.32214, "time": 0.57359}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.001, "memory": 6669, "data_time": 0.01214, "loss_rpn_cls": 0.54564, "loss_rpn_bbox": 0.41491, "s0.loss_cls": 0.05993, "s0.acc": 91.39355, "s0.loss_bbox": 0.14924, "s1.loss_cls": 0.0272, "s1.acc": 92.35645, "s1.loss_bbox": 0.10318, "s2.loss_cls": 0.01157, "s2.acc": 93.90039, "s2.loss_bbox": 0.04379, "loss": 1.35547, "time": 0.57184}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.001, "memory": 6669, "data_time": 0.01207, "loss_rpn_cls": 0.51083, "loss_rpn_bbox": 0.41493, "s0.loss_cls": 0.06016, "s0.acc": 91.2832, "s0.loss_bbox": 0.13852, "s1.loss_cls": 0.02762, "s1.acc": 91.93817, "s1.loss_bbox": 0.10511, "s2.loss_cls": 0.01198, "s2.acc": 93.56524, "s2.loss_bbox": 0.04568, "loss": 1.31484, "time": 0.57206}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.001, "memory": 6669, "data_time": 0.01216, "loss_rpn_cls": 0.52823, "loss_rpn_bbox": 0.37929, "s0.loss_cls": 0.05548, "s0.acc": 91.79004, "s0.loss_bbox": 0.13231, "s1.loss_cls": 0.02539, "s1.acc": 92.53472, "s1.loss_bbox": 0.09647, "s2.loss_cls": 0.01097, "s2.acc": 93.98026, "s2.loss_bbox": 0.04316, "loss": 1.2713, "time": 0.57088}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.001, "memory": 6669, "data_time": 0.01206, "loss_rpn_cls": 0.51085, "loss_rpn_bbox": 0.40065, "s0.loss_cls": 0.06033, "s0.acc": 90.86523, "s0.loss_bbox": 0.14618, "s1.loss_cls": 0.0278, "s1.acc": 91.59961, "s1.loss_bbox": 0.1125, "s2.loss_cls": 0.01219, "s2.acc": 93.18555, "s2.loss_bbox": 0.0502, "loss": 1.32071, "time": 0.56821}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.001, "memory": 6669, "data_time": 0.01242, "loss_rpn_cls": 0.53601, "loss_rpn_bbox": 0.38505, "s0.loss_cls": 0.06128, "s0.acc": 90.86328, "s0.loss_bbox": 0.15004, "s1.loss_cls": 0.02849, "s1.acc": 91.43236, "s1.loss_bbox": 0.11369, "s2.loss_cls": 0.01227, "s2.acc": 93.16406, "s2.loss_bbox": 0.05007, "loss": 1.3369, "time": 0.57}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.001, "memory": 6669, "data_time": 0.01263, "loss_rpn_cls": 0.51579, "loss_rpn_bbox": 0.38355, "s0.loss_cls": 0.06472, "s0.acc": 90.10254, "s0.loss_bbox": 0.15827, "s1.loss_cls": 0.03069, "s1.acc": 90.56502, "s1.loss_bbox": 0.12018, "s2.loss_cls": 0.01347, "s2.acc": 92.28007, "s2.loss_bbox": 0.05523, "loss": 1.34189, "time": 0.57195}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.001, "memory": 6669, "data_time": 0.01259, "loss_rpn_cls": 0.51866, "loss_rpn_bbox": 0.39008, "s0.loss_cls": 0.06252, "s0.acc": 90.42578, "s0.loss_bbox": 0.14835, "s1.loss_cls": 0.02996, "s1.acc": 90.85897, "s1.loss_bbox": 0.11854, "s2.loss_cls": 0.01318, "s2.acc": 92.44718, "s2.loss_bbox": 0.05275, "loss": 1.33403, "time": 0.57085}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.001, "memory": 6669, "data_time": 0.01228, "loss_rpn_cls": 0.53656, "loss_rpn_bbox": 0.40551, "s0.loss_cls": 0.06096, "s0.acc": 91.07617, "s0.loss_bbox": 0.139, "s1.loss_cls": 0.02907, "s1.acc": 91.44696, "s1.loss_bbox": 0.10914, "s2.loss_cls": 0.01253, "s2.acc": 93.06412, "s2.loss_bbox": 0.04682, "loss": 1.33959, "time": 0.57127}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.001, "memory": 6669, "data_time": 0.01239, "loss_rpn_cls": 0.53312, "loss_rpn_bbox": 0.37624, "s0.loss_cls": 0.05938, "s0.acc": 91.20508, "s0.loss_bbox": 0.13644, "s1.loss_cls": 0.02815, "s1.acc": 91.63147, "s1.loss_bbox": 0.10685, "s2.loss_cls": 0.01198, "s2.acc": 93.31438, "s2.loss_bbox": 0.04678, "loss": 1.29894, "time": 0.5749}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.001, "memory": 6669, "data_time": 0.0123, "loss_rpn_cls": 0.53239, "loss_rpn_bbox": 0.39731, "s0.loss_cls": 0.06904, "s0.acc": 89.64258, "s0.loss_bbox": 0.1663, "s1.loss_cls": 0.03234, "s1.acc": 90.39482, "s1.loss_bbox": 0.12678, "s2.loss_cls": 0.01406, "s2.acc": 92.31261, "s2.loss_bbox": 0.05573, "loss": 1.39395, "time": 0.57319}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.001, "memory": 6669, "data_time": 0.01233, "loss_rpn_cls": 0.49392, "loss_rpn_bbox": 0.33899, "s0.loss_cls": 0.05943, "s0.acc": 90.75, "s0.loss_bbox": 0.13912, "s1.loss_cls": 0.0281, "s1.acc": 91.20706, "s1.loss_bbox": 0.11257, "s2.loss_cls": 0.01214, "s2.acc": 92.72842, "s2.loss_bbox": 0.04961, "loss": 1.23388, "time": 0.56977}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.001, "memory": 6669, "data_time": 0.01281, "loss_rpn_cls": 0.48573, "loss_rpn_bbox": 0.38567, "s0.loss_cls": 0.06573, "s0.acc": 89.76953, "s0.loss_bbox": 0.15214, "s1.loss_cls": 0.0313, "s1.acc": 90.34697, "s1.loss_bbox": 0.1185, "s2.loss_cls": 0.01398, "s2.acc": 91.73107, "s2.loss_bbox": 0.05619, "loss": 1.30922, "time": 0.57297}
{"mode": "val", "epoch": 3, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.03, "bbox_mAP_50": 0.062, "bbox_mAP_75": 0.025, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.004, "bbox_mAP_l": 0.037, "bbox_mAP_copypaste": "0.030 0.062 0.025 0.000 0.004 0.037"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.001, "memory": 6669, "data_time": 0.05669, "loss_rpn_cls": 0.5108, "loss_rpn_bbox": 0.38282, "s0.loss_cls": 0.05623, "s0.acc": 91.52734, "s0.loss_bbox": 0.12601, "s1.loss_cls": 0.02711, "s1.acc": 91.74414, "s1.loss_bbox": 0.10411, "s2.loss_cls": 0.01225, "s2.acc": 93.00684, "s2.loss_bbox": 0.04863, "loss": 1.26795, "time": 0.61563}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 6669, "data_time": 0.01211, "loss_rpn_cls": 0.51309, "loss_rpn_bbox": 0.34523, "s0.loss_cls": 0.06523, "s0.acc": 90.41406, "s0.loss_bbox": 0.14514, "s1.loss_cls": 0.03078, "s1.acc": 90.98288, "s1.loss_bbox": 0.11264, "s2.loss_cls": 0.0135, "s2.acc": 92.36606, "s2.loss_bbox": 0.05151, "loss": 1.27711, "time": 0.57064}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.001, "memory": 6669, "data_time": 0.01217, "loss_rpn_cls": 0.4919, "loss_rpn_bbox": 0.35001, "s0.loss_cls": 0.06086, "s0.acc": 90.35352, "s0.loss_bbox": 0.14314, "s1.loss_cls": 0.02961, "s1.acc": 90.56733, "s1.loss_bbox": 0.11733, "s2.loss_cls": 0.01318, "s2.acc": 92.09137, "s2.loss_bbox": 0.05443, "loss": 1.26047, "time": 0.57136}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 6669, "data_time": 0.01225, "loss_rpn_cls": 0.48222, "loss_rpn_bbox": 0.33441, "s0.loss_cls": 0.05679, "s0.acc": 91.31934, "s0.loss_bbox": 0.13167, "s1.loss_cls": 0.02699, "s1.acc": 91.69574, "s1.loss_bbox": 0.10213, "s2.loss_cls": 0.01205, "s2.acc": 93.09557, "s2.loss_bbox": 0.04731, "loss": 1.19357, "time": 0.56966}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.001, "memory": 6669, "data_time": 0.01231, "loss_rpn_cls": 0.4905, "loss_rpn_bbox": 0.37253, "s0.loss_cls": 0.06522, "s0.acc": 89.83301, "s0.loss_bbox": 0.15924, "s1.loss_cls": 0.03113, "s1.acc": 90.48328, "s1.loss_bbox": 0.12517, "s2.loss_cls": 0.01371, "s2.acc": 91.96772, "s2.loss_bbox": 0.05758, "loss": 1.31508, "time": 0.57072}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 6669, "data_time": 0.01204, "loss_rpn_cls": 0.47956, "loss_rpn_bbox": 0.37737, "s0.loss_cls": 0.06494, "s0.acc": 89.96484, "s0.loss_bbox": 0.15725, "s1.loss_cls": 0.03088, "s1.acc": 90.45499, "s1.loss_bbox": 0.11725, "s2.loss_cls": 0.01347, "s2.acc": 92.08712, "s2.loss_bbox": 0.05245, "loss": 1.29317, "time": 0.57169}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.001, "memory": 6669, "data_time": 0.01211, "loss_rpn_cls": 0.4983, "loss_rpn_bbox": 0.34304, "s0.loss_cls": 0.06218, "s0.acc": 90.30176, "s0.loss_bbox": 0.14757, "s1.loss_cls": 0.02916, "s1.acc": 90.93457, "s1.loss_bbox": 0.11311, "s2.loss_cls": 0.01299, "s2.acc": 92.49023, "s2.loss_bbox": 0.05119, "loss": 1.25755, "time": 0.57988}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.001, "memory": 6669, "data_time": 0.01211, "loss_rpn_cls": 0.48488, "loss_rpn_bbox": 0.3389, "s0.loss_cls": 0.06284, "s0.acc": 90.1748, "s0.loss_bbox": 0.14125, "s1.loss_cls": 0.02981, "s1.acc": 90.58292, "s1.loss_bbox": 0.11411, "s2.loss_cls": 0.0136, "s2.acc": 91.92663, "s2.loss_bbox": 0.05488, "loss": 1.24027, "time": 0.5739}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.001, "memory": 6669, "data_time": 0.01221, "loss_rpn_cls": 0.48239, "loss_rpn_bbox": 0.348, "s0.loss_cls": 0.06032, "s0.acc": 90.58203, "s0.loss_bbox": 0.1416, "s1.loss_cls": 0.02846, "s1.acc": 91.01985, "s1.loss_bbox": 0.11187, "s2.loss_cls": 0.01287, "s2.acc": 92.29856, "s2.loss_bbox": 0.05149, "loss": 1.237, "time": 0.5772}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.001, "memory": 6669, "data_time": 0.01208, "loss_rpn_cls": 0.47656, "loss_rpn_bbox": 0.37498, "s0.loss_cls": 0.06025, "s0.acc": 90.67383, "s0.loss_bbox": 0.13971, "s1.loss_cls": 0.02873, "s1.acc": 91.03501, "s1.loss_bbox": 0.11096, "s2.loss_cls": 0.01283, "s2.acc": 92.38268, "s2.loss_bbox": 0.05181, "loss": 1.25583, "time": 0.56876}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.001, "memory": 6669, "data_time": 0.01222, "loss_rpn_cls": 0.47892, "loss_rpn_bbox": 0.35744, "s0.loss_cls": 0.06008, "s0.acc": 90.79492, "s0.loss_bbox": 0.13625, "s1.loss_cls": 0.02858, "s1.acc": 91.12127, "s1.loss_bbox": 0.10801, "s2.loss_cls": 0.01291, "s2.acc": 92.40387, "s2.loss_bbox": 0.05078, "loss": 1.23297, "time": 0.57048}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.001, "memory": 6669, "data_time": 0.01223, "loss_rpn_cls": 0.46436, "loss_rpn_bbox": 0.35421, "s0.loss_cls": 0.05995, "s0.acc": 90.71387, "s0.loss_bbox": 0.13325, "s1.loss_cls": 0.02856, "s1.acc": 91.17624, "s1.loss_bbox": 0.10682, "s2.loss_cls": 0.0131, "s2.acc": 92.27645, "s2.loss_bbox": 0.04956, "loss": 1.2098, "time": 0.56802}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.001, "memory": 6669, "data_time": 0.01213, "loss_rpn_cls": 0.48842, "loss_rpn_bbox": 0.37308, "s0.loss_cls": 0.05672, "s0.acc": 91.1416, "s0.loss_bbox": 0.12337, "s1.loss_cls": 0.02742, "s1.acc": 91.30862, "s1.loss_bbox": 0.10051, "s2.loss_cls": 0.01241, "s2.acc": 92.44152, "s2.loss_bbox": 0.04789, "loss": 1.22982, "time": 0.56669}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.001, "memory": 6669, "data_time": 0.01222, "loss_rpn_cls": 0.46878, "loss_rpn_bbox": 0.35513, "s0.loss_cls": 0.05778, "s0.acc": 90.91797, "s0.loss_bbox": 0.13279, "s1.loss_cls": 0.02804, "s1.acc": 91.13277, "s1.loss_bbox": 0.10527, "s2.loss_cls": 0.01275, "s2.acc": 92.26779, "s2.loss_bbox": 0.05021, "loss": 1.21075, "time": 0.57222}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.001, "memory": 6669, "data_time": 0.01208, "loss_rpn_cls": 0.45942, "loss_rpn_bbox": 0.31763, "s0.loss_cls": 0.05805, "s0.acc": 90.9541, "s0.loss_bbox": 0.13291, "s1.loss_cls": 0.02857, "s1.acc": 91.01133, "s1.loss_bbox": 0.10904, "s2.loss_cls": 0.01288, "s2.acc": 92.22804, "s2.loss_bbox": 0.05163, "loss": 1.17013, "time": 0.57031}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.001, "memory": 6669, "data_time": 0.01251, "loss_rpn_cls": 0.46464, "loss_rpn_bbox": 0.35461, "s0.loss_cls": 0.06057, "s0.acc": 90.22656, "s0.loss_bbox": 0.14512, "s1.loss_cls": 0.02924, "s1.acc": 90.52712, "s1.loss_bbox": 0.11709, "s2.loss_cls": 0.01314, "s2.acc": 91.76982, "s2.loss_bbox": 0.05489, "loss": 1.2393, "time": 0.56958}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.001, "memory": 6669, "data_time": 0.01215, "loss_rpn_cls": 0.46923, "loss_rpn_bbox": 0.32229, "s0.loss_cls": 0.0666, "s0.acc": 89.61426, "s0.loss_bbox": 0.15094, "s1.loss_cls": 0.03212, "s1.acc": 89.93265, "s1.loss_bbox": 0.12064, "s2.loss_cls": 0.01438, "s2.acc": 91.36739, "s2.loss_bbox": 0.05598, "loss": 1.23219, "time": 0.57066}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.001, "memory": 6670, "data_time": 0.01237, "loss_rpn_cls": 0.46038, "loss_rpn_bbox": 0.29807, "s0.loss_cls": 0.05901, "s0.acc": 90.62402, "s0.loss_bbox": 0.13127, "s1.loss_cls": 0.02917, "s1.acc": 90.65701, "s1.loss_bbox": 0.11218, "s2.loss_cls": 0.01357, "s2.acc": 91.70071, "s2.loss_bbox": 0.05553, "loss": 1.15917, "time": 0.57132}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.001, "memory": 6670, "data_time": 0.01222, "loss_rpn_cls": 0.4642, "loss_rpn_bbox": 0.3943, "s0.loss_cls": 0.05919, "s0.acc": 90.58594, "s0.loss_bbox": 0.14041, "s1.loss_cls": 0.02837, "s1.acc": 90.78419, "s1.loss_bbox": 0.11026, "s2.loss_cls": 0.013, "s2.acc": 92.02167, "s2.loss_bbox": 0.05084, "loss": 1.26056, "time": 0.57044}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.001, "memory": 6670, "data_time": 0.01237, "loss_rpn_cls": 0.46441, "loss_rpn_bbox": 0.32885, "s0.loss_cls": 0.05941, "s0.acc": 90.71777, "s0.loss_bbox": 0.13437, "s1.loss_cls": 0.02888, "s1.acc": 90.81836, "s1.loss_bbox": 0.11176, "s2.loss_cls": 0.0131, "s2.acc": 92.02637, "s2.loss_bbox": 0.05158, "loss": 1.19235, "time": 0.57316}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.001, "memory": 6670, "data_time": 0.01227, "loss_rpn_cls": 0.48099, "loss_rpn_bbox": 0.34026, "s0.loss_cls": 0.06008, "s0.acc": 90.69824, "s0.loss_bbox": 0.13069, "s1.loss_cls": 0.02889, "s1.acc": 90.87233, "s1.loss_bbox": 0.1033, "s2.loss_cls": 0.01333, "s2.acc": 92.09617, "s2.loss_bbox": 0.05195, "loss": 1.20949, "time": 0.57598}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.001, "memory": 6670, "data_time": 0.01234, "loss_rpn_cls": 0.481, "loss_rpn_bbox": 0.37151, "s0.loss_cls": 0.05393, "s0.acc": 91.58496, "s0.loss_bbox": 0.12284, "s1.loss_cls": 0.02577, "s1.acc": 91.83604, "s1.loss_bbox": 0.09798, "s2.loss_cls": 0.01172, "s2.acc": 92.9119, "s2.loss_bbox": 0.04456, "loss": 1.20932, "time": 0.57308}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 0.001, "memory": 6670, "data_time": 0.01236, "loss_rpn_cls": 0.44871, "loss_rpn_bbox": 0.36795, "s0.loss_cls": 0.05867, "s0.acc": 90.51367, "s0.loss_bbox": 0.13655, "s1.loss_cls": 0.02808, "s1.acc": 90.89561, "s1.loss_bbox": 0.10893, "s2.loss_cls": 0.01299, "s2.acc": 91.81407, "s2.loss_bbox": 0.05186, "loss": 1.21374, "time": 0.57375}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.001, "memory": 6670, "data_time": 0.01252, "loss_rpn_cls": 0.43599, "loss_rpn_bbox": 0.35194, "s0.loss_cls": 0.05901, "s0.acc": 90.50391, "s0.loss_bbox": 0.13568, "s1.loss_cls": 0.02849, "s1.acc": 90.66676, "s1.loss_bbox": 0.10714, "s2.loss_cls": 0.01333, "s2.acc": 91.65342, "s2.loss_bbox": 0.05254, "loss": 1.18412, "time": 0.57592}
{"mode": "val", "epoch": 4, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.051, "bbox_mAP_50": 0.089, "bbox_mAP_75": 0.05, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.011, "bbox_mAP_l": 0.061, "bbox_mAP_copypaste": "0.051 0.089 0.050 0.004 0.011 0.061"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.001, "memory": 6670, "data_time": 0.05654, "loss_rpn_cls": 0.4394, "loss_rpn_bbox": 0.36531, "s0.loss_cls": 0.06709, "s0.acc": 89.30859, "s0.loss_bbox": 0.15816, "s1.loss_cls": 0.03193, "s1.acc": 89.77035, "s1.loss_bbox": 0.12544, "s2.loss_cls": 0.01436, "s2.acc": 91.4315, "s2.loss_bbox": 0.05751, "loss": 1.25918, "time": 0.61611}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 6670, "data_time": 0.01204, "loss_rpn_cls": 0.43299, "loss_rpn_bbox": 0.32341, "s0.loss_cls": 0.0565, "s0.acc": 91.16992, "s0.loss_bbox": 0.12351, "s1.loss_cls": 0.02742, "s1.acc": 91.15264, "s1.loss_bbox": 0.10527, "s2.loss_cls": 0.01267, "s2.acc": 92.05043, "s2.loss_bbox": 0.05073, "loss": 1.1325, "time": 0.57055}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.001, "memory": 6670, "data_time": 0.012, "loss_rpn_cls": 0.44218, "loss_rpn_bbox": 0.34154, "s0.loss_cls": 0.06099, "s0.acc": 90.19727, "s0.loss_bbox": 0.13498, "s1.loss_cls": 0.03016, "s1.acc": 90.12961, "s1.loss_bbox": 0.1119, "s2.loss_cls": 0.01406, "s2.acc": 91.23606, "s2.loss_bbox": 0.05494, "loss": 1.19075, "time": 0.57223}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 6670, "data_time": 0.01204, "loss_rpn_cls": 0.42765, "loss_rpn_bbox": 0.31912, "s0.loss_cls": 0.05768, "s0.acc": 90.7627, "s0.loss_bbox": 0.12994, "s1.loss_cls": 0.02776, "s1.acc": 90.98263, "s1.loss_bbox": 0.10638, "s2.loss_cls": 0.01296, "s2.acc": 91.74894, "s2.loss_bbox": 0.05161, "loss": 1.13311, "time": 0.56909}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.001, "memory": 6670, "data_time": 0.0122, "loss_rpn_cls": 0.44815, "loss_rpn_bbox": 0.34475, "s0.loss_cls": 0.05761, "s0.acc": 90.78809, "s0.loss_bbox": 0.12649, "s1.loss_cls": 0.02809, "s1.acc": 90.83959, "s1.loss_bbox": 0.104, "s2.loss_cls": 0.0129, "s2.acc": 92.08058, "s2.loss_bbox": 0.04984, "loss": 1.17182, "time": 0.5725}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 6670, "data_time": 0.01198, "loss_rpn_cls": 0.40571, "loss_rpn_bbox": 0.28477, "s0.loss_cls": 0.05839, "s0.acc": 90.58984, "s0.loss_bbox": 0.12987, "s1.loss_cls": 0.02853, "s1.acc": 90.51237, "s1.loss_bbox": 0.11084, "s2.loss_cls": 0.01335, "s2.acc": 91.39434, "s2.loss_bbox": 0.05238, "loss": 1.08384, "time": 0.56886}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.001, "memory": 6670, "data_time": 0.01204, "loss_rpn_cls": 0.45924, "loss_rpn_bbox": 0.33121, "s0.loss_cls": 0.05812, "s0.acc": 90.80566, "s0.loss_bbox": 0.12036, "s1.loss_cls": 0.02851, "s1.acc": 90.81545, "s1.loss_bbox": 0.1015, "s2.loss_cls": 0.0131, "s2.acc": 91.8766, "s2.loss_bbox": 0.05115, "loss": 1.16318, "time": 0.57019}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.001, "memory": 6670, "data_time": 0.0121, "loss_rpn_cls": 0.46009, "loss_rpn_bbox": 0.34225, "s0.loss_cls": 0.05618, "s0.acc": 91.25, "s0.loss_bbox": 0.12363, "s1.loss_cls": 0.027, "s1.acc": 91.46704, "s1.loss_bbox": 0.09929, "s2.loss_cls": 0.01234, "s2.acc": 92.59303, "s2.loss_bbox": 0.04747, "loss": 1.16825, "time": 0.5696}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.001, "memory": 6670, "data_time": 0.01211, "loss_rpn_cls": 0.4213, "loss_rpn_bbox": 0.32295, "s0.loss_cls": 0.05877, "s0.acc": 90.54883, "s0.loss_bbox": 0.12834, "s1.loss_cls": 0.02866, "s1.acc": 90.58984, "s1.loss_bbox": 0.10902, "s2.loss_cls": 0.01327, "s2.acc": 91.67909, "s2.loss_bbox": 0.05272, "loss": 1.13502, "time": 0.56568}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.001, "memory": 6670, "data_time": 0.0121, "loss_rpn_cls": 0.40954, "loss_rpn_bbox": 0.33737, "s0.loss_cls": 0.05859, "s0.acc": 90.57422, "s0.loss_bbox": 0.13034, "s1.loss_cls": 0.02858, "s1.acc": 90.59562, "s1.loss_bbox": 0.10786, "s2.loss_cls": 0.01317, "s2.acc": 91.77078, "s2.loss_bbox": 0.05194, "loss": 1.13741, "time": 0.56837}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.001, "memory": 6670, "data_time": 0.01207, "loss_rpn_cls": 0.42485, "loss_rpn_bbox": 0.33259, "s0.loss_cls": 0.05531, "s0.acc": 91.10449, "s0.loss_bbox": 0.12331, "s1.loss_cls": 0.02742, "s1.acc": 91.08569, "s1.loss_bbox": 0.10248, "s2.loss_cls": 0.01277, "s2.acc": 91.81989, "s2.loss_bbox": 0.05179, "loss": 1.13054, "time": 0.56676}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.001, "memory": 6670, "data_time": 0.01213, "loss_rpn_cls": 0.41241, "loss_rpn_bbox": 0.32681, "s0.loss_cls": 0.06147, "s0.acc": 89.96484, "s0.loss_bbox": 0.13668, "s1.loss_cls": 0.03019, "s1.acc": 90.07321, "s1.loss_bbox": 0.11407, "s2.loss_cls": 0.01399, "s2.acc": 91.06768, "s2.loss_bbox": 0.05512, "loss": 1.15073, "time": 0.57028}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.001, "memory": 6670, "data_time": 0.01212, "loss_rpn_cls": 0.43016, "loss_rpn_bbox": 0.31095, "s0.loss_cls": 0.05909, "s0.acc": 90.50781, "s0.loss_bbox": 0.12643, "s1.loss_cls": 0.02902, "s1.acc": 90.32596, "s1.loss_bbox": 0.10473, "s2.loss_cls": 0.01349, "s2.acc": 91.33314, "s2.loss_bbox": 0.04983, "loss": 1.12369, "time": 0.56951}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.001, "memory": 6670, "data_time": 0.01198, "loss_rpn_cls": 0.45943, "loss_rpn_bbox": 0.3423, "s0.loss_cls": 0.05854, "s0.acc": 90.83887, "s0.loss_bbox": 0.12791, "s1.loss_cls": 0.02806, "s1.acc": 91.03431, "s1.loss_bbox": 0.10141, "s2.loss_cls": 0.0128, "s2.acc": 92.03932, "s2.loss_bbox": 0.04844, "loss": 1.17889, "time": 0.56881}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.001, "memory": 6670, "data_time": 0.01207, "loss_rpn_cls": 0.4387, "loss_rpn_bbox": 0.32402, "s0.loss_cls": 0.05953, "s0.acc": 90.44336, "s0.loss_bbox": 0.13153, "s1.loss_cls": 0.02915, "s1.acc": 90.51586, "s1.loss_bbox": 0.10777, "s2.loss_cls": 0.01369, "s2.acc": 91.27961, "s2.loss_bbox": 0.05452, "loss": 1.15891, "time": 0.56824}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.001, "memory": 6670, "data_time": 0.01208, "loss_rpn_cls": 0.43499, "loss_rpn_bbox": 0.34423, "s0.loss_cls": 0.05922, "s0.acc": 90.50293, "s0.loss_bbox": 0.13317, "s1.loss_cls": 0.02848, "s1.acc": 90.81373, "s1.loss_bbox": 0.10377, "s2.loss_cls": 0.01312, "s2.acc": 91.72163, "s2.loss_bbox": 0.04981, "loss": 1.16678, "time": 0.57012}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.001, "memory": 6670, "data_time": 0.01209, "loss_rpn_cls": 0.42865, "loss_rpn_bbox": 0.34777, "s0.loss_cls": 0.05686, "s0.acc": 90.69238, "s0.loss_bbox": 0.12615, "s1.loss_cls": 0.02792, "s1.acc": 90.86665, "s1.loss_bbox": 0.1035, "s2.loss_cls": 0.01285, "s2.acc": 92.05859, "s2.loss_bbox": 0.05025, "loss": 1.15395, "time": 0.56534}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.001, "memory": 6670, "data_time": 0.012, "loss_rpn_cls": 0.40936, "loss_rpn_bbox": 0.30493, "s0.loss_cls": 0.06302, "s0.acc": 89.59863, "s0.loss_bbox": 0.14213, "s1.loss_cls": 0.03094, "s1.acc": 89.62626, "s1.loss_bbox": 0.11778, "s2.loss_cls": 0.01433, "s2.acc": 90.73442, "s2.loss_bbox": 0.0576, "loss": 1.1401, "time": 0.56857}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.001, "memory": 6670, "data_time": 0.01204, "loss_rpn_cls": 0.42647, "loss_rpn_bbox": 0.34805, "s0.loss_cls": 0.06256, "s0.acc": 90.05664, "s0.loss_bbox": 0.1387, "s1.loss_cls": 0.03007, "s1.acc": 90.27821, "s1.loss_bbox": 0.1118, "s2.loss_cls": 0.01367, "s2.acc": 91.43165, "s2.loss_bbox": 0.05235, "loss": 1.18367, "time": 0.56879}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.001, "memory": 6670, "data_time": 0.01207, "loss_rpn_cls": 0.40964, "loss_rpn_bbox": 0.29402, "s0.loss_cls": 0.05927, "s0.acc": 90.47168, "s0.loss_bbox": 0.13134, "s1.loss_cls": 0.02905, "s1.acc": 90.58348, "s1.loss_bbox": 0.10553, "s2.loss_cls": 0.01344, "s2.acc": 91.39249, "s2.loss_bbox": 0.05176, "loss": 1.09405, "time": 0.57025}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.001, "memory": 6670, "data_time": 0.01215, "loss_rpn_cls": 0.40654, "loss_rpn_bbox": 0.33185, "s0.loss_cls": 0.06126, "s0.acc": 90.04395, "s0.loss_bbox": 0.13765, "s1.loss_cls": 0.02972, "s1.acc": 90.16048, "s1.loss_bbox": 0.11245, "s2.loss_cls": 0.01383, "s2.acc": 91.0031, "s2.loss_bbox": 0.05568, "loss": 1.149, "time": 0.57241}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.001, "memory": 6670, "data_time": 0.01211, "loss_rpn_cls": 0.45952, "loss_rpn_bbox": 0.2939, "s0.loss_cls": 0.05952, "s0.acc": 90.38965, "s0.loss_bbox": 0.13601, "s1.loss_cls": 0.02891, "s1.acc": 90.63297, "s1.loss_bbox": 0.10893, "s2.loss_cls": 0.01334, "s2.acc": 91.74423, "s2.loss_bbox": 0.051, "loss": 1.15113, "time": 0.57066}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 0.001, "memory": 6670, "data_time": 0.01201, "loss_rpn_cls": 0.44583, "loss_rpn_bbox": 0.32083, "s0.loss_cls": 0.05478, "s0.acc": 91.13281, "s0.loss_bbox": 0.11694, "s1.loss_cls": 0.02697, "s1.acc": 91.10703, "s1.loss_bbox": 0.10175, "s2.loss_cls": 0.01262, "s2.acc": 92.04693, "s2.loss_bbox": 0.04832, "loss": 1.12804, "time": 0.56667}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.001, "memory": 6670, "data_time": 0.01204, "loss_rpn_cls": 0.4216, "loss_rpn_bbox": 0.33526, "s0.loss_cls": 0.0581, "s0.acc": 90.62793, "s0.loss_bbox": 0.13094, "s1.loss_cls": 0.02828, "s1.acc": 90.69547, "s1.loss_bbox": 0.10511, "s2.loss_cls": 0.01309, "s2.acc": 91.74285, "s2.loss_bbox": 0.04949, "loss": 1.14188, "time": 0.56759}
{"mode": "val", "epoch": 5, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.063, "bbox_mAP_50": 0.106, "bbox_mAP_75": 0.063, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.012, "bbox_mAP_l": 0.077, "bbox_mAP_copypaste": "0.063 0.106 0.063 0.005 0.012 0.077"}
