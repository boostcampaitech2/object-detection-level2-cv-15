{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.15.1+3ee336b", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='SwinTransformer',\n        embed_dims=96,\n        depths=[2, 2, 6, 2],\n        num_heads=[3, 6, 12, 24],\n        window_size=7,\n        mlp_ratio=4,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.2,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        with_cp=False,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[96, 192, 384, 768],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 0.7, 1.0, 1.5, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../dataset/test.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\npretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'\nwork_dir = './work_dirs/final9'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "final9.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 12892, "data_time": 0.0554, "loss_rpn_cls": 0.66273, "loss_rpn_bbox": 0.05539, "s0.loss_cls": 1.24483, "s0.acc": 78.41602, "s0.loss_bbox": 0.06189, "s1.loss_cls": 0.28689, "s1.acc": 83.33984, "s1.loss_bbox": 0.01513, "s2.loss_cls": 0.2521, "s2.acc": 71.42676, "s2.loss_bbox": 0.00467, "loss": 2.58364, "time": 0.91271}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 12892, "data_time": 0.01174, "loss_rpn_cls": 0.46285, "loss_rpn_bbox": 0.056, "s0.loss_cls": 0.31601, "s0.acc": 95.66113, "s0.loss_bbox": 0.12457, "s1.loss_cls": 0.08613, "s1.acc": 97.94531, "s1.loss_bbox": 0.03705, "s2.loss_cls": 0.03689, "s2.acc": 98.29395, "s2.loss_bbox": 0.00834, "loss": 1.12783, "time": 0.87313}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0003, "memory": 12892, "data_time": 0.01079, "loss_rpn_cls": 0.25101, "loss_rpn_bbox": 0.05684, "s0.loss_cls": 0.29789, "s0.acc": 94.74512, "s0.loss_bbox": 0.14135, "s1.loss_cls": 0.08379, "s1.acc": 97.72168, "s1.loss_bbox": 0.03656, "s2.loss_cls": 0.0302, "s2.acc": 98.67676, "s2.loss_bbox": 0.00736, "loss": 0.90501, "time": 0.86541}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0004, "memory": 12892, "data_time": 0.01058, "loss_rpn_cls": 0.1552, "loss_rpn_bbox": 0.03849, "s0.loss_cls": 0.26449, "s0.acc": 94.93164, "s0.loss_bbox": 0.13704, "s1.loss_cls": 0.07381, "s1.acc": 97.77734, "s1.loss_bbox": 0.03803, "s2.loss_cls": 0.02491, "s2.acc": 98.79785, "s2.loss_bbox": 0.00741, "loss": 0.73937, "time": 0.86016}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0005, "memory": 12892, "data_time": 0.01054, "loss_rpn_cls": 0.14363, "loss_rpn_bbox": 0.04183, "s0.loss_cls": 0.26436, "s0.acc": 94.52246, "s0.loss_bbox": 0.14423, "s1.loss_cls": 0.07488, "s1.acc": 97.57617, "s1.loss_bbox": 0.04138, "s2.loss_cls": 0.02403, "s2.acc": 98.72266, "s2.loss_bbox": 0.0077, "loss": 0.74203, "time": 0.85948}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0006, "memory": 12892, "data_time": 0.01058, "loss_rpn_cls": 0.18163, "loss_rpn_bbox": 0.05133, "s0.loss_cls": 0.29845, "s0.acc": 93.75195, "s0.loss_bbox": 0.15772, "s1.loss_cls": 0.08353, "s1.acc": 97.20801, "s1.loss_bbox": 0.04605, "s2.loss_cls": 0.02787, "s2.acc": 98.44336, "s2.loss_bbox": 0.00852, "loss": 0.85512, "time": 0.86307}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0007, "memory": 12892, "data_time": 0.01093, "loss_rpn_cls": 0.13194, "loss_rpn_bbox": 0.03729, "s0.loss_cls": 0.27084, "s0.acc": 94.16797, "s0.loss_bbox": 0.15103, "s1.loss_cls": 0.07702, "s1.acc": 97.34961, "s1.loss_bbox": 0.04645, "s2.loss_cls": 0.02355, "s2.acc": 98.64551, "s2.loss_bbox": 0.00836, "loss": 0.74648, "time": 0.86097}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0008, "memory": 12892, "data_time": 0.0107, "loss_rpn_cls": 0.16531, "loss_rpn_bbox": 0.05137, "s0.loss_cls": 0.31866, "s0.acc": 93.11816, "s0.loss_bbox": 0.17466, "s1.loss_cls": 0.09496, "s1.acc": 96.7041, "s1.loss_bbox": 0.05773, "s2.loss_cls": 0.02956, "s2.acc": 98.27637, "s2.loss_bbox": 0.01052, "loss": 0.90277, "time": 0.86004}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0009, "memory": 12892, "data_time": 0.0107, "loss_rpn_cls": 0.13451, "loss_rpn_bbox": 0.04316, "s0.loss_cls": 0.27899, "s0.acc": 93.9082, "s0.loss_bbox": 0.15165, "s1.loss_cls": 0.08394, "s1.acc": 96.9502, "s1.loss_bbox": 0.05384, "s2.loss_cls": 0.02584, "s2.acc": 98.45117, "s2.loss_bbox": 0.0098, "loss": 0.78172, "time": 0.86297}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.001, "memory": 12892, "data_time": 0.01146, "loss_rpn_cls": 0.11148, "loss_rpn_bbox": 0.03788, "s0.loss_cls": 0.28133, "s0.acc": 93.6084, "s0.loss_bbox": 0.15894, "s1.loss_cls": 0.0877, "s1.acc": 96.78613, "s1.loss_bbox": 0.05999, "s2.loss_cls": 0.02458, "s2.acc": 98.5166, "s2.loss_bbox": 0.01005, "loss": 0.77194, "time": 0.86546}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.001, "memory": 12892, "data_time": 0.01094, "loss_rpn_cls": 0.10531, "loss_rpn_bbox": 0.04348, "s0.loss_cls": 0.28614, "s0.acc": 93.45898, "s0.loss_bbox": 0.15572, "s1.loss_cls": 0.09122, "s1.acc": 96.47168, "s1.loss_bbox": 0.06266, "s2.loss_cls": 0.02804, "s2.acc": 98.24707, "s2.loss_bbox": 0.01246, "loss": 0.78503, "time": 0.8582}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.001, "memory": 12892, "data_time": 0.01103, "loss_rpn_cls": 0.10173, "loss_rpn_bbox": 0.04065, "s0.loss_cls": 0.2706, "s0.acc": 93.68359, "s0.loss_bbox": 0.15157, "s1.loss_cls": 0.09048, "s1.acc": 96.35547, "s1.loss_bbox": 0.06626, "s2.loss_cls": 0.02631, "s2.acc": 98.31348, "s2.loss_bbox": 0.01282, "loss": 0.76042, "time": 0.85858}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.001, "memory": 12892, "data_time": 0.01046, "loss_rpn_cls": 0.09463, "loss_rpn_bbox": 0.03804, "s0.loss_cls": 0.27265, "s0.acc": 93.54785, "s0.loss_bbox": 0.14936, "s1.loss_cls": 0.09529, "s1.acc": 96.04102, "s1.loss_bbox": 0.07123, "s2.loss_cls": 0.02911, "s2.acc": 98.06348, "s2.loss_bbox": 0.01513, "loss": 0.76544, "time": 0.84826}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.001, "memory": 12892, "data_time": 0.01056, "loss_rpn_cls": 0.09734, "loss_rpn_bbox": 0.04598, "s0.loss_cls": 0.27958, "s0.acc": 93.52832, "s0.loss_bbox": 0.14659, "s1.loss_cls": 0.09592, "s1.acc": 96.06348, "s1.loss_bbox": 0.06952, "s2.loss_cls": 0.03073, "s2.acc": 97.9541, "s2.loss_bbox": 0.01589, "loss": 0.78155, "time": 0.84997}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.001, "memory": 12892, "data_time": 0.01139, "loss_rpn_cls": 0.09118, "loss_rpn_bbox": 0.04712, "s0.loss_cls": 0.28937, "s0.acc": 93.01172, "s0.loss_bbox": 0.16063, "s1.loss_cls": 0.10176, "s1.acc": 95.73633, "s1.loss_bbox": 0.07409, "s2.loss_cls": 0.03327, "s2.acc": 97.69238, "s2.loss_bbox": 0.018, "loss": 0.81541, "time": 0.86421}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.001, "memory": 12892, "data_time": 0.01125, "loss_rpn_cls": 0.09796, "loss_rpn_bbox": 0.05427, "s0.loss_cls": 0.29942, "s0.acc": 92.80078, "s0.loss_bbox": 0.16632, "s1.loss_cls": 0.10954, "s1.acc": 95.30469, "s1.loss_bbox": 0.08175, "s2.loss_cls": 0.03567, "s2.acc": 97.53906, "s2.loss_bbox": 0.01859, "loss": 0.86352, "time": 0.86093}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.001, "memory": 12892, "data_time": 0.01101, "loss_rpn_cls": 0.07778, "loss_rpn_bbox": 0.04121, "s0.loss_cls": 0.27587, "s0.acc": 93.2959, "s0.loss_bbox": 0.15229, "s1.loss_cls": 0.10098, "s1.acc": 95.53809, "s1.loss_bbox": 0.07841, "s2.loss_cls": 0.03344, "s2.acc": 97.59082, "s2.loss_bbox": 0.02032, "loss": 0.78028, "time": 0.85894}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.001, "memory": 12892, "data_time": 0.01129, "loss_rpn_cls": 0.07399, "loss_rpn_bbox": 0.04002, "s0.loss_cls": 0.25949, "s0.acc": 93.75488, "s0.loss_bbox": 0.13835, "s1.loss_cls": 0.0981, "s1.acc": 95.67676, "s1.loss_bbox": 0.07453, "s2.loss_cls": 0.03253, "s2.acc": 97.6709, "s2.loss_bbox": 0.01893, "loss": 0.73594, "time": 0.86264}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.001, "memory": 12892, "data_time": 0.01142, "loss_rpn_cls": 0.09072, "loss_rpn_bbox": 0.04899, "s0.loss_cls": 0.30851, "s0.acc": 92.37598, "s0.loss_bbox": 0.1687, "s1.loss_cls": 0.12077, "s1.acc": 94.49512, "s1.loss_bbox": 0.09478, "s2.loss_cls": 0.04225, "s2.acc": 96.81445, "s2.loss_bbox": 0.02614, "loss": 0.90085, "time": 0.86264}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.001, "memory": 12892, "data_time": 0.01246, "loss_rpn_cls": 0.08606, "loss_rpn_bbox": 0.04583, "s0.loss_cls": 0.33501, "s0.acc": 91.36523, "s0.loss_bbox": 0.18402, "s1.loss_cls": 0.13151, "s1.acc": 93.72461, "s1.loss_bbox": 0.10696, "s2.loss_cls": 0.04615, "s2.acc": 96.47461, "s2.loss_bbox": 0.02866, "loss": 0.9642, "time": 0.86009}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.001, "memory": 12892, "data_time": 0.01322, "loss_rpn_cls": 0.08379, "loss_rpn_bbox": 0.05067, "s0.loss_cls": 0.31072, "s0.acc": 92.13965, "s0.loss_bbox": 0.17949, "s1.loss_cls": 0.121, "s1.acc": 94.34668, "s1.loss_bbox": 0.09704, "s2.loss_cls": 0.04047, "s2.acc": 96.91211, "s2.loss_bbox": 0.02597, "loss": 0.90915, "time": 0.86555}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.001, "memory": 12892, "data_time": 0.01116, "loss_rpn_cls": 0.07624, "loss_rpn_bbox": 0.04549, "s0.loss_cls": 0.28029, "s0.acc": 92.69531, "s0.loss_bbox": 0.15877, "s1.loss_cls": 0.11329, "s1.acc": 94.4043, "s1.loss_bbox": 0.09356, "s2.loss_cls": 0.04131, "s2.acc": 96.64648, "s2.loss_bbox": 0.02898, "loss": 0.83791, "time": 0.85709}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.001, "memory": 12892, "data_time": 0.0115, "loss_rpn_cls": 0.07523, "loss_rpn_bbox": 0.04429, "s0.loss_cls": 0.30293, "s0.acc": 92.24414, "s0.loss_bbox": 0.17109, "s1.loss_cls": 0.12121, "s1.acc": 94.0957, "s1.loss_bbox": 0.10081, "s2.loss_cls": 0.04456, "s2.acc": 96.30859, "s2.loss_bbox": 0.03135, "loss": 0.89147, "time": 0.8567}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.001, "memory": 12892, "data_time": 0.01153, "loss_rpn_cls": 0.08678, "loss_rpn_bbox": 0.04547, "s0.loss_cls": 0.34127, "s0.acc": 91.12305, "s0.loss_bbox": 0.1937, "s1.loss_cls": 0.13606, "s1.acc": 93.23828, "s1.loss_bbox": 0.11407, "s2.loss_cls": 0.0487, "s2.acc": 95.83203, "s2.loss_bbox": 0.03481, "loss": 1.00085, "time": 0.85892}
{"mode": "val", "epoch": 1, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.028, "bbox_mAP_50": 0.074, "bbox_mAP_75": 0.016, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.002, "bbox_mAP_l": 0.035, "bbox_mAP_copypaste": "0.028 0.074 0.016 0.000 0.002 0.035"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.001, "memory": 12892, "data_time": 0.05699, "loss_rpn_cls": 0.07147, "loss_rpn_bbox": 0.04458, "s0.loss_cls": 0.31937, "s0.acc": 91.73926, "s0.loss_bbox": 0.18046, "s1.loss_cls": 0.1327, "s1.acc": 93.45215, "s1.loss_bbox": 0.11032, "s2.loss_cls": 0.04918, "s2.acc": 95.74414, "s2.loss_bbox": 0.03682, "loss": 0.9449, "time": 0.90704}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 12892, "data_time": 0.01101, "loss_rpn_cls": 0.06517, "loss_rpn_bbox": 0.03826, "s0.loss_cls": 0.26887, "s0.acc": 92.96875, "s0.loss_bbox": 0.14695, "s1.loss_cls": 0.11731, "s1.acc": 94.11914, "s1.loss_bbox": 0.09797, "s2.loss_cls": 0.04409, "s2.acc": 96.07422, "s2.loss_bbox": 0.03384, "loss": 0.81246, "time": 0.86113}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.001, "memory": 12892, "data_time": 0.01104, "loss_rpn_cls": 0.0697, "loss_rpn_bbox": 0.04151, "s0.loss_cls": 0.30498, "s0.acc": 91.83887, "s0.loss_bbox": 0.16988, "s1.loss_cls": 0.13148, "s1.acc": 93.28027, "s1.loss_bbox": 0.11025, "s2.loss_cls": 0.05073, "s2.acc": 95.42188, "s2.loss_bbox": 0.03935, "loss": 0.91788, "time": 0.85978}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 12892, "data_time": 0.01116, "loss_rpn_cls": 0.05969, "loss_rpn_bbox": 0.03967, "s0.loss_cls": 0.32603, "s0.acc": 91.31738, "s0.loss_bbox": 0.18494, "s1.loss_cls": 0.1393, "s1.acc": 92.83496, "s1.loss_bbox": 0.12018, "s2.loss_cls": 0.05376, "s2.acc": 95.05371, "s2.loss_bbox": 0.04386, "loss": 0.96743, "time": 0.86622}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.001, "memory": 12892, "data_time": 0.01114, "loss_rpn_cls": 0.06864, "loss_rpn_bbox": 0.04316, "s0.loss_cls": 0.30235, "s0.acc": 91.70703, "s0.loss_bbox": 0.17516, "s1.loss_cls": 0.13088, "s1.acc": 93.25977, "s1.loss_bbox": 0.11443, "s2.loss_cls": 0.05166, "s2.acc": 95.0293, "s2.loss_bbox": 0.04352, "loss": 0.9298, "time": 0.86414}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 12892, "data_time": 0.01173, "loss_rpn_cls": 0.07157, "loss_rpn_bbox": 0.04436, "s0.loss_cls": 0.30989, "s0.acc": 91.84961, "s0.loss_bbox": 0.16446, "s1.loss_cls": 0.13822, "s1.acc": 92.99414, "s1.loss_bbox": 0.11294, "s2.loss_cls": 0.05409, "s2.acc": 95.19141, "s2.loss_bbox": 0.04119, "loss": 0.93674, "time": 0.86922}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.001, "memory": 12892, "data_time": 0.01112, "loss_rpn_cls": 0.06402, "loss_rpn_bbox": 0.05022, "s0.loss_cls": 0.30399, "s0.acc": 91.80762, "s0.loss_bbox": 0.17301, "s1.loss_cls": 0.13262, "s1.acc": 93.03906, "s1.loss_bbox": 0.11478, "s2.loss_cls": 0.05341, "s2.acc": 94.99707, "s2.loss_bbox": 0.04416, "loss": 0.93621, "time": 0.86114}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.001, "memory": 12892, "data_time": 0.01128, "loss_rpn_cls": 0.0611, "loss_rpn_bbox": 0.04044, "s0.loss_cls": 0.31371, "s0.acc": 91.56152, "s0.loss_bbox": 0.1748, "s1.loss_cls": 0.13708, "s1.acc": 92.92969, "s1.loss_bbox": 0.11877, "s2.loss_cls": 0.05232, "s2.acc": 95.12793, "s2.loss_bbox": 0.04337, "loss": 0.94159, "time": 0.86145}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.001, "memory": 12892, "data_time": 0.01148, "loss_rpn_cls": 0.05581, "loss_rpn_bbox": 0.03934, "s0.loss_cls": 0.2925, "s0.acc": 92.375, "s0.loss_bbox": 0.15636, "s1.loss_cls": 0.13082, "s1.acc": 93.40918, "s1.loss_bbox": 0.10865, "s2.loss_cls": 0.05132, "s2.acc": 95.21289, "s2.loss_bbox": 0.04297, "loss": 0.87778, "time": 0.86003}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.001, "memory": 12892, "data_time": 0.01135, "loss_rpn_cls": 0.06995, "loss_rpn_bbox": 0.04738, "s0.loss_cls": 0.30642, "s0.acc": 91.76465, "s0.loss_bbox": 0.16576, "s1.loss_cls": 0.13649, "s1.acc": 92.86816, "s1.loss_bbox": 0.11547, "s2.loss_cls": 0.05609, "s2.acc": 94.65723, "s2.loss_bbox": 0.0454, "loss": 0.94296, "time": 0.86023}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.001, "memory": 12892, "data_time": 0.01187, "loss_rpn_cls": 0.06714, "loss_rpn_bbox": 0.04316, "s0.loss_cls": 0.30321, "s0.acc": 91.7168, "s0.loss_bbox": 0.16684, "s1.loss_cls": 0.13603, "s1.acc": 92.76855, "s1.loss_bbox": 0.11496, "s2.loss_cls": 0.05451, "s2.acc": 94.7168, "s2.loss_bbox": 0.04496, "loss": 0.93079, "time": 0.86278}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.001, "memory": 12892, "data_time": 0.0123, "loss_rpn_cls": 0.07197, "loss_rpn_bbox": 0.04976, "s0.loss_cls": 0.33778, "s0.acc": 90.91309, "s0.loss_bbox": 0.18341, "s1.loss_cls": 0.15022, "s1.acc": 92.12598, "s1.loss_bbox": 0.12293, "s2.loss_cls": 0.05869, "s2.acc": 94.26758, "s2.loss_bbox": 0.04689, "loss": 1.02164, "time": 0.85865}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.001, "memory": 12892, "data_time": 0.01159, "loss_rpn_cls": 0.05781, "loss_rpn_bbox": 0.03431, "s0.loss_cls": 0.28292, "s0.acc": 92.50488, "s0.loss_bbox": 0.14497, "s1.loss_cls": 0.1311, "s1.acc": 93.14551, "s1.loss_bbox": 0.11142, "s2.loss_cls": 0.05348, "s2.acc": 94.70312, "s2.loss_bbox": 0.04692, "loss": 0.86292, "time": 0.85959}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.001, "memory": 12892, "data_time": 0.0114, "loss_rpn_cls": 0.05877, "loss_rpn_bbox": 0.03827, "s0.loss_cls": 0.29507, "s0.acc": 91.90039, "s0.loss_bbox": 0.15546, "s1.loss_cls": 0.1388, "s1.acc": 92.44141, "s1.loss_bbox": 0.11429, "s2.loss_cls": 0.05824, "s2.acc": 94.12305, "s2.loss_bbox": 0.04982, "loss": 0.90872, "time": 0.85789}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.001, "memory": 12892, "data_time": 0.01157, "loss_rpn_cls": 0.0674, "loss_rpn_bbox": 0.04429, "s0.loss_cls": 0.30389, "s0.acc": 91.30566, "s0.loss_bbox": 0.17063, "s1.loss_cls": 0.14133, "s1.acc": 92.21484, "s1.loss_bbox": 0.12627, "s2.loss_cls": 0.0592, "s2.acc": 93.9502, "s2.loss_bbox": 0.05134, "loss": 0.96436, "time": 0.86157}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.001, "memory": 12892, "data_time": 0.01149, "loss_rpn_cls": 0.06888, "loss_rpn_bbox": 0.05256, "s0.loss_cls": 0.31108, "s0.acc": 91.2666, "s0.loss_bbox": 0.18195, "s1.loss_cls": 0.14191, "s1.acc": 92.15918, "s1.loss_bbox": 0.13277, "s2.loss_cls": 0.05754, "s2.acc": 94.11328, "s2.loss_bbox": 0.05209, "loss": 0.99877, "time": 0.86402}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.001, "memory": 12892, "data_time": 0.01206, "loss_rpn_cls": 0.06533, "loss_rpn_bbox": 0.049, "s0.loss_cls": 0.31565, "s0.acc": 91.11621, "s0.loss_bbox": 0.18125, "s1.loss_cls": 0.14982, "s1.acc": 91.70968, "s1.loss_bbox": 0.13925, "s2.loss_cls": 0.06257, "s2.acc": 93.40511, "s2.loss_bbox": 0.05926, "loss": 1.02213, "time": 0.8622}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.001, "memory": 12892, "data_time": 0.01157, "loss_rpn_cls": 0.05307, "loss_rpn_bbox": 0.04194, "s0.loss_cls": 0.27235, "s0.acc": 92.6123, "s0.loss_bbox": 0.15047, "s1.loss_cls": 0.12562, "s1.acc": 93.21002, "s1.loss_bbox": 0.1056, "s2.loss_cls": 0.05369, "s2.acc": 94.64292, "s2.loss_bbox": 0.04625, "loss": 0.84899, "time": 0.86658}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.001, "memory": 12892, "data_time": 0.01166, "loss_rpn_cls": 0.0578, "loss_rpn_bbox": 0.04313, "s0.loss_cls": 0.30845, "s0.acc": 91.52637, "s0.loss_bbox": 0.16843, "s1.loss_cls": 0.14388, "s1.acc": 92.08008, "s1.loss_bbox": 0.12431, "s2.loss_cls": 0.06002, "s2.acc": 93.64746, "s2.loss_bbox": 0.05342, "loss": 0.95944, "time": 0.86201}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.001, "memory": 12892, "data_time": 0.01175, "loss_rpn_cls": 0.05351, "loss_rpn_bbox": 0.04099, "s0.loss_cls": 0.30155, "s0.acc": 91.65234, "s0.loss_bbox": 0.16272, "s1.loss_cls": 0.14255, "s1.acc": 92.31641, "s1.loss_bbox": 0.12163, "s2.loss_cls": 0.06071, "s2.acc": 93.73535, "s2.loss_bbox": 0.05092, "loss": 0.93458, "time": 0.86321}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.001, "memory": 12892, "data_time": 0.01156, "loss_rpn_cls": 0.06154, "loss_rpn_bbox": 0.04048, "s0.loss_cls": 0.31495, "s0.acc": 91.49707, "s0.loss_bbox": 0.17073, "s1.loss_cls": 0.14774, "s1.acc": 92.12896, "s1.loss_bbox": 0.12734, "s2.loss_cls": 0.06213, "s2.acc": 93.7875, "s2.loss_bbox": 0.05509, "loss": 0.97999, "time": 0.86301}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.001, "memory": 12892, "data_time": 0.01168, "loss_rpn_cls": 0.05651, "loss_rpn_bbox": 0.04586, "s0.loss_cls": 0.32203, "s0.acc": 91.28613, "s0.loss_bbox": 0.17875, "s1.loss_cls": 0.14224, "s1.acc": 92.33203, "s1.loss_bbox": 0.12507, "s2.loss_cls": 0.05928, "s2.acc": 93.71777, "s2.loss_bbox": 0.0533, "loss": 0.98305, "time": 0.86249}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.001, "memory": 12892, "data_time": 0.01177, "loss_rpn_cls": 0.06025, "loss_rpn_bbox": 0.03861, "s0.loss_cls": 0.29494, "s0.acc": 91.81348, "s0.loss_bbox": 0.15825, "s1.loss_cls": 0.1426, "s1.acc": 92.05159, "s1.loss_bbox": 0.1255, "s2.loss_cls": 0.06023, "s2.acc": 93.49595, "s2.loss_bbox": 0.05633, "loss": 0.93669, "time": 0.86204}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.001, "memory": 12892, "data_time": 0.01159, "loss_rpn_cls": 0.04848, "loss_rpn_bbox": 0.03069, "s0.loss_cls": 0.28853, "s0.acc": 92.25, "s0.loss_bbox": 0.14884, "s1.loss_cls": 0.13826, "s1.acc": 92.74316, "s1.loss_bbox": 0.11791, "s2.loss_cls": 0.06149, "s2.acc": 93.72949, "s2.loss_bbox": 0.05372, "loss": 0.88792, "time": 0.86133}
{"mode": "val", "epoch": 2, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.105, "bbox_mAP_50": 0.21, "bbox_mAP_75": 0.097, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.013, "bbox_mAP_l": 0.129, "bbox_mAP_copypaste": "0.105 0.210 0.097 0.001 0.013 0.129"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.001, "memory": 12892, "data_time": 0.0571, "loss_rpn_cls": 0.0555, "loss_rpn_bbox": 0.04389, "s0.loss_cls": 0.30087, "s0.acc": 91.49609, "s0.loss_bbox": 0.16794, "s1.loss_cls": 0.13842, "s1.acc": 92.26034, "s1.loss_bbox": 0.12733, "s2.loss_cls": 0.0614, "s2.acc": 93.21973, "s2.loss_bbox": 0.05665, "loss": 0.952, "time": 0.91121}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 12892, "data_time": 0.01144, "loss_rpn_cls": 0.05369, "loss_rpn_bbox": 0.03562, "s0.loss_cls": 0.30085, "s0.acc": 91.63867, "s0.loss_bbox": 0.16155, "s1.loss_cls": 0.14134, "s1.acc": 92.30664, "s1.loss_bbox": 0.1217, "s2.loss_cls": 0.06128, "s2.acc": 93.63086, "s2.loss_bbox": 0.05447, "loss": 0.9305, "time": 0.86593}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.001, "memory": 12892, "data_time": 0.01091, "loss_rpn_cls": 0.05312, "loss_rpn_bbox": 0.04482, "s0.loss_cls": 0.2924, "s0.acc": 91.72363, "s0.loss_bbox": 0.16601, "s1.loss_cls": 0.14095, "s1.acc": 91.98864, "s1.loss_bbox": 0.12954, "s2.loss_cls": 0.06129, "s2.acc": 93.27883, "s2.loss_bbox": 0.05805, "loss": 0.94619, "time": 0.86513}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 12892, "data_time": 0.01158, "loss_rpn_cls": 0.05561, "loss_rpn_bbox": 0.03918, "s0.loss_cls": 0.29874, "s0.acc": 91.7168, "s0.loss_bbox": 0.15952, "s1.loss_cls": 0.14354, "s1.acc": 92.09902, "s1.loss_bbox": 0.12656, "s2.loss_cls": 0.06145, "s2.acc": 93.61571, "s2.loss_bbox": 0.05662, "loss": 0.94122, "time": 0.86446}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.001, "memory": 12892, "data_time": 0.0109, "loss_rpn_cls": 0.04864, "loss_rpn_bbox": 0.0351, "s0.loss_cls": 0.2778, "s0.acc": 92.26953, "s0.loss_bbox": 0.15081, "s1.loss_cls": 0.13353, "s1.acc": 92.51465, "s1.loss_bbox": 0.11857, "s2.loss_cls": 0.05849, "s2.acc": 93.61328, "s2.loss_bbox": 0.05446, "loss": 0.8774, "time": 0.86161}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 12892, "data_time": 0.0116, "loss_rpn_cls": 0.04274, "loss_rpn_bbox": 0.03418, "s0.loss_cls": 0.27191, "s0.acc": 92.16016, "s0.loss_bbox": 0.14887, "s1.loss_cls": 0.13137, "s1.acc": 92.33167, "s1.loss_bbox": 0.12371, "s2.loss_cls": 0.05931, "s2.acc": 93.24891, "s2.loss_bbox": 0.05854, "loss": 0.87063, "time": 0.86521}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.001, "memory": 12892, "data_time": 0.01118, "loss_rpn_cls": 0.05167, "loss_rpn_bbox": 0.04013, "s0.loss_cls": 0.29439, "s0.acc": 91.36426, "s0.loss_bbox": 0.16893, "s1.loss_cls": 0.14718, "s1.acc": 91.39737, "s1.loss_bbox": 0.13629, "s2.loss_cls": 0.06597, "s2.acc": 92.69838, "s2.loss_bbox": 0.06369, "loss": 0.96824, "time": 0.86088}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.001, "memory": 12892, "data_time": 0.0123, "loss_rpn_cls": 0.04734, "loss_rpn_bbox": 0.03961, "s0.loss_cls": 0.28195, "s0.acc": 91.93945, "s0.loss_bbox": 0.15663, "s1.loss_cls": 0.13789, "s1.acc": 92.13379, "s1.loss_bbox": 0.1224, "s2.loss_cls": 0.06404, "s2.acc": 93.20215, "s2.loss_bbox": 0.0585, "loss": 0.90836, "time": 0.86965}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.001, "memory": 12892, "data_time": 0.01146, "loss_rpn_cls": 0.05838, "loss_rpn_bbox": 0.05008, "s0.loss_cls": 0.30262, "s0.acc": 91.46387, "s0.loss_bbox": 0.16812, "s1.loss_cls": 0.14171, "s1.acc": 91.98604, "s1.loss_bbox": 0.12909, "s2.loss_cls": 0.06333, "s2.acc": 92.90506, "s2.loss_bbox": 0.05988, "loss": 0.97321, "time": 0.8619}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.001, "memory": 12892, "data_time": 0.01116, "loss_rpn_cls": 0.04922, "loss_rpn_bbox": 0.03655, "s0.loss_cls": 0.27361, "s0.acc": 92.24512, "s0.loss_bbox": 0.14596, "s1.loss_cls": 0.13304, "s1.acc": 92.54965, "s1.loss_bbox": 0.11929, "s2.loss_cls": 0.06072, "s2.acc": 93.50684, "s2.loss_bbox": 0.05865, "loss": 0.87703, "time": 0.86798}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.001, "memory": 12892, "data_time": 0.01123, "loss_rpn_cls": 0.0505, "loss_rpn_bbox": 0.04649, "s0.loss_cls": 0.2957, "s0.acc": 91.24316, "s0.loss_bbox": 0.16594, "s1.loss_cls": 0.14613, "s1.acc": 91.48651, "s1.loss_bbox": 0.13555, "s2.loss_cls": 0.06608, "s2.acc": 92.56761, "s2.loss_bbox": 0.0638, "loss": 0.97018, "time": 0.86559}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.001, "memory": 12892, "data_time": 0.01141, "loss_rpn_cls": 0.05772, "loss_rpn_bbox": 0.03869, "s0.loss_cls": 0.32044, "s0.acc": 90.90039, "s0.loss_bbox": 0.17715, "s1.loss_cls": 0.15227, "s1.acc": 91.41412, "s1.loss_bbox": 0.13997, "s2.loss_cls": 0.06664, "s2.acc": 92.8297, "s2.loss_bbox": 0.0654, "loss": 1.01829, "time": 0.86192}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.001, "memory": 12892, "data_time": 0.0116, "loss_rpn_cls": 0.04945, "loss_rpn_bbox": 0.03786, "s0.loss_cls": 0.2978, "s0.acc": 91.40332, "s0.loss_bbox": 0.16204, "s1.loss_cls": 0.14429, "s1.acc": 91.71875, "s1.loss_bbox": 0.12949, "s2.loss_cls": 0.06491, "s2.acc": 92.80176, "s2.loss_bbox": 0.06143, "loss": 0.94728, "time": 0.85825}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.001, "memory": 12892, "data_time": 0.01139, "loss_rpn_cls": 0.05556, "loss_rpn_bbox": 0.04206, "s0.loss_cls": 0.30415, "s0.acc": 91.24414, "s0.loss_bbox": 0.16861, "s1.loss_cls": 0.14756, "s1.acc": 91.64292, "s1.loss_bbox": 0.1315, "s2.loss_cls": 0.06279, "s2.acc": 93.14972, "s2.loss_bbox": 0.06018, "loss": 0.9724, "time": 0.86203}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.001, "memory": 12892, "data_time": 0.01182, "loss_rpn_cls": 0.05173, "loss_rpn_bbox": 0.03818, "s0.loss_cls": 0.27762, "s0.acc": 91.97461, "s0.loss_bbox": 0.15156, "s1.loss_cls": 0.13467, "s1.acc": 92.22963, "s1.loss_bbox": 0.12634, "s2.loss_cls": 0.06085, "s2.acc": 93.12722, "s2.loss_bbox": 0.06054, "loss": 0.90149, "time": 0.86159}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.001, "memory": 12892, "data_time": 0.01169, "loss_rpn_cls": 0.05124, "loss_rpn_bbox": 0.03932, "s0.loss_cls": 0.29752, "s0.acc": 91.2373, "s0.loss_bbox": 0.16372, "s1.loss_cls": 0.14453, "s1.acc": 91.54343, "s1.loss_bbox": 0.13037, "s2.loss_cls": 0.06424, "s2.acc": 92.71636, "s2.loss_bbox": 0.06205, "loss": 0.953, "time": 0.85342}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.001, "memory": 12892, "data_time": 0.01157, "loss_rpn_cls": 0.05507, "loss_rpn_bbox": 0.04005, "s0.loss_cls": 0.29373, "s0.acc": 91.33691, "s0.loss_bbox": 0.1663, "s1.loss_cls": 0.14503, "s1.acc": 91.52881, "s1.loss_bbox": 0.13765, "s2.loss_cls": 0.06628, "s2.acc": 92.61541, "s2.loss_bbox": 0.06631, "loss": 0.97042, "time": 0.86541}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.001, "memory": 12892, "data_time": 0.01122, "loss_rpn_cls": 0.04887, "loss_rpn_bbox": 0.04256, "s0.loss_cls": 0.29874, "s0.acc": 91.26855, "s0.loss_bbox": 0.16708, "s1.loss_cls": 0.14302, "s1.acc": 91.62513, "s1.loss_bbox": 0.13442, "s2.loss_cls": 0.0628, "s2.acc": 93.03654, "s2.loss_bbox": 0.06264, "loss": 0.96012, "time": 0.85484}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.001, "memory": 12892, "data_time": 0.01129, "loss_rpn_cls": 0.05934, "loss_rpn_bbox": 0.04091, "s0.loss_cls": 0.31396, "s0.acc": 91.2207, "s0.loss_bbox": 0.17121, "s1.loss_cls": 0.15027, "s1.acc": 91.64253, "s1.loss_bbox": 0.13322, "s2.loss_cls": 0.0679, "s2.acc": 92.60251, "s2.loss_bbox": 0.06218, "loss": 0.99899, "time": 0.85131}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.001, "memory": 12892, "data_time": 0.01154, "loss_rpn_cls": 0.05628, "loss_rpn_bbox": 0.04147, "s0.loss_cls": 0.31221, "s0.acc": 91.02637, "s0.loss_bbox": 0.16808, "s1.loss_cls": 0.14958, "s1.acc": 91.24797, "s1.loss_bbox": 0.13389, "s2.loss_cls": 0.0663, "s2.acc": 92.55945, "s2.loss_bbox": 0.06322, "loss": 0.99104, "time": 0.86274}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.001, "memory": 12892, "data_time": 0.01202, "loss_rpn_cls": 0.05043, "loss_rpn_bbox": 0.0434, "s0.loss_cls": 0.29183, "s0.acc": 91.68164, "s0.loss_bbox": 0.1574, "s1.loss_cls": 0.14223, "s1.acc": 91.78593, "s1.loss_bbox": 0.12771, "s2.loss_cls": 0.06415, "s2.acc": 92.51898, "s2.loss_bbox": 0.06075, "loss": 0.9379, "time": 0.86575}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.001, "memory": 12892, "data_time": 0.01154, "loss_rpn_cls": 0.04548, "loss_rpn_bbox": 0.03581, "s0.loss_cls": 0.25441, "s0.acc": 92.85645, "s0.loss_bbox": 0.13305, "s1.loss_cls": 0.12645, "s1.acc": 92.69434, "s1.loss_bbox": 0.11135, "s2.loss_cls": 0.0584, "s2.acc": 93.07129, "s2.loss_bbox": 0.05676, "loss": 0.82172, "time": 0.86314}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.001, "memory": 12892, "data_time": 0.01178, "loss_rpn_cls": 0.04369, "loss_rpn_bbox": 0.03782, "s0.loss_cls": 0.29079, "s0.acc": 91.4502, "s0.loss_bbox": 0.16412, "s1.loss_cls": 0.13993, "s1.acc": 91.73822, "s1.loss_bbox": 0.13151, "s2.loss_cls": 0.06351, "s2.acc": 92.69295, "s2.loss_bbox": 0.06212, "loss": 0.93349, "time": 0.86334}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.001, "memory": 12892, "data_time": 0.01181, "loss_rpn_cls": 0.05375, "loss_rpn_bbox": 0.03754, "s0.loss_cls": 0.30541, "s0.acc": 91.47266, "s0.loss_bbox": 0.16112, "s1.loss_cls": 0.14829, "s1.acc": 91.64645, "s1.loss_bbox": 0.13425, "s2.loss_cls": 0.06611, "s2.acc": 92.51079, "s2.loss_bbox": 0.06238, "loss": 0.96885, "time": 0.86596}
{"mode": "val", "epoch": 3, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.16, "bbox_mAP_50": 0.297, "bbox_mAP_75": 0.157, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.023, "bbox_mAP_l": 0.196, "bbox_mAP_copypaste": "0.160 0.297 0.157 0.003 0.023 0.196"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.001, "memory": 12892, "data_time": 0.057, "loss_rpn_cls": 0.04255, "loss_rpn_bbox": 0.03727, "s0.loss_cls": 0.28308, "s0.acc": 91.52637, "s0.loss_bbox": 0.15929, "s1.loss_cls": 0.14124, "s1.acc": 91.53054, "s1.loss_bbox": 0.13082, "s2.loss_cls": 0.06529, "s2.acc": 92.60415, "s2.loss_bbox": 0.06401, "loss": 0.92356, "time": 0.91339}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 12892, "data_time": 0.01104, "loss_rpn_cls": 0.04238, "loss_rpn_bbox": 0.03508, "s0.loss_cls": 0.25098, "s0.acc": 92.75098, "s0.loss_bbox": 0.13155, "s1.loss_cls": 0.12612, "s1.acc": 92.56051, "s1.loss_bbox": 0.11653, "s2.loss_cls": 0.0593, "s2.acc": 93.11523, "s2.loss_bbox": 0.0561, "loss": 0.81803, "time": 0.86431}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.001, "memory": 12892, "data_time": 0.01143, "loss_rpn_cls": 0.04946, "loss_rpn_bbox": 0.03987, "s0.loss_cls": 0.27662, "s0.acc": 91.77832, "s0.loss_bbox": 0.15599, "s1.loss_cls": 0.13597, "s1.acc": 92.00616, "s1.loss_bbox": 0.13096, "s2.loss_cls": 0.0612, "s2.acc": 92.95036, "s2.loss_bbox": 0.06359, "loss": 0.91366, "time": 0.86538}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 12892, "data_time": 0.01135, "loss_rpn_cls": 0.03994, "loss_rpn_bbox": 0.03576, "s0.loss_cls": 0.26079, "s0.acc": 92.1416, "s0.loss_bbox": 0.14465, "s1.loss_cls": 0.13076, "s1.acc": 92.09266, "s1.loss_bbox": 0.12203, "s2.loss_cls": 0.06004, "s2.acc": 92.86547, "s2.loss_bbox": 0.06032, "loss": 0.85428, "time": 0.86488}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.001, "memory": 12892, "data_time": 0.01208, "loss_rpn_cls": 0.04008, "loss_rpn_bbox": 0.03016, "s0.loss_cls": 0.26585, "s0.acc": 92.30273, "s0.loss_bbox": 0.1422, "s1.loss_cls": 0.13103, "s1.acc": 92.31341, "s1.loss_bbox": 0.1174, "s2.loss_cls": 0.06056, "s2.acc": 93.17287, "s2.loss_bbox": 0.05856, "loss": 0.84584, "time": 0.86507}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 12892, "data_time": 0.01152, "loss_rpn_cls": 0.04762, "loss_rpn_bbox": 0.03839, "s0.loss_cls": 0.29852, "s0.acc": 91.28809, "s0.loss_bbox": 0.15945, "s1.loss_cls": 0.14614, "s1.acc": 91.54641, "s1.loss_bbox": 0.133, "s2.loss_cls": 0.06625, "s2.acc": 92.43044, "s2.loss_bbox": 0.06478, "loss": 0.95415, "time": 0.86697}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.001, "memory": 12892, "data_time": 0.01122, "loss_rpn_cls": 0.04826, "loss_rpn_bbox": 0.03479, "s0.loss_cls": 0.28713, "s0.acc": 91.63184, "s0.loss_bbox": 0.15759, "s1.loss_cls": 0.1358, "s1.acc": 92.18541, "s1.loss_bbox": 0.12659, "s2.loss_cls": 0.06115, "s2.acc": 92.96685, "s2.loss_bbox": 0.06012, "loss": 0.91143, "time": 0.8668}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.001, "memory": 12892, "data_time": 0.01134, "loss_rpn_cls": 0.05059, "loss_rpn_bbox": 0.04131, "s0.loss_cls": 0.28981, "s0.acc": 91.57812, "s0.loss_bbox": 0.15594, "s1.loss_cls": 0.14192, "s1.acc": 91.60533, "s1.loss_bbox": 0.13046, "s2.loss_cls": 0.06541, "s2.acc": 92.42057, "s2.loss_bbox": 0.06127, "loss": 0.93671, "time": 0.86509}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.001, "memory": 12892, "data_time": 0.01152, "loss_rpn_cls": 0.04544, "loss_rpn_bbox": 0.0411, "s0.loss_cls": 0.28184, "s0.acc": 91.48633, "s0.loss_bbox": 0.15381, "s1.loss_cls": 0.14151, "s1.acc": 91.46236, "s1.loss_bbox": 0.13126, "s2.loss_cls": 0.06635, "s2.acc": 92.1693, "s2.loss_bbox": 0.06603, "loss": 0.92734, "time": 0.8655}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.001, "memory": 12892, "data_time": 0.01143, "loss_rpn_cls": 0.04008, "loss_rpn_bbox": 0.03446, "s0.loss_cls": 0.23949, "s0.acc": 92.86523, "s0.loss_bbox": 0.13226, "s1.loss_cls": 0.11922, "s1.acc": 92.87813, "s1.loss_bbox": 0.11058, "s2.loss_cls": 0.0569, "s2.acc": 93.29283, "s2.loss_bbox": 0.05701, "loss": 0.79, "time": 0.86527}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.001, "memory": 12892, "data_time": 0.01186, "loss_rpn_cls": 0.048, "loss_rpn_bbox": 0.03707, "s0.loss_cls": 0.26852, "s0.acc": 92.0625, "s0.loss_bbox": 0.14708, "s1.loss_cls": 0.13508, "s1.acc": 91.95471, "s1.loss_bbox": 0.1292, "s2.loss_cls": 0.06115, "s2.acc": 92.74511, "s2.loss_bbox": 0.06431, "loss": 0.89042, "time": 0.86521}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.001, "memory": 12892, "data_time": 0.01151, "loss_rpn_cls": 0.04597, "loss_rpn_bbox": 0.03193, "s0.loss_cls": 0.26278, "s0.acc": 92.29004, "s0.loss_bbox": 0.13419, "s1.loss_cls": 0.13526, "s1.acc": 92.05709, "s1.loss_bbox": 0.12059, "s2.loss_cls": 0.06241, "s2.acc": 92.76588, "s2.loss_bbox": 0.05992, "loss": 0.85305, "time": 0.86224}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.001, "memory": 12892, "data_time": 0.01178, "loss_rpn_cls": 0.04315, "loss_rpn_bbox": 0.03767, "s0.loss_cls": 0.30289, "s0.acc": 91.21387, "s0.loss_bbox": 0.16787, "s1.loss_cls": 0.14527, "s1.acc": 91.39785, "s1.loss_bbox": 0.13766, "s2.loss_cls": 0.06562, "s2.acc": 92.50212, "s2.loss_bbox": 0.06608, "loss": 0.9662, "time": 0.86403}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.001, "memory": 12892, "data_time": 0.01168, "loss_rpn_cls": 0.04629, "loss_rpn_bbox": 0.0436, "s0.loss_cls": 0.31206, "s0.acc": 90.8584, "s0.loss_bbox": 0.17103, "s1.loss_cls": 0.15321, "s1.acc": 90.99604, "s1.loss_bbox": 0.14295, "s2.loss_cls": 0.06923, "s2.acc": 91.84408, "s2.loss_bbox": 0.06967, "loss": 1.00805, "time": 0.86615}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.001, "memory": 12892, "data_time": 0.01215, "loss_rpn_cls": 0.04232, "loss_rpn_bbox": 0.0429, "s0.loss_cls": 0.29363, "s0.acc": 91.32715, "s0.loss_bbox": 0.16596, "s1.loss_cls": 0.14125, "s1.acc": 91.58263, "s1.loss_bbox": 0.14295, "s2.loss_cls": 0.06449, "s2.acc": 92.4776, "s2.loss_bbox": 0.07071, "loss": 0.9642, "time": 0.85847}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.001, "memory": 12892, "data_time": 0.01173, "loss_rpn_cls": 0.04569, "loss_rpn_bbox": 0.03957, "s0.loss_cls": 0.30348, "s0.acc": 90.98828, "s0.loss_bbox": 0.16363, "s1.loss_cls": 0.15021, "s1.acc": 91.02159, "s1.loss_bbox": 0.13905, "s2.loss_cls": 0.06718, "s2.acc": 92.12662, "s2.loss_bbox": 0.0666, "loss": 0.97541, "time": 0.8631}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.001, "memory": 12892, "data_time": 0.01166, "loss_rpn_cls": 0.03992, "loss_rpn_bbox": 0.03471, "s0.loss_cls": 0.27398, "s0.acc": 91.78516, "s0.loss_bbox": 0.15344, "s1.loss_cls": 0.13295, "s1.acc": 91.93581, "s1.loss_bbox": 0.13142, "s2.loss_cls": 0.06054, "s2.acc": 93.02481, "s2.loss_bbox": 0.06514, "loss": 0.89211, "time": 0.86834}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.001, "memory": 12892, "data_time": 0.01154, "loss_rpn_cls": 0.04709, "loss_rpn_bbox": 0.04216, "s0.loss_cls": 0.29946, "s0.acc": 91.06152, "s0.loss_bbox": 0.16391, "s1.loss_cls": 0.15002, "s1.acc": 90.80461, "s1.loss_bbox": 0.14334, "s2.loss_cls": 0.07069, "s2.acc": 91.4296, "s2.loss_bbox": 0.07204, "loss": 0.98872, "time": 0.86497}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.001, "memory": 12892, "data_time": 0.01199, "loss_rpn_cls": 0.04909, "loss_rpn_bbox": 0.03822, "s0.loss_cls": 0.30374, "s0.acc": 91.2627, "s0.loss_bbox": 0.16102, "s1.loss_cls": 0.14693, "s1.acc": 91.41108, "s1.loss_bbox": 0.13549, "s2.loss_cls": 0.06841, "s2.acc": 92.05337, "s2.loss_bbox": 0.06438, "loss": 0.96728, "time": 0.86637}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.001, "memory": 12892, "data_time": 0.01177, "loss_rpn_cls": 0.04411, "loss_rpn_bbox": 0.03654, "s0.loss_cls": 0.27121, "s0.acc": 91.88867, "s0.loss_bbox": 0.14374, "s1.loss_cls": 0.13305, "s1.acc": 92.18539, "s1.loss_bbox": 0.11996, "s2.loss_cls": 0.06148, "s2.acc": 93.05106, "s2.loss_bbox": 0.06001, "loss": 0.8701, "time": 0.86501}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.001, "memory": 12892, "data_time": 0.01175, "loss_rpn_cls": 0.05354, "loss_rpn_bbox": 0.04486, "s0.loss_cls": 0.27956, "s0.acc": 91.67676, "s0.loss_bbox": 0.15212, "s1.loss_cls": 0.14221, "s1.acc": 91.4895, "s1.loss_bbox": 0.13309, "s2.loss_cls": 0.06736, "s2.acc": 92.27169, "s2.loss_bbox": 0.06709, "loss": 0.93982, "time": 0.86324}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.001, "memory": 12892, "data_time": 0.01182, "loss_rpn_cls": 0.04309, "loss_rpn_bbox": 0.03445, "s0.loss_cls": 0.25796, "s0.acc": 92.18652, "s0.loss_bbox": 0.15037, "s1.loss_cls": 0.12484, "s1.acc": 92.35416, "s1.loss_bbox": 0.12944, "s2.loss_cls": 0.05792, "s2.acc": 93.05273, "s2.loss_bbox": 0.06267, "loss": 0.86073, "time": 0.86774}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 0.001, "memory": 12892, "data_time": 0.01205, "loss_rpn_cls": 0.04995, "loss_rpn_bbox": 0.04086, "s0.loss_cls": 0.29864, "s0.acc": 91.07422, "s0.loss_bbox": 0.16397, "s1.loss_cls": 0.14285, "s1.acc": 91.49366, "s1.loss_bbox": 0.13818, "s2.loss_cls": 0.0624, "s2.acc": 92.61475, "s2.loss_bbox": 0.06632, "loss": 0.96317, "time": 0.86907}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.001, "memory": 12892, "data_time": 0.01195, "loss_rpn_cls": 0.05469, "loss_rpn_bbox": 0.04595, "s0.loss_cls": 0.29712, "s0.acc": 91.19922, "s0.loss_bbox": 0.16549, "s1.loss_cls": 0.14533, "s1.acc": 91.50438, "s1.loss_bbox": 0.13734, "s2.loss_cls": 0.06531, "s2.acc": 92.34681, "s2.loss_bbox": 0.06634, "loss": 0.97757, "time": 0.86102}
{"mode": "val", "epoch": 4, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.218, "bbox_mAP_50": 0.391, "bbox_mAP_75": 0.215, "bbox_mAP_s": 0.006, "bbox_mAP_m": 0.054, "bbox_mAP_l": 0.261, "bbox_mAP_copypaste": "0.218 0.391 0.215 0.006 0.054 0.261"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.001, "memory": 12892, "data_time": 0.05701, "loss_rpn_cls": 0.03979, "loss_rpn_bbox": 0.03941, "s0.loss_cls": 0.26703, "s0.acc": 91.83105, "s0.loss_bbox": 0.15089, "s1.loss_cls": 0.13031, "s1.acc": 91.86705, "s1.loss_bbox": 0.12508, "s2.loss_cls": 0.06158, "s2.acc": 92.48463, "s2.loss_bbox": 0.0628, "loss": 0.87688, "time": 0.90899}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 12892, "data_time": 0.01095, "loss_rpn_cls": 0.0414, "loss_rpn_bbox": 0.04136, "s0.loss_cls": 0.26094, "s0.acc": 92.16699, "s0.loss_bbox": 0.14195, "s1.loss_cls": 0.1276, "s1.acc": 92.42681, "s1.loss_bbox": 0.12144, "s2.loss_cls": 0.05882, "s2.acc": 93.07356, "s2.loss_bbox": 0.05986, "loss": 0.85336, "time": 0.85988}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.001, "memory": 12892, "data_time": 0.01108, "loss_rpn_cls": 0.03881, "loss_rpn_bbox": 0.04256, "s0.loss_cls": 0.27014, "s0.acc": 91.70215, "s0.loss_bbox": 0.15171, "s1.loss_cls": 0.1323, "s1.acc": 91.76834, "s1.loss_bbox": 0.13209, "s2.loss_cls": 0.06015, "s2.acc": 92.63922, "s2.loss_bbox": 0.06584, "loss": 0.89361, "time": 0.86301}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 12892, "data_time": 0.01193, "loss_rpn_cls": 0.04556, "loss_rpn_bbox": 0.03888, "s0.loss_cls": 0.28072, "s0.acc": 91.65332, "s0.loss_bbox": 0.15044, "s1.loss_cls": 0.13938, "s1.acc": 91.50755, "s1.loss_bbox": 0.13291, "s2.loss_cls": 0.065, "s2.acc": 92.03125, "s2.loss_bbox": 0.06913, "loss": 0.92201, "time": 0.86797}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.001, "memory": 12892, "data_time": 0.01111, "loss_rpn_cls": 0.04652, "loss_rpn_bbox": 0.03824, "s0.loss_cls": 0.28383, "s0.acc": 91.34375, "s0.loss_bbox": 0.16494, "s1.loss_cls": 0.14071, "s1.acc": 91.45179, "s1.loss_bbox": 0.14098, "s2.loss_cls": 0.06483, "s2.acc": 92.26869, "s2.loss_bbox": 0.06966, "loss": 0.94972, "time": 0.86378}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 12892, "data_time": 0.01162, "loss_rpn_cls": 0.03552, "loss_rpn_bbox": 0.0377, "s0.loss_cls": 0.25469, "s0.acc": 92.1875, "s0.loss_bbox": 0.14297, "s1.loss_cls": 0.12425, "s1.acc": 92.37953, "s1.loss_bbox": 0.12521, "s2.loss_cls": 0.05851, "s2.acc": 92.8637, "s2.loss_bbox": 0.06304, "loss": 0.84189, "time": 0.86066}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.001, "memory": 12892, "data_time": 0.0114, "loss_rpn_cls": 0.04828, "loss_rpn_bbox": 0.039, "s0.loss_cls": 0.29497, "s0.acc": 90.8291, "s0.loss_bbox": 0.16825, "s1.loss_cls": 0.14661, "s1.acc": 90.88771, "s1.loss_bbox": 0.14549, "s2.loss_cls": 0.0685, "s2.acc": 91.86756, "s2.loss_bbox": 0.07127, "loss": 0.98238, "time": 0.86523}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.001, "memory": 12892, "data_time": 0.01132, "loss_rpn_cls": 0.04235, "loss_rpn_bbox": 0.03775, "s0.loss_cls": 0.2664, "s0.acc": 92.05762, "s0.loss_bbox": 0.14132, "s1.loss_cls": 0.13189, "s1.acc": 91.977, "s1.loss_bbox": 0.12046, "s2.loss_cls": 0.0621, "s2.acc": 92.46704, "s2.loss_bbox": 0.06222, "loss": 0.8645, "time": 0.86435}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.001, "memory": 12892, "data_time": 0.01175, "loss_rpn_cls": 0.04824, "loss_rpn_bbox": 0.03715, "s0.loss_cls": 0.26339, "s0.acc": 92.18848, "s0.loss_bbox": 0.14308, "s1.loss_cls": 0.13116, "s1.acc": 92.25804, "s1.loss_bbox": 0.12394, "s2.loss_cls": 0.06345, "s2.acc": 92.78496, "s2.loss_bbox": 0.0661, "loss": 0.8765, "time": 0.86384}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.001, "memory": 12892, "data_time": 0.0111, "loss_rpn_cls": 0.0386, "loss_rpn_bbox": 0.03329, "s0.loss_cls": 0.25501, "s0.acc": 92.39551, "s0.loss_bbox": 0.14001, "s1.loss_cls": 0.12514, "s1.acc": 92.36992, "s1.loss_bbox": 0.11985, "s2.loss_cls": 0.05878, "s2.acc": 92.78636, "s2.loss_bbox": 0.05982, "loss": 0.83051, "time": 0.86197}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.001, "memory": 12892, "data_time": 0.01127, "loss_rpn_cls": 0.04128, "loss_rpn_bbox": 0.03329, "s0.loss_cls": 0.2739, "s0.acc": 91.67871, "s0.loss_bbox": 0.15014, "s1.loss_cls": 0.13579, "s1.acc": 91.71859, "s1.loss_bbox": 0.12868, "s2.loss_cls": 0.06088, "s2.acc": 92.84518, "s2.loss_bbox": 0.06234, "loss": 0.8863, "time": 0.86321}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.001, "memory": 12892, "data_time": 0.01108, "loss_rpn_cls": 0.03833, "loss_rpn_bbox": 0.03718, "s0.loss_cls": 0.2832, "s0.acc": 91.49805, "s0.loss_bbox": 0.16316, "s1.loss_cls": 0.13682, "s1.acc": 91.69353, "s1.loss_bbox": 0.13751, "s2.loss_cls": 0.06281, "s2.acc": 92.58808, "s2.loss_bbox": 0.06843, "loss": 0.92743, "time": 0.85481}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.001, "memory": 12892, "data_time": 0.0114, "loss_rpn_cls": 0.04308, "loss_rpn_bbox": 0.03555, "s0.loss_cls": 0.27241, "s0.acc": 91.73535, "s0.loss_bbox": 0.15317, "s1.loss_cls": 0.13196, "s1.acc": 92.02418, "s1.loss_bbox": 0.13236, "s2.loss_cls": 0.06153, "s2.acc": 92.62902, "s2.loss_bbox": 0.06586, "loss": 0.89591, "time": 0.86445}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.001, "memory": 12892, "data_time": 0.01177, "loss_rpn_cls": 0.04032, "loss_rpn_bbox": 0.0382, "s0.loss_cls": 0.25675, "s0.acc": 92.30371, "s0.loss_bbox": 0.14228, "s1.loss_cls": 0.12942, "s1.acc": 92.2661, "s1.loss_bbox": 0.12654, "s2.loss_cls": 0.06003, "s2.acc": 92.75776, "s2.loss_bbox": 0.06412, "loss": 0.85767, "time": 0.85719}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.001, "memory": 12892, "data_time": 0.01162, "loss_rpn_cls": 0.03505, "loss_rpn_bbox": 0.03123, "s0.loss_cls": 0.24609, "s0.acc": 92.33008, "s0.loss_bbox": 0.13356, "s1.loss_cls": 0.12326, "s1.acc": 92.18883, "s1.loss_bbox": 0.12048, "s2.loss_cls": 0.05801, "s2.acc": 92.59031, "s2.loss_bbox": 0.06213, "loss": 0.80981, "time": 0.86104}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.001, "memory": 12892, "data_time": 0.01148, "loss_rpn_cls": 0.03863, "loss_rpn_bbox": 0.03375, "s0.loss_cls": 0.24443, "s0.acc": 92.97754, "s0.loss_bbox": 0.12776, "s1.loss_cls": 0.12176, "s1.acc": 92.9129, "s1.loss_bbox": 0.11182, "s2.loss_cls": 0.05643, "s2.acc": 93.49935, "s2.loss_bbox": 0.05857, "loss": 0.79317, "time": 0.86257}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.001, "memory": 12892, "data_time": 0.01212, "loss_rpn_cls": 0.04182, "loss_rpn_bbox": 0.03119, "s0.loss_cls": 0.26046, "s0.acc": 92.21875, "s0.loss_bbox": 0.13784, "s1.loss_cls": 0.13049, "s1.acc": 92.26233, "s1.loss_bbox": 0.12403, "s2.loss_cls": 0.06217, "s2.acc": 93.03598, "s2.loss_bbox": 0.06422, "loss": 0.85222, "time": 0.86371}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.001, "memory": 12892, "data_time": 0.01105, "loss_rpn_cls": 0.03987, "loss_rpn_bbox": 0.03793, "s0.loss_cls": 0.27087, "s0.acc": 91.95801, "s0.loss_bbox": 0.14332, "s1.loss_cls": 0.13615, "s1.acc": 91.91313, "s1.loss_bbox": 0.12629, "s2.loss_cls": 0.06287, "s2.acc": 92.50065, "s2.loss_bbox": 0.06438, "loss": 0.88167, "time": 0.86366}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.001, "memory": 12892, "data_time": 0.0116, "loss_rpn_cls": 0.03261, "loss_rpn_bbox": 0.03831, "s0.loss_cls": 0.27531, "s0.acc": 91.61035, "s0.loss_bbox": 0.15082, "s1.loss_cls": 0.13368, "s1.acc": 91.68143, "s1.loss_bbox": 0.13225, "s2.loss_cls": 0.06337, "s2.acc": 92.33724, "s2.loss_bbox": 0.06575, "loss": 0.8921, "time": 0.86697}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.001, "memory": 12892, "data_time": 0.01162, "loss_rpn_cls": 0.0421, "loss_rpn_bbox": 0.03409, "s0.loss_cls": 0.28421, "s0.acc": 91.14355, "s0.loss_bbox": 0.16178, "s1.loss_cls": 0.14122, "s1.acc": 91.07641, "s1.loss_bbox": 0.14061, "s2.loss_cls": 0.06581, "s2.acc": 91.9997, "s2.loss_bbox": 0.07119, "loss": 0.941, "time": 0.86967}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.001, "memory": 12892, "data_time": 0.01144, "loss_rpn_cls": 0.03607, "loss_rpn_bbox": 0.03769, "s0.loss_cls": 0.28793, "s0.acc": 91.33008, "s0.loss_bbox": 0.15279, "s1.loss_cls": 0.14232, "s1.acc": 91.3462, "s1.loss_bbox": 0.13169, "s2.loss_cls": 0.06638, "s2.acc": 91.95285, "s2.loss_bbox": 0.06661, "loss": 0.92148, "time": 0.86199}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.001, "memory": 12892, "data_time": 0.01146, "loss_rpn_cls": 0.05014, "loss_rpn_bbox": 0.04498, "s0.loss_cls": 0.28639, "s0.acc": 91.48242, "s0.loss_bbox": 0.16226, "s1.loss_cls": 0.13746, "s1.acc": 91.75917, "s1.loss_bbox": 0.13753, "s2.loss_cls": 0.06353, "s2.acc": 92.55655, "s2.loss_bbox": 0.06768, "loss": 0.94998, "time": 0.86316}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 0.001, "memory": 12892, "data_time": 0.01162, "loss_rpn_cls": 0.04968, "loss_rpn_bbox": 0.04072, "s0.loss_cls": 0.30222, "s0.acc": 91.06836, "s0.loss_bbox": 0.16785, "s1.loss_cls": 0.14184, "s1.acc": 91.65904, "s1.loss_bbox": 0.13836, "s2.loss_cls": 0.06382, "s2.acc": 92.65359, "s2.loss_bbox": 0.06619, "loss": 0.97068, "time": 0.85731}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.001, "memory": 12892, "data_time": 0.01163, "loss_rpn_cls": 0.03708, "loss_rpn_bbox": 0.03288, "s0.loss_cls": 0.25349, "s0.acc": 92.41895, "s0.loss_bbox": 0.14224, "s1.loss_cls": 0.11761, "s1.acc": 92.92508, "s1.loss_bbox": 0.11819, "s2.loss_cls": 0.05475, "s2.acc": 93.23708, "s2.loss_bbox": 0.05936, "loss": 0.8156, "time": 0.86011}
{"mode": "val", "epoch": 5, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.258, "bbox_mAP_50": 0.445, "bbox_mAP_75": 0.265, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.067, "bbox_mAP_l": 0.308, "bbox_mAP_copypaste": "0.258 0.445 0.265 0.005 0.067 0.308"}
