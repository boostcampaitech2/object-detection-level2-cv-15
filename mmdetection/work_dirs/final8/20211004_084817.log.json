{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.15.1+3ee336b", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNeXt',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=-1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(\n            type='Pretrained', checkpoint='open-mmlab://resnext101_32x4d'),\n        groups=32,\n        base_width=4),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 0.7, 1.0, 1.5, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../dataset/test.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/final8'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "final8.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 16436, "data_time": 0.05587, "loss_rpn_cls": 0.68092, "loss_rpn_bbox": 0.05709, "s0.loss_cls": 0.96278, "s0.acc": 73.24902, "s0.loss_bbox": 0.08949, "s1.loss_cls": 0.51939, "s1.acc": 66.73828, "s1.loss_bbox": 0.01283, "s2.loss_cls": 0.19107, "s2.acc": 78.86621, "s2.loss_bbox": 0.00632, "loss": 2.51988, "time": 1.27239}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 16436, "data_time": 0.00979, "loss_rpn_cls": 0.55963, "loss_rpn_bbox": 0.03498, "s0.loss_cls": 0.25638, "s0.acc": 95.77637, "s0.loss_bbox": 0.10968, "s1.loss_cls": 0.07435, "s1.acc": 98.06543, "s1.loss_bbox": 0.03209, "s2.loss_cls": 0.03243, "s2.acc": 98.6748, "s2.loss_bbox": 0.00834, "loss": 1.10789, "time": 1.22263}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0003, "memory": 16436, "data_time": 0.01006, "loss_rpn_cls": 0.22966, "loss_rpn_bbox": 0.04858, "s0.loss_cls": 0.31908, "s0.acc": 93.70508, "s0.loss_bbox": 0.1609, "s1.loss_cls": 0.09537, "s1.acc": 97.17383, "s1.loss_bbox": 0.04903, "s2.loss_cls": 0.02863, "s2.acc": 98.58984, "s2.loss_bbox": 0.00991, "loss": 0.94116, "time": 1.23318}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0004, "memory": 16436, "data_time": 0.01075, "loss_rpn_cls": 0.12493, "loss_rpn_bbox": 0.04054, "s0.loss_cls": 0.26798, "s0.acc": 94.32617, "s0.loss_bbox": 0.13148, "s1.loss_cls": 0.09272, "s1.acc": 96.64746, "s1.loss_bbox": 0.05965, "s2.loss_cls": 0.02906, "s2.acc": 98.40332, "s2.loss_bbox": 0.01129, "loss": 0.75766, "time": 1.23251}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0005, "memory": 16436, "data_time": 0.01022, "loss_rpn_cls": 0.15331, "loss_rpn_bbox": 0.04929, "s0.loss_cls": 0.26892, "s0.acc": 94.45801, "s0.loss_bbox": 0.11868, "s1.loss_cls": 0.0957, "s1.acc": 96.46289, "s1.loss_bbox": 0.057, "s2.loss_cls": 0.03192, "s2.acc": 98.08789, "s2.loss_bbox": 0.01234, "loss": 0.78715, "time": 1.23301}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0006, "memory": 16436, "data_time": 0.01033, "loss_rpn_cls": 0.13709, "loss_rpn_bbox": 0.05454, "s0.loss_cls": 0.26283, "s0.acc": 94.57715, "s0.loss_bbox": 0.11913, "s1.loss_cls": 0.08828, "s1.acc": 96.7002, "s1.loss_bbox": 0.0518, "s2.loss_cls": 0.02946, "s2.acc": 98.19043, "s2.loss_bbox": 0.01118, "loss": 0.75432, "time": 1.22563}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0007, "memory": 16440, "data_time": 0.00982, "loss_rpn_cls": 0.1483, "loss_rpn_bbox": 0.04868, "s0.loss_cls": 0.28158, "s0.acc": 94.07031, "s0.loss_bbox": 0.13037, "s1.loss_cls": 0.09715, "s1.acc": 96.22461, "s1.loss_bbox": 0.05741, "s2.loss_cls": 0.03358, "s2.acc": 97.83496, "s2.loss_bbox": 0.01302, "loss": 0.81009, "time": 1.22411}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0008, "memory": 16440, "data_time": 0.01009, "loss_rpn_cls": 0.12086, "loss_rpn_bbox": 0.0414, "s0.loss_cls": 0.27214, "s0.acc": 93.76758, "s0.loss_bbox": 0.14234, "s1.loss_cls": 0.10188, "s1.acc": 95.62402, "s1.loss_bbox": 0.07306, "s2.loss_cls": 0.03432, "s2.acc": 97.5957, "s2.loss_bbox": 0.01762, "loss": 0.80361, "time": 1.22861}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0009, "memory": 16440, "data_time": 0.01036, "loss_rpn_cls": 0.11287, "loss_rpn_bbox": 0.04126, "s0.loss_cls": 0.28145, "s0.acc": 93.3125, "s0.loss_bbox": 0.15086, "s1.loss_cls": 0.1086, "s1.acc": 95.34082, "s1.loss_bbox": 0.07314, "s2.loss_cls": 0.03844, "s2.acc": 97.22754, "s2.loss_bbox": 0.01994, "loss": 0.82657, "time": 1.22959}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.001, "memory": 16440, "data_time": 0.01089, "loss_rpn_cls": 0.11546, "loss_rpn_bbox": 0.04474, "s0.loss_cls": 0.31348, "s0.acc": 92.27832, "s0.loss_bbox": 0.169, "s1.loss_cls": 0.12758, "s1.acc": 93.85059, "s1.loss_bbox": 0.09974, "s2.loss_cls": 0.04702, "s2.acc": 96.09082, "s2.loss_bbox": 0.0315, "loss": 0.94853, "time": 1.23756}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.001, "memory": 16440, "data_time": 0.01034, "loss_rpn_cls": 0.1021, "loss_rpn_bbox": 0.04621, "s0.loss_cls": 0.31381, "s0.acc": 91.95703, "s0.loss_bbox": 0.17054, "s1.loss_cls": 0.13116, "s1.acc": 93.37695, "s1.loss_bbox": 0.10526, "s2.loss_cls": 0.0507, "s2.acc": 95.42188, "s2.loss_bbox": 0.03707, "loss": 0.95684, "time": 1.23106}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.001, "memory": 16440, "data_time": 0.01062, "loss_rpn_cls": 0.09676, "loss_rpn_bbox": 0.04959, "s0.loss_cls": 0.35605, "s0.acc": 90.99219, "s0.loss_bbox": 0.19013, "s1.loss_cls": 0.14992, "s1.acc": 92.62695, "s1.loss_bbox": 0.11652, "s2.loss_cls": 0.05851, "s2.acc": 94.68945, "s2.loss_bbox": 0.04236, "loss": 1.05985, "time": 1.23138}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.001, "memory": 16440, "data_time": 0.01037, "loss_rpn_cls": 0.08417, "loss_rpn_bbox": 0.04193, "s0.loss_cls": 0.31977, "s0.acc": 91.96387, "s0.loss_bbox": 0.15405, "s1.loss_cls": 0.14384, "s1.acc": 92.73828, "s1.loss_bbox": 0.10978, "s2.loss_cls": 0.06013, "s2.acc": 93.97461, "s2.loss_bbox": 0.04693, "loss": 0.9606, "time": 1.23274}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.001, "memory": 16440, "data_time": 0.0105, "loss_rpn_cls": 0.07649, "loss_rpn_bbox": 0.04262, "s0.loss_cls": 0.3446, "s0.acc": 91.26758, "s0.loss_bbox": 0.16727, "s1.loss_cls": 0.1503, "s1.acc": 92.36328, "s1.loss_bbox": 0.12027, "s2.loss_cls": 0.06222, "s2.acc": 93.59863, "s2.loss_bbox": 0.05148, "loss": 1.01526, "time": 1.2307}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.001, "memory": 16440, "data_time": 0.0106, "loss_rpn_cls": 0.07733, "loss_rpn_bbox": 0.03833, "s0.loss_cls": 0.29297, "s0.acc": 92.26562, "s0.loss_bbox": 0.15093, "s1.loss_cls": 0.13806, "s1.acc": 92.6509, "s1.loss_bbox": 0.11114, "s2.loss_cls": 0.05765, "s2.acc": 94.00746, "s2.loss_bbox": 0.05067, "loss": 0.91708, "time": 1.22736}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.001, "memory": 16440, "data_time": 0.01081, "loss_rpn_cls": 0.0781, "loss_rpn_bbox": 0.03631, "s0.loss_cls": 0.31266, "s0.acc": 92.29297, "s0.loss_bbox": 0.14619, "s1.loss_cls": 0.13708, "s1.acc": 93.09227, "s1.loss_bbox": 0.10252, "s2.loss_cls": 0.0573, "s2.acc": 94.31892, "s2.loss_bbox": 0.04548, "loss": 0.91564, "time": 1.22826}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.001, "memory": 16440, "data_time": 0.011, "loss_rpn_cls": 0.06632, "loss_rpn_bbox": 0.03881, "s0.loss_cls": 0.31787, "s0.acc": 92.02051, "s0.loss_bbox": 0.15874, "s1.loss_cls": 0.14027, "s1.acc": 92.94531, "s1.loss_bbox": 0.10669, "s2.loss_cls": 0.06015, "s2.acc": 94.0498, "s2.loss_bbox": 0.04527, "loss": 0.93411, "time": 1.2307}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.001, "memory": 16440, "data_time": 0.01105, "loss_rpn_cls": 0.06019, "loss_rpn_bbox": 0.03167, "s0.loss_cls": 0.29532, "s0.acc": 92.32617, "s0.loss_bbox": 0.14103, "s1.loss_cls": 0.1386, "s1.acc": 92.56806, "s1.loss_bbox": 0.1082, "s2.loss_cls": 0.06211, "s2.acc": 93.28396, "s2.loss_bbox": 0.05245, "loss": 0.88956, "time": 1.23459}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.001, "memory": 16440, "data_time": 0.01108, "loss_rpn_cls": 0.07214, "loss_rpn_bbox": 0.03985, "s0.loss_cls": 0.29311, "s0.acc": 92.44043, "s0.loss_bbox": 0.13833, "s1.loss_cls": 0.13143, "s1.acc": 93.16113, "s1.loss_bbox": 0.10074, "s2.loss_cls": 0.05825, "s2.acc": 93.94629, "s2.loss_bbox": 0.04838, "loss": 0.88224, "time": 1.24193}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.001, "memory": 16440, "data_time": 0.01082, "loss_rpn_cls": 0.06813, "loss_rpn_bbox": 0.04913, "s0.loss_cls": 0.34313, "s0.acc": 90.96582, "s0.loss_bbox": 0.16697, "s1.loss_cls": 0.15609, "s1.acc": 91.61049, "s1.loss_bbox": 0.12412, "s2.loss_cls": 0.06855, "s2.acc": 92.5892, "s2.loss_bbox": 0.05736, "loss": 1.03349, "time": 1.23824}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.001, "memory": 16440, "data_time": 0.0112, "loss_rpn_cls": 0.0703, "loss_rpn_bbox": 0.03903, "s0.loss_cls": 0.34806, "s0.acc": 90.73535, "s0.loss_bbox": 0.17655, "s1.loss_cls": 0.15994, "s1.acc": 91.40665, "s1.loss_bbox": 0.13383, "s2.loss_cls": 0.06884, "s2.acc": 92.77497, "s2.loss_bbox": 0.06068, "loss": 1.05722, "time": 1.23256}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.001, "memory": 16440, "data_time": 0.01111, "loss_rpn_cls": 0.06527, "loss_rpn_bbox": 0.04304, "s0.loss_cls": 0.31785, "s0.acc": 91.47363, "s0.loss_bbox": 0.15391, "s1.loss_cls": 0.14717, "s1.acc": 92.14686, "s1.loss_bbox": 0.12262, "s2.loss_cls": 0.06347, "s2.acc": 93.20745, "s2.loss_bbox": 0.05478, "loss": 0.9681, "time": 1.23185}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.001, "memory": 16440, "data_time": 0.01109, "loss_rpn_cls": 0.06695, "loss_rpn_bbox": 0.04429, "s0.loss_cls": 0.32516, "s0.acc": 90.95605, "s0.loss_bbox": 0.16539, "s1.loss_cls": 0.15698, "s1.acc": 91.21853, "s1.loss_bbox": 0.13773, "s2.loss_cls": 0.06843, "s2.acc": 92.61345, "s2.loss_bbox": 0.06269, "loss": 1.02762, "time": 1.23325}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.001, "memory": 16440, "data_time": 0.0111, "loss_rpn_cls": 0.07024, "loss_rpn_bbox": 0.04535, "s0.loss_cls": 0.36157, "s0.acc": 90.24316, "s0.loss_bbox": 0.18237, "s1.loss_cls": 0.16598, "s1.acc": 90.89257, "s1.loss_bbox": 0.13721, "s2.loss_cls": 0.07086, "s2.acc": 92.37488, "s2.loss_bbox": 0.06003, "loss": 1.09361, "time": 1.23516}
{"mode": "val", "epoch": 1, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.077, "bbox_mAP_50": 0.143, "bbox_mAP_75": 0.077, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.097, "bbox_mAP_copypaste": "0.077 0.143 0.077 0.000 0.005 0.097"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.001, "memory": 16440, "data_time": 0.05724, "loss_rpn_cls": 0.0595, "loss_rpn_bbox": 0.03603, "s0.loss_cls": 0.30827, "s0.acc": 91.36719, "s0.loss_bbox": 0.14905, "s1.loss_cls": 0.15142, "s1.acc": 91.69454, "s1.loss_bbox": 0.1248, "s2.loss_cls": 0.06606, "s2.acc": 92.70071, "s2.loss_bbox": 0.05886, "loss": 0.95399, "time": 1.2846}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 16440, "data_time": 0.01107, "loss_rpn_cls": 0.05856, "loss_rpn_bbox": 0.04495, "s0.loss_cls": 0.31609, "s0.acc": 91.35645, "s0.loss_bbox": 0.14421, "s1.loss_cls": 0.15103, "s1.acc": 91.69032, "s1.loss_bbox": 0.12041, "s2.loss_cls": 0.06656, "s2.acc": 92.62837, "s2.loss_bbox": 0.05751, "loss": 0.95932, "time": 1.23616}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.001, "memory": 16440, "data_time": 0.01097, "loss_rpn_cls": 0.05799, "loss_rpn_bbox": 0.04264, "s0.loss_cls": 0.32517, "s0.acc": 90.98535, "s0.loss_bbox": 0.158, "s1.loss_cls": 0.15637, "s1.acc": 91.38189, "s1.loss_bbox": 0.12887, "s2.loss_cls": 0.06901, "s2.acc": 92.45507, "s2.loss_bbox": 0.05897, "loss": 0.99702, "time": 1.23671}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 16440, "data_time": 0.01123, "loss_rpn_cls": 0.05406, "loss_rpn_bbox": 0.04185, "s0.loss_cls": 0.33596, "s0.acc": 91.20117, "s0.loss_bbox": 0.14978, "s1.loss_cls": 0.16271, "s1.acc": 91.24951, "s1.loss_bbox": 0.12474, "s2.loss_cls": 0.07287, "s2.acc": 92.20372, "s2.loss_bbox": 0.06206, "loss": 1.00403, "time": 1.23849}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.001, "memory": 16440, "data_time": 0.01118, "loss_rpn_cls": 0.06468, "loss_rpn_bbox": 0.04526, "s0.loss_cls": 0.34177, "s0.acc": 90.45117, "s0.loss_bbox": 0.16333, "s1.loss_cls": 0.16458, "s1.acc": 90.7321, "s1.loss_bbox": 0.13281, "s2.loss_cls": 0.07315, "s2.acc": 91.58066, "s2.loss_bbox": 0.06143, "loss": 1.04701, "time": 1.23646}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 16440, "data_time": 0.01124, "loss_rpn_cls": 0.06868, "loss_rpn_bbox": 0.05059, "s0.loss_cls": 0.34655, "s0.acc": 90.29688, "s0.loss_bbox": 0.17071, "s1.loss_cls": 0.16584, "s1.acc": 90.55303, "s1.loss_bbox": 0.14076, "s2.loss_cls": 0.0736, "s2.acc": 91.82189, "s2.loss_bbox": 0.06849, "loss": 1.08521, "time": 1.2365}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.001, "memory": 16440, "data_time": 0.01097, "loss_rpn_cls": 0.05024, "loss_rpn_bbox": 0.03519, "s0.loss_cls": 0.31014, "s0.acc": 91.43848, "s0.loss_bbox": 0.14544, "s1.loss_cls": 0.15938, "s1.acc": 91.00831, "s1.loss_bbox": 0.12906, "s2.loss_cls": 0.07156, "s2.acc": 92.09527, "s2.loss_bbox": 0.06621, "loss": 0.96721, "time": 1.23698}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.001, "memory": 16440, "data_time": 0.01127, "loss_rpn_cls": 0.04993, "loss_rpn_bbox": 0.03391, "s0.loss_cls": 0.29323, "s0.acc": 91.91699, "s0.loss_bbox": 0.13345, "s1.loss_cls": 0.1473, "s1.acc": 91.62653, "s1.loss_bbox": 0.11659, "s2.loss_cls": 0.06998, "s2.acc": 92.10819, "s2.loss_bbox": 0.06418, "loss": 0.90857, "time": 1.24712}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.001, "memory": 16440, "data_time": 0.01114, "loss_rpn_cls": 0.05172, "loss_rpn_bbox": 0.04023, "s0.loss_cls": 0.32747, "s0.acc": 90.875, "s0.loss_bbox": 0.1542, "s1.loss_cls": 0.16282, "s1.acc": 90.80534, "s1.loss_bbox": 0.12814, "s2.loss_cls": 0.07609, "s2.acc": 91.51736, "s2.loss_bbox": 0.06632, "loss": 1.007, "time": 1.24049}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.001, "memory": 16440, "data_time": 0.01122, "loss_rpn_cls": 0.0762, "loss_rpn_bbox": 0.05317, "s0.loss_cls": 0.33389, "s0.acc": 90.82129, "s0.loss_bbox": 0.165, "s1.loss_cls": 0.15907, "s1.acc": 91.03796, "s1.loss_bbox": 0.13044, "s2.loss_cls": 0.07047, "s2.acc": 92.17921, "s2.loss_bbox": 0.06122, "loss": 1.04946, "time": 1.23513}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.001, "memory": 16440, "data_time": 0.01152, "loss_rpn_cls": 0.05434, "loss_rpn_bbox": 0.03395, "s0.loss_cls": 0.2941, "s0.acc": 91.64648, "s0.loss_bbox": 0.13573, "s1.loss_cls": 0.1436, "s1.acc": 91.62256, "s1.loss_bbox": 0.11858, "s2.loss_cls": 0.06799, "s2.acc": 92.13743, "s2.loss_bbox": 0.0654, "loss": 0.91367, "time": 1.23633}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.001, "memory": 16440, "data_time": 0.01151, "loss_rpn_cls": 0.05198, "loss_rpn_bbox": 0.03822, "s0.loss_cls": 0.2705, "s0.acc": 92.33594, "s0.loss_bbox": 0.12523, "s1.loss_cls": 0.13555, "s1.acc": 92.1801, "s1.loss_bbox": 0.1117, "s2.loss_cls": 0.06337, "s2.acc": 92.66185, "s2.loss_bbox": 0.06075, "loss": 0.85729, "time": 1.23973}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.001, "memory": 16440, "data_time": 0.01135, "loss_rpn_cls": 0.0433, "loss_rpn_bbox": 0.02913, "s0.loss_cls": 0.26838, "s0.acc": 92.14648, "s0.loss_bbox": 0.13012, "s1.loss_cls": 0.13554, "s1.acc": 91.74124, "s1.loss_bbox": 0.11661, "s2.loss_cls": 0.06551, "s2.acc": 92.2907, "s2.loss_bbox": 0.05997, "loss": 0.84856, "time": 1.23778}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.001, "memory": 16440, "data_time": 0.01068, "loss_rpn_cls": 0.06497, "loss_rpn_bbox": 0.0453, "s0.loss_cls": 0.34962, "s0.acc": 90.23633, "s0.loss_bbox": 0.16984, "s1.loss_cls": 0.17186, "s1.acc": 90.3071, "s1.loss_bbox": 0.14192, "s2.loss_cls": 0.0777, "s2.acc": 91.36342, "s2.loss_bbox": 0.07142, "loss": 1.09263, "time": 1.23199}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.001, "memory": 16440, "data_time": 0.01099, "loss_rpn_cls": 0.06329, "loss_rpn_bbox": 0.03581, "s0.loss_cls": 0.3305, "s0.acc": 90.86035, "s0.loss_bbox": 0.14631, "s1.loss_cls": 0.16519, "s1.acc": 90.74987, "s1.loss_bbox": 0.1307, "s2.loss_cls": 0.07495, "s2.acc": 91.71323, "s2.loss_bbox": 0.06727, "loss": 1.01402, "time": 1.23515}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.001, "memory": 16440, "data_time": 0.01123, "loss_rpn_cls": 0.04795, "loss_rpn_bbox": 0.03777, "s0.loss_cls": 0.27655, "s0.acc": 91.9541, "s0.loss_bbox": 0.13154, "s1.loss_cls": 0.13815, "s1.acc": 91.88798, "s1.loss_bbox": 0.11568, "s2.loss_cls": 0.06516, "s2.acc": 92.33234, "s2.loss_bbox": 0.0593, "loss": 0.8721, "time": 1.23733}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.001, "memory": 16440, "data_time": 0.01118, "loss_rpn_cls": 0.03958, "loss_rpn_bbox": 0.033, "s0.loss_cls": 0.28205, "s0.acc": 92.18066, "s0.loss_bbox": 0.12178, "s1.loss_cls": 0.14452, "s1.acc": 91.72348, "s1.loss_bbox": 0.10624, "s2.loss_cls": 0.06869, "s2.acc": 92.16969, "s2.loss_bbox": 0.05747, "loss": 0.85333, "time": 1.2373}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.001, "memory": 16440, "data_time": 0.01125, "loss_rpn_cls": 0.05457, "loss_rpn_bbox": 0.03779, "s0.loss_cls": 0.30329, "s0.acc": 91.57129, "s0.loss_bbox": 0.13607, "s1.loss_cls": 0.15564, "s1.acc": 91.15447, "s1.loss_bbox": 0.11752, "s2.loss_cls": 0.07251, "s2.acc": 91.93733, "s2.loss_bbox": 0.06193, "loss": 0.93932, "time": 1.23498}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.001, "memory": 16440, "data_time": 0.01103, "loss_rpn_cls": 0.05105, "loss_rpn_bbox": 0.04076, "s0.loss_cls": 0.29217, "s0.acc": 91.72363, "s0.loss_bbox": 0.1362, "s1.loss_cls": 0.15002, "s1.acc": 91.43442, "s1.loss_bbox": 0.12266, "s2.loss_cls": 0.06944, "s2.acc": 92.14678, "s2.loss_bbox": 0.06176, "loss": 0.92407, "time": 1.23635}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.001, "memory": 16440, "data_time": 0.01142, "loss_rpn_cls": 0.05064, "loss_rpn_bbox": 0.03808, "s0.loss_cls": 0.28895, "s0.acc": 91.81445, "s0.loss_bbox": 0.1207, "s1.loss_cls": 0.1453, "s1.acc": 91.67331, "s1.loss_bbox": 0.1067, "s2.loss_cls": 0.06975, "s2.acc": 91.79225, "s2.loss_bbox": 0.05838, "loss": 0.87849, "time": 1.23483}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.001, "memory": 16440, "data_time": 0.01145, "loss_rpn_cls": 0.04091, "loss_rpn_bbox": 0.03371, "s0.loss_cls": 0.27389, "s0.acc": 92.19238, "s0.loss_bbox": 0.11754, "s1.loss_cls": 0.14598, "s1.acc": 91.38698, "s1.loss_bbox": 0.11303, "s2.loss_cls": 0.07021, "s2.acc": 91.60115, "s2.loss_bbox": 0.06569, "loss": 0.86096, "time": 1.23912}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.001, "memory": 16440, "data_time": 0.01126, "loss_rpn_cls": 0.05566, "loss_rpn_bbox": 0.03788, "s0.loss_cls": 0.33506, "s0.acc": 90.56543, "s0.loss_bbox": 0.15734, "s1.loss_cls": 0.16463, "s1.acc": 90.64557, "s1.loss_bbox": 0.13894, "s2.loss_cls": 0.07523, "s2.acc": 91.41329, "s2.loss_bbox": 0.06942, "loss": 1.03416, "time": 1.23527}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.001, "memory": 16440, "data_time": 0.01148, "loss_rpn_cls": 0.05324, "loss_rpn_bbox": 0.0417, "s0.loss_cls": 0.32756, "s0.acc": 90.70508, "s0.loss_bbox": 0.14971, "s1.loss_cls": 0.16579, "s1.acc": 90.3283, "s1.loss_bbox": 0.13463, "s2.loss_cls": 0.07697, "s2.acc": 91.04027, "s2.loss_bbox": 0.06956, "loss": 1.01918, "time": 1.23953}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.001, "memory": 16440, "data_time": 0.01183, "loss_rpn_cls": 0.05525, "loss_rpn_bbox": 0.04025, "s0.loss_cls": 0.31238, "s0.acc": 91.14551, "s0.loss_bbox": 0.13802, "s1.loss_cls": 0.1599, "s1.acc": 90.8215, "s1.loss_bbox": 0.12681, "s2.loss_cls": 0.07576, "s2.acc": 91.20456, "s2.loss_bbox": 0.0686, "loss": 0.97699, "time": 1.23842}
{"mode": "val", "epoch": 2, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.186, "bbox_mAP_50": 0.307, "bbox_mAP_75": 0.198, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.025, "bbox_mAP_l": 0.229, "bbox_mAP_copypaste": "0.186 0.307 0.198 0.003 0.025 0.229"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.001, "memory": 16440, "data_time": 0.05654, "loss_rpn_cls": 0.05034, "loss_rpn_bbox": 0.04526, "s0.loss_cls": 0.30122, "s0.acc": 91.22559, "s0.loss_bbox": 0.14125, "s1.loss_cls": 0.15518, "s1.acc": 90.81907, "s1.loss_bbox": 0.12552, "s2.loss_cls": 0.07579, "s2.acc": 90.90503, "s2.loss_bbox": 0.06985, "loss": 0.96442, "time": 1.28067}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 16440, "data_time": 0.01084, "loss_rpn_cls": 0.05308, "loss_rpn_bbox": 0.04747, "s0.loss_cls": 0.28434, "s0.acc": 91.67188, "s0.loss_bbox": 0.13888, "s1.loss_cls": 0.14019, "s1.acc": 91.73015, "s1.loss_bbox": 0.1223, "s2.loss_cls": 0.06838, "s2.acc": 91.78643, "s2.loss_bbox": 0.06505, "loss": 0.91969, "time": 1.23594}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.001, "memory": 16440, "data_time": 0.01073, "loss_rpn_cls": 0.03865, "loss_rpn_bbox": 0.03437, "s0.loss_cls": 0.28581, "s0.acc": 91.86426, "s0.loss_bbox": 0.12725, "s1.loss_cls": 0.1438, "s1.acc": 91.55778, "s1.loss_bbox": 0.11363, "s2.loss_cls": 0.0693, "s2.acc": 92.20119, "s2.loss_bbox": 0.06257, "loss": 0.87536, "time": 1.23629}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 16440, "data_time": 0.01089, "loss_rpn_cls": 0.04841, "loss_rpn_bbox": 0.03466, "s0.loss_cls": 0.25746, "s0.acc": 92.41602, "s0.loss_bbox": 0.12046, "s1.loss_cls": 0.12939, "s1.acc": 92.21139, "s1.loss_bbox": 0.11268, "s2.loss_cls": 0.06581, "s2.acc": 91.98278, "s2.loss_bbox": 0.0664, "loss": 0.83528, "time": 1.23322}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.001, "memory": 16440, "data_time": 0.01101, "loss_rpn_cls": 0.03776, "loss_rpn_bbox": 0.03476, "s0.loss_cls": 0.27681, "s0.acc": 91.67383, "s0.loss_bbox": 0.13239, "s1.loss_cls": 0.14366, "s1.acc": 91.20455, "s1.loss_bbox": 0.11668, "s2.loss_cls": 0.06831, "s2.acc": 91.82823, "s2.loss_bbox": 0.066, "loss": 0.87636, "time": 1.23823}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 16440, "data_time": 0.01081, "loss_rpn_cls": 0.04968, "loss_rpn_bbox": 0.03589, "s0.loss_cls": 0.29417, "s0.acc": 91.21289, "s0.loss_bbox": 0.13795, "s1.loss_cls": 0.14519, "s1.acc": 91.3667, "s1.loss_bbox": 0.12409, "s2.loss_cls": 0.06915, "s2.acc": 91.8829, "s2.loss_bbox": 0.06625, "loss": 0.92238, "time": 1.23397}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.001, "memory": 16440, "data_time": 0.01101, "loss_rpn_cls": 0.04945, "loss_rpn_bbox": 0.04134, "s0.loss_cls": 0.30214, "s0.acc": 91.22266, "s0.loss_bbox": 0.14212, "s1.loss_cls": 0.15198, "s1.acc": 91.08622, "s1.loss_bbox": 0.12992, "s2.loss_cls": 0.07084, "s2.acc": 91.52802, "s2.loss_bbox": 0.07008, "loss": 0.95786, "time": 1.23494}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.001, "memory": 16440, "data_time": 0.01064, "loss_rpn_cls": 0.04696, "loss_rpn_bbox": 0.0322, "s0.loss_cls": 0.29532, "s0.acc": 91.4541, "s0.loss_bbox": 0.13069, "s1.loss_cls": 0.15157, "s1.acc": 91.02566, "s1.loss_bbox": 0.12175, "s2.loss_cls": 0.07333, "s2.acc": 91.03378, "s2.loss_bbox": 0.0664, "loss": 0.91822, "time": 1.23779}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.001, "memory": 16440, "data_time": 0.0105, "loss_rpn_cls": 0.03907, "loss_rpn_bbox": 0.0343, "s0.loss_cls": 0.26778, "s0.acc": 91.99805, "s0.loss_bbox": 0.1293, "s1.loss_cls": 0.14104, "s1.acc": 91.45204, "s1.loss_bbox": 0.11821, "s2.loss_cls": 0.06746, "s2.acc": 91.9184, "s2.loss_bbox": 0.06469, "loss": 0.86186, "time": 1.22926}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.001, "memory": 16440, "data_time": 0.01071, "loss_rpn_cls": 0.04564, "loss_rpn_bbox": 0.03503, "s0.loss_cls": 0.27864, "s0.acc": 91.60645, "s0.loss_bbox": 0.13365, "s1.loss_cls": 0.14575, "s1.acc": 91.20988, "s1.loss_bbox": 0.12568, "s2.loss_cls": 0.0707, "s2.acc": 91.58992, "s2.loss_bbox": 0.0671, "loss": 0.90218, "time": 1.22968}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.001, "memory": 16440, "data_time": 0.01086, "loss_rpn_cls": 0.04067, "loss_rpn_bbox": 0.03379, "s0.loss_cls": 0.28867, "s0.acc": 91.5918, "s0.loss_bbox": 0.12887, "s1.loss_cls": 0.15467, "s1.acc": 90.71649, "s1.loss_bbox": 0.12249, "s2.loss_cls": 0.07537, "s2.acc": 90.97607, "s2.loss_bbox": 0.06792, "loss": 0.91245, "time": 1.24092}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.001, "memory": 16440, "data_time": 0.01158, "loss_rpn_cls": 0.04878, "loss_rpn_bbox": 0.03708, "s0.loss_cls": 0.29527, "s0.acc": 91.23926, "s0.loss_bbox": 0.13993, "s1.loss_cls": 0.14733, "s1.acc": 91.20177, "s1.loss_bbox": 0.12408, "s2.loss_cls": 0.06909, "s2.acc": 91.87639, "s2.loss_bbox": 0.06773, "loss": 0.92929, "time": 1.23312}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.001, "memory": 16440, "data_time": 0.01103, "loss_rpn_cls": 0.04306, "loss_rpn_bbox": 0.03762, "s0.loss_cls": 0.2981, "s0.acc": 91.17871, "s0.loss_bbox": 0.13239, "s1.loss_cls": 0.15279, "s1.acc": 90.63993, "s1.loss_bbox": 0.12283, "s2.loss_cls": 0.07336, "s2.acc": 90.93069, "s2.loss_bbox": 0.06724, "loss": 0.92739, "time": 1.22933}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.001, "memory": 16440, "data_time": 0.01093, "loss_rpn_cls": 0.04212, "loss_rpn_bbox": 0.0372, "s0.loss_cls": 0.276, "s0.acc": 91.83984, "s0.loss_bbox": 0.12343, "s1.loss_cls": 0.14631, "s1.acc": 91.35594, "s1.loss_bbox": 0.11792, "s2.loss_cls": 0.07273, "s2.acc": 91.07437, "s2.loss_bbox": 0.06662, "loss": 0.88232, "time": 1.23411}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.001, "memory": 16440, "data_time": 0.01064, "loss_rpn_cls": 0.05214, "loss_rpn_bbox": 0.04436, "s0.loss_cls": 0.29539, "s0.acc": 91.11914, "s0.loss_bbox": 0.13705, "s1.loss_cls": 0.15147, "s1.acc": 91.11941, "s1.loss_bbox": 0.11816, "s2.loss_cls": 0.07305, "s2.acc": 91.45417, "s2.loss_bbox": 0.06672, "loss": 0.93835, "time": 1.2255}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.001, "memory": 16440, "data_time": 0.01134, "loss_rpn_cls": 0.04851, "loss_rpn_bbox": 0.03887, "s0.loss_cls": 0.30722, "s0.acc": 90.9248, "s0.loss_bbox": 0.1342, "s1.loss_cls": 0.15932, "s1.acc": 90.4711, "s1.loss_bbox": 0.12394, "s2.loss_cls": 0.07753, "s2.acc": 90.80152, "s2.loss_bbox": 0.06999, "loss": 0.95959, "time": 1.23278}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.001, "memory": 16440, "data_time": 0.01151, "loss_rpn_cls": 0.04649, "loss_rpn_bbox": 0.03575, "s0.loss_cls": 0.31138, "s0.acc": 90.96582, "s0.loss_bbox": 0.14207, "s1.loss_cls": 0.1584, "s1.acc": 90.54888, "s1.loss_bbox": 0.12989, "s2.loss_cls": 0.07577, "s2.acc": 91.23682, "s2.loss_bbox": 0.07072, "loss": 0.97046, "time": 1.23759}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.001, "memory": 16440, "data_time": 0.01143, "loss_rpn_cls": 0.04588, "loss_rpn_bbox": 0.03954, "s0.loss_cls": 0.28874, "s0.acc": 91.51953, "s0.loss_bbox": 0.13323, "s1.loss_cls": 0.14736, "s1.acc": 91.31091, "s1.loss_bbox": 0.12061, "s2.loss_cls": 0.07092, "s2.acc": 91.61759, "s2.loss_bbox": 0.06526, "loss": 0.91154, "time": 1.23405}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.001, "memory": 16440, "data_time": 0.01108, "loss_rpn_cls": 0.03925, "loss_rpn_bbox": 0.0308, "s0.loss_cls": 0.27536, "s0.acc": 91.7666, "s0.loss_bbox": 0.1247, "s1.loss_cls": 0.14195, "s1.acc": 91.44302, "s1.loss_bbox": 0.11574, "s2.loss_cls": 0.06616, "s2.acc": 92.09069, "s2.loss_bbox": 0.06236, "loss": 0.85631, "time": 1.23199}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.001, "memory": 16440, "data_time": 0.01139, "loss_rpn_cls": 0.03686, "loss_rpn_bbox": 0.03048, "s0.loss_cls": 0.22447, "s0.acc": 93.33887, "s0.loss_bbox": 0.10085, "s1.loss_cls": 0.11705, "s1.acc": 92.95787, "s1.loss_bbox": 0.09917, "s2.loss_cls": 0.05626, "s2.acc": 93.17029, "s2.loss_bbox": 0.05743, "loss": 0.72256, "time": 1.23357}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.001, "memory": 16440, "data_time": 0.01138, "loss_rpn_cls": 0.04322, "loss_rpn_bbox": 0.03548, "s0.loss_cls": 0.28398, "s0.acc": 91.86035, "s0.loss_bbox": 0.12382, "s1.loss_cls": 0.14456, "s1.acc": 91.51262, "s1.loss_bbox": 0.11586, "s2.loss_cls": 0.06944, "s2.acc": 91.62589, "s2.loss_bbox": 0.06571, "loss": 0.88208, "time": 1.23078}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.001, "memory": 16440, "data_time": 0.01117, "loss_rpn_cls": 0.05444, "loss_rpn_bbox": 0.03884, "s0.loss_cls": 0.29582, "s0.acc": 91.37988, "s0.loss_bbox": 0.1307, "s1.loss_cls": 0.15119, "s1.acc": 91.06583, "s1.loss_bbox": 0.12021, "s2.loss_cls": 0.07055, "s2.acc": 91.68585, "s2.loss_bbox": 0.06221, "loss": 0.92397, "time": 1.23093}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.001, "memory": 16440, "data_time": 0.01157, "loss_rpn_cls": 0.04234, "loss_rpn_bbox": 0.03223, "s0.loss_cls": 0.28352, "s0.acc": 91.83203, "s0.loss_bbox": 0.12911, "s1.loss_cls": 0.14249, "s1.acc": 91.79814, "s1.loss_bbox": 0.12226, "s2.loss_cls": 0.0681, "s2.acc": 92.09334, "s2.loss_bbox": 0.07031, "loss": 0.89036, "time": 1.23514}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.001, "memory": 16440, "data_time": 0.01142, "loss_rpn_cls": 0.03721, "loss_rpn_bbox": 0.0321, "s0.loss_cls": 0.27097, "s0.acc": 92.06934, "s0.loss_bbox": 0.12344, "s1.loss_cls": 0.13921, "s1.acc": 91.84107, "s1.loss_bbox": 0.11306, "s2.loss_cls": 0.06877, "s2.acc": 91.95311, "s2.loss_bbox": 0.06276, "loss": 0.84751, "time": 1.23514}
{"mode": "val", "epoch": 3, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.243, "bbox_mAP_50": 0.384, "bbox_mAP_75": 0.261, "bbox_mAP_s": 0.007, "bbox_mAP_m": 0.043, "bbox_mAP_l": 0.293, "bbox_mAP_copypaste": "0.243 0.384 0.261 0.007 0.043 0.293"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.001, "memory": 16440, "data_time": 0.0568, "loss_rpn_cls": 0.03625, "loss_rpn_bbox": 0.03236, "s0.loss_cls": 0.26773, "s0.acc": 92.00293, "s0.loss_bbox": 0.12473, "s1.loss_cls": 0.13641, "s1.acc": 91.65657, "s1.loss_bbox": 0.11495, "s2.loss_cls": 0.06803, "s2.acc": 91.6875, "s2.loss_bbox": 0.06573, "loss": 0.84619, "time": 1.28094}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 16440, "data_time": 0.01069, "loss_rpn_cls": 0.04015, "loss_rpn_bbox": 0.04111, "s0.loss_cls": 0.27664, "s0.acc": 91.51855, "s0.loss_bbox": 0.13984, "s1.loss_cls": 0.1431, "s1.acc": 91.11088, "s1.loss_bbox": 0.1264, "s2.loss_cls": 0.06847, "s2.acc": 91.76074, "s2.loss_bbox": 0.06915, "loss": 0.90486, "time": 1.23745}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.001, "memory": 16440, "data_time": 0.01062, "loss_rpn_cls": 0.03037, "loss_rpn_bbox": 0.02981, "s0.loss_cls": 0.24361, "s0.acc": 92.59863, "s0.loss_bbox": 0.11215, "s1.loss_cls": 0.12385, "s1.acc": 92.40876, "s1.loss_bbox": 0.10521, "s2.loss_cls": 0.06076, "s2.acc": 92.59037, "s2.loss_bbox": 0.06101, "loss": 0.76676, "time": 1.23959}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 16440, "data_time": 0.01047, "loss_rpn_cls": 0.04287, "loss_rpn_bbox": 0.03292, "s0.loss_cls": 0.28655, "s0.acc": 91.27441, "s0.loss_bbox": 0.13407, "s1.loss_cls": 0.14651, "s1.acc": 90.9339, "s1.loss_bbox": 0.12356, "s2.loss_cls": 0.07172, "s2.acc": 91.1208, "s2.loss_bbox": 0.07221, "loss": 0.91042, "time": 1.23399}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.001, "memory": 16440, "data_time": 0.01078, "loss_rpn_cls": 0.03845, "loss_rpn_bbox": 0.03475, "s0.loss_cls": 0.26935, "s0.acc": 91.99414, "s0.loss_bbox": 0.12747, "s1.loss_cls": 0.14164, "s1.acc": 91.55225, "s1.loss_bbox": 0.11785, "s2.loss_cls": 0.07032, "s2.acc": 91.26038, "s2.loss_bbox": 0.06632, "loss": 0.86616, "time": 1.23346}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 16440, "data_time": 0.01054, "loss_rpn_cls": 0.03625, "loss_rpn_bbox": 0.03263, "s0.loss_cls": 0.24484, "s0.acc": 92.65723, "s0.loss_bbox": 0.10203, "s1.loss_cls": 0.13131, "s1.acc": 92.1434, "s1.loss_bbox": 0.09467, "s2.loss_cls": 0.06691, "s2.acc": 92.46272, "s2.loss_bbox": 0.05936, "loss": 0.76799, "time": 1.23487}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.001, "memory": 16440, "data_time": 0.01044, "loss_rpn_cls": 0.0401, "loss_rpn_bbox": 0.04138, "s0.loss_cls": 0.27909, "s0.acc": 91.63672, "s0.loss_bbox": 0.13121, "s1.loss_cls": 0.1411, "s1.acc": 91.24357, "s1.loss_bbox": 0.12373, "s2.loss_cls": 0.06935, "s2.acc": 91.52616, "s2.loss_bbox": 0.06748, "loss": 0.89344, "time": 1.2362}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.001, "memory": 16440, "data_time": 0.01067, "loss_rpn_cls": 0.04154, "loss_rpn_bbox": 0.03255, "s0.loss_cls": 0.26507, "s0.acc": 92.13867, "s0.loss_bbox": 0.114, "s1.loss_cls": 0.13978, "s1.acc": 91.69581, "s1.loss_bbox": 0.11043, "s2.loss_cls": 0.06804, "s2.acc": 91.98913, "s2.loss_bbox": 0.06338, "loss": 0.83479, "time": 1.23088}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.001, "memory": 16440, "data_time": 0.01084, "loss_rpn_cls": 0.03663, "loss_rpn_bbox": 0.03371, "s0.loss_cls": 0.26581, "s0.acc": 92.05566, "s0.loss_bbox": 0.11522, "s1.loss_cls": 0.13392, "s1.acc": 91.83007, "s1.loss_bbox": 0.10515, "s2.loss_cls": 0.06766, "s2.acc": 91.64427, "s2.loss_bbox": 0.06266, "loss": 0.82076, "time": 1.23456}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.001, "memory": 16440, "data_time": 0.01087, "loss_rpn_cls": 0.03378, "loss_rpn_bbox": 0.03308, "s0.loss_cls": 0.26556, "s0.acc": 91.86523, "s0.loss_bbox": 0.13165, "s1.loss_cls": 0.13629, "s1.acc": 91.62506, "s1.loss_bbox": 0.12007, "s2.loss_cls": 0.06741, "s2.acc": 91.46615, "s2.loss_bbox": 0.06651, "loss": 0.85434, "time": 1.23617}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.001, "memory": 16440, "data_time": 0.01053, "loss_rpn_cls": 0.04234, "loss_rpn_bbox": 0.03503, "s0.loss_cls": 0.25482, "s0.acc": 92.41016, "s0.loss_bbox": 0.11789, "s1.loss_cls": 0.12972, "s1.acc": 92.03756, "s1.loss_bbox": 0.10721, "s2.loss_cls": 0.06452, "s2.acc": 92.14056, "s2.loss_bbox": 0.06168, "loss": 0.8132, "time": 1.23335}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.001, "memory": 16440, "data_time": 0.01071, "loss_rpn_cls": 0.03129, "loss_rpn_bbox": 0.03295, "s0.loss_cls": 0.23452, "s0.acc": 92.70215, "s0.loss_bbox": 0.10674, "s1.loss_cls": 0.12266, "s1.acc": 92.15584, "s1.loss_bbox": 0.10495, "s2.loss_cls": 0.0626, "s2.acc": 91.98573, "s2.loss_bbox": 0.06212, "loss": 0.75783, "time": 1.23306}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.001, "memory": 16440, "data_time": 0.0103, "loss_rpn_cls": 0.04207, "loss_rpn_bbox": 0.03109, "s0.loss_cls": 0.27613, "s0.acc": 91.52637, "s0.loss_bbox": 0.12539, "s1.loss_cls": 0.14018, "s1.acc": 91.23376, "s1.loss_bbox": 0.11443, "s2.loss_cls": 0.06985, "s2.acc": 91.20283, "s2.loss_bbox": 0.06734, "loss": 0.86648, "time": 1.22224}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.001, "memory": 16440, "data_time": 0.01024, "loss_rpn_cls": 0.04555, "loss_rpn_bbox": 0.03062, "s0.loss_cls": 0.25182, "s0.acc": 92.50879, "s0.loss_bbox": 0.10704, "s1.loss_cls": 0.12778, "s1.acc": 92.13977, "s1.loss_bbox": 0.098, "s2.loss_cls": 0.06273, "s2.acc": 92.32215, "s2.loss_bbox": 0.05476, "loss": 0.77829, "time": 1.22729}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.001, "memory": 16440, "data_time": 0.01052, "loss_rpn_cls": 0.03484, "loss_rpn_bbox": 0.03577, "s0.loss_cls": 0.29227, "s0.acc": 91.38281, "s0.loss_bbox": 0.12897, "s1.loss_cls": 0.14942, "s1.acc": 91.08441, "s1.loss_bbox": 0.1162, "s2.loss_cls": 0.07237, "s2.acc": 91.19754, "s2.loss_bbox": 0.06504, "loss": 0.89489, "time": 1.23079}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.001, "memory": 16440, "data_time": 0.01087, "loss_rpn_cls": 0.03318, "loss_rpn_bbox": 0.0357, "s0.loss_cls": 0.24507, "s0.acc": 92.73047, "s0.loss_bbox": 0.11264, "s1.loss_cls": 0.12557, "s1.acc": 92.54906, "s1.loss_bbox": 0.10057, "s2.loss_cls": 0.06189, "s2.acc": 92.69582, "s2.loss_bbox": 0.05574, "loss": 0.77037, "time": 1.23443}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.001, "memory": 16440, "data_time": 0.01061, "loss_rpn_cls": 0.03505, "loss_rpn_bbox": 0.03306, "s0.loss_cls": 0.26813, "s0.acc": 91.94238, "s0.loss_bbox": 0.12274, "s1.loss_cls": 0.13831, "s1.acc": 91.62607, "s1.loss_bbox": 0.11205, "s2.loss_cls": 0.06774, "s2.acc": 91.81735, "s2.loss_bbox": 0.06239, "loss": 0.83948, "time": 1.23092}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.001, "memory": 16440, "data_time": 0.01051, "loss_rpn_cls": 0.0354, "loss_rpn_bbox": 0.03278, "s0.loss_cls": 0.25531, "s0.acc": 92.24023, "s0.loss_bbox": 0.11855, "s1.loss_cls": 0.1303, "s1.acc": 92.09335, "s1.loss_bbox": 0.11061, "s2.loss_cls": 0.06216, "s2.acc": 92.56325, "s2.loss_bbox": 0.06269, "loss": 0.80779, "time": 1.23046}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.001, "memory": 16440, "data_time": 0.01061, "loss_rpn_cls": 0.03919, "loss_rpn_bbox": 0.03344, "s0.loss_cls": 0.28639, "s0.acc": 91.17773, "s0.loss_bbox": 0.13789, "s1.loss_cls": 0.14403, "s1.acc": 91.01265, "s1.loss_bbox": 0.12436, "s2.loss_cls": 0.06898, "s2.acc": 91.44007, "s2.loss_bbox": 0.06927, "loss": 0.90356, "time": 1.23141}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.001, "memory": 16440, "data_time": 0.01123, "loss_rpn_cls": 0.04406, "loss_rpn_bbox": 0.03624, "s0.loss_cls": 0.27294, "s0.acc": 91.78516, "s0.loss_bbox": 0.13118, "s1.loss_cls": 0.1408, "s1.acc": 91.27181, "s1.loss_bbox": 0.12317, "s2.loss_cls": 0.06913, "s2.acc": 91.27881, "s2.loss_bbox": 0.06633, "loss": 0.88387, "time": 1.23879}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.001, "memory": 16440, "data_time": 0.01069, "loss_rpn_cls": 0.03064, "loss_rpn_bbox": 0.0301, "s0.loss_cls": 0.25421, "s0.acc": 92.20508, "s0.loss_bbox": 0.11524, "s1.loss_cls": 0.13384, "s1.acc": 91.64141, "s1.loss_bbox": 0.11372, "s2.loss_cls": 0.06556, "s2.acc": 91.87935, "s2.loss_bbox": 0.06401, "loss": 0.80732, "time": 1.23141}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.001, "memory": 16440, "data_time": 0.01069, "loss_rpn_cls": 0.04611, "loss_rpn_bbox": 0.04136, "s0.loss_cls": 0.29732, "s0.acc": 90.99316, "s0.loss_bbox": 0.13503, "s1.loss_cls": 0.14792, "s1.acc": 90.85073, "s1.loss_bbox": 0.12195, "s2.loss_cls": 0.07195, "s2.acc": 91.20699, "s2.loss_bbox": 0.06511, "loss": 0.92674, "time": 1.22688}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 0.001, "memory": 16440, "data_time": 0.01034, "loss_rpn_cls": 0.03124, "loss_rpn_bbox": 0.02955, "s0.loss_cls": 0.2571, "s0.acc": 92.24414, "s0.loss_bbox": 0.11905, "s1.loss_cls": 0.13261, "s1.acc": 91.72641, "s1.loss_bbox": 0.11415, "s2.loss_cls": 0.06623, "s2.acc": 91.69662, "s2.loss_bbox": 0.06729, "loss": 0.81721, "time": 1.22699}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.001, "memory": 16440, "data_time": 0.01024, "loss_rpn_cls": 0.03941, "loss_rpn_bbox": 0.03162, "s0.loss_cls": 0.28249, "s0.acc": 91.48633, "s0.loss_bbox": 0.12788, "s1.loss_cls": 0.14502, "s1.acc": 91.33962, "s1.loss_bbox": 0.11973, "s2.loss_cls": 0.07258, "s2.acc": 91.0739, "s2.loss_bbox": 0.07111, "loss": 0.88984, "time": 1.21741}
{"mode": "val", "epoch": 4, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.305, "bbox_mAP_50": 0.459, "bbox_mAP_75": 0.334, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.081, "bbox_mAP_l": 0.361, "bbox_mAP_copypaste": "0.305 0.459 0.334 0.003 0.081 0.361"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.001, "memory": 16440, "data_time": 0.0569, "loss_rpn_cls": 0.02719, "loss_rpn_bbox": 0.03138, "s0.loss_cls": 0.2317, "s0.acc": 92.65625, "s0.loss_bbox": 0.10498, "s1.loss_cls": 0.11967, "s1.acc": 92.5024, "s1.loss_bbox": 0.10067, "s2.loss_cls": 0.05864, "s2.acc": 92.82588, "s2.loss_bbox": 0.06145, "loss": 0.73568, "time": 1.27525}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 16440, "data_time": 0.01036, "loss_rpn_cls": 0.03828, "loss_rpn_bbox": 0.02975, "s0.loss_cls": 0.24411, "s0.acc": 92.5957, "s0.loss_bbox": 0.1127, "s1.loss_cls": 0.12236, "s1.acc": 92.65832, "s1.loss_bbox": 0.10444, "s2.loss_cls": 0.05942, "s2.acc": 92.8114, "s2.loss_bbox": 0.06193, "loss": 0.77299, "time": 1.22801}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.001, "memory": 16440, "data_time": 0.01095, "loss_rpn_cls": 0.0259, "loss_rpn_bbox": 0.02612, "s0.loss_cls": 0.20511, "s0.acc": 93.5625, "s0.loss_bbox": 0.09827, "s1.loss_cls": 0.10626, "s1.acc": 93.35428, "s1.loss_bbox": 0.09396, "s2.loss_cls": 0.05365, "s2.acc": 93.20907, "s2.loss_bbox": 0.056, "loss": 0.66528, "time": 1.23217}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 16440, "data_time": 0.01027, "loss_rpn_cls": 0.03812, "loss_rpn_bbox": 0.03532, "s0.loss_cls": 0.24661, "s0.acc": 92.30273, "s0.loss_bbox": 0.12396, "s1.loss_cls": 0.12579, "s1.acc": 92.30391, "s1.loss_bbox": 0.11315, "s2.loss_cls": 0.06148, "s2.acc": 92.34946, "s2.loss_bbox": 0.06495, "loss": 0.80937, "time": 1.22386}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.001, "memory": 16440, "data_time": 0.01077, "loss_rpn_cls": 0.0297, "loss_rpn_bbox": 0.03143, "s0.loss_cls": 0.24523, "s0.acc": 92.23828, "s0.loss_bbox": 0.11288, "s1.loss_cls": 0.12787, "s1.acc": 91.87825, "s1.loss_bbox": 0.10296, "s2.loss_cls": 0.06371, "s2.acc": 92.1111, "s2.loss_bbox": 0.06014, "loss": 0.77391, "time": 1.2343}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 16440, "data_time": 0.01036, "loss_rpn_cls": 0.03593, "loss_rpn_bbox": 0.03519, "s0.loss_cls": 0.24562, "s0.acc": 92.38965, "s0.loss_bbox": 0.1174, "s1.loss_cls": 0.12618, "s1.acc": 92.10106, "s1.loss_bbox": 0.10813, "s2.loss_cls": 0.0635, "s2.acc": 92.08988, "s2.loss_bbox": 0.0631, "loss": 0.79505, "time": 1.227}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.001, "memory": 16440, "data_time": 0.01022, "loss_rpn_cls": 0.0302, "loss_rpn_bbox": 0.03167, "s0.loss_cls": 0.23658, "s0.acc": 92.51172, "s0.loss_bbox": 0.1163, "s1.loss_cls": 0.12292, "s1.acc": 92.21191, "s1.loss_bbox": 0.10744, "s2.loss_cls": 0.06159, "s2.acc": 92.33848, "s2.loss_bbox": 0.0634, "loss": 0.77008, "time": 1.23069}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.001, "memory": 16440, "data_time": 0.0105, "loss_rpn_cls": 0.04091, "loss_rpn_bbox": 0.03473, "s0.loss_cls": 0.26883, "s0.acc": 91.78125, "s0.loss_bbox": 0.12679, "s1.loss_cls": 0.13528, "s1.acc": 91.85642, "s1.loss_bbox": 0.11475, "s2.loss_cls": 0.06641, "s2.acc": 91.97019, "s2.loss_bbox": 0.06653, "loss": 0.85423, "time": 1.22832}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.001, "memory": 16440, "data_time": 0.01058, "loss_rpn_cls": 0.03524, "loss_rpn_bbox": 0.03106, "s0.loss_cls": 0.24136, "s0.acc": 92.65527, "s0.loss_bbox": 0.11978, "s1.loss_cls": 0.11579, "s1.acc": 92.89214, "s1.loss_bbox": 0.11075, "s2.loss_cls": 0.05696, "s2.acc": 93.09241, "s2.loss_bbox": 0.06049, "loss": 0.77141, "time": 1.22909}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.001, "memory": 16440, "data_time": 0.01063, "loss_rpn_cls": 0.03774, "loss_rpn_bbox": 0.03465, "s0.loss_cls": 0.26637, "s0.acc": 91.95605, "s0.loss_bbox": 0.12523, "s1.loss_cls": 0.13641, "s1.acc": 91.63534, "s1.loss_bbox": 0.11821, "s2.loss_cls": 0.06737, "s2.acc": 91.6035, "s2.loss_bbox": 0.06838, "loss": 0.85436, "time": 1.22982}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.001, "memory": 16440, "data_time": 0.01095, "loss_rpn_cls": 0.03113, "loss_rpn_bbox": 0.03277, "s0.loss_cls": 0.24426, "s0.acc": 92.71094, "s0.loss_bbox": 0.10875, "s1.loss_cls": 0.12524, "s1.acc": 92.4345, "s1.loss_bbox": 0.1049, "s2.loss_cls": 0.06159, "s2.acc": 92.4612, "s2.loss_bbox": 0.06128, "loss": 0.76992, "time": 1.23018}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.001, "memory": 16440, "data_time": 0.01099, "loss_rpn_cls": 0.02759, "loss_rpn_bbox": 0.03006, "s0.loss_cls": 0.24981, "s0.acc": 92.20996, "s0.loss_bbox": 0.11556, "s1.loss_cls": 0.12913, "s1.acc": 91.71468, "s1.loss_bbox": 0.1068, "s2.loss_cls": 0.06483, "s2.acc": 91.69972, "s2.loss_bbox": 0.06327, "loss": 0.78704, "time": 1.23288}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.001, "memory": 16440, "data_time": 0.01045, "loss_rpn_cls": 0.03222, "loss_rpn_bbox": 0.02952, "s0.loss_cls": 0.2427, "s0.acc": 92.17871, "s0.loss_bbox": 0.11265, "s1.loss_cls": 0.12616, "s1.acc": 91.68434, "s1.loss_bbox": 0.10987, "s2.loss_cls": 0.06299, "s2.acc": 91.58935, "s2.loss_bbox": 0.06182, "loss": 0.77793, "time": 1.22862}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.001, "memory": 16440, "data_time": 0.01071, "loss_rpn_cls": 0.03224, "loss_rpn_bbox": 0.02563, "s0.loss_cls": 0.21522, "s0.acc": 93.1709, "s0.loss_bbox": 0.09946, "s1.loss_cls": 0.1118, "s1.acc": 92.88356, "s1.loss_bbox": 0.096, "s2.loss_cls": 0.05599, "s2.acc": 92.7513, "s2.loss_bbox": 0.05463, "loss": 0.69097, "time": 1.23241}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.001, "memory": 16440, "data_time": 0.01094, "loss_rpn_cls": 0.03417, "loss_rpn_bbox": 0.03292, "s0.loss_cls": 0.24403, "s0.acc": 92.53809, "s0.loss_bbox": 0.11674, "s1.loss_cls": 0.12129, "s1.acc": 92.64908, "s1.loss_bbox": 0.11175, "s2.loss_cls": 0.05855, "s2.acc": 92.68752, "s2.loss_bbox": 0.06213, "loss": 0.78158, "time": 1.22822}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.001, "memory": 16440, "data_time": 0.01082, "loss_rpn_cls": 0.0334, "loss_rpn_bbox": 0.03147, "s0.loss_cls": 0.25684, "s0.acc": 91.80078, "s0.loss_bbox": 0.12425, "s1.loss_cls": 0.1295, "s1.acc": 91.63187, "s1.loss_bbox": 0.11545, "s2.loss_cls": 0.06355, "s2.acc": 91.79732, "s2.loss_bbox": 0.0645, "loss": 0.81895, "time": 1.23048}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.001, "memory": 16440, "data_time": 0.01076, "loss_rpn_cls": 0.03427, "loss_rpn_bbox": 0.03328, "s0.loss_cls": 0.24395, "s0.acc": 92.52441, "s0.loss_bbox": 0.11471, "s1.loss_cls": 0.12518, "s1.acc": 92.22429, "s1.loss_bbox": 0.10676, "s2.loss_cls": 0.06206, "s2.acc": 92.31428, "s2.loss_bbox": 0.06135, "loss": 0.78155, "time": 1.23277}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.001, "memory": 16440, "data_time": 0.01059, "loss_rpn_cls": 0.0345, "loss_rpn_bbox": 0.03389, "s0.loss_cls": 0.26685, "s0.acc": 91.90723, "s0.loss_bbox": 0.12721, "s1.loss_cls": 0.13663, "s1.acc": 91.68779, "s1.loss_bbox": 0.11504, "s2.loss_cls": 0.06652, "s2.acc": 91.76881, "s2.loss_bbox": 0.06338, "loss": 0.84402, "time": 1.22788}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.001, "memory": 16440, "data_time": 0.01065, "loss_rpn_cls": 0.03004, "loss_rpn_bbox": 0.03017, "s0.loss_cls": 0.24022, "s0.acc": 92.78125, "s0.loss_bbox": 0.10261, "s1.loss_cls": 0.12087, "s1.acc": 92.66418, "s1.loss_bbox": 0.09653, "s2.loss_cls": 0.06034, "s2.acc": 92.55704, "s2.loss_bbox": 0.05615, "loss": 0.73692, "time": 1.22451}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.001, "memory": 16440, "data_time": 0.01067, "loss_rpn_cls": 0.03654, "loss_rpn_bbox": 0.03323, "s0.loss_cls": 0.25355, "s0.acc": 92.41406, "s0.loss_bbox": 0.12164, "s1.loss_cls": 0.12839, "s1.acc": 92.18096, "s1.loss_bbox": 0.10829, "s2.loss_cls": 0.06143, "s2.acc": 92.5869, "s2.loss_bbox": 0.06102, "loss": 0.8041, "time": 1.22817}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.001, "memory": 16440, "data_time": 0.0106, "loss_rpn_cls": 0.03441, "loss_rpn_bbox": 0.03052, "s0.loss_cls": 0.23602, "s0.acc": 92.58203, "s0.loss_bbox": 0.10976, "s1.loss_cls": 0.11825, "s1.acc": 92.63743, "s1.loss_bbox": 0.10143, "s2.loss_cls": 0.0585, "s2.acc": 92.81895, "s2.loss_bbox": 0.05933, "loss": 0.74821, "time": 1.22749}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.001, "memory": 16440, "data_time": 0.01045, "loss_rpn_cls": 0.02942, "loss_rpn_bbox": 0.03079, "s0.loss_cls": 0.24034, "s0.acc": 92.5166, "s0.loss_bbox": 0.10911, "s1.loss_cls": 0.12214, "s1.acc": 92.35236, "s1.loss_bbox": 0.10785, "s2.loss_cls": 0.06108, "s2.acc": 92.42684, "s2.loss_bbox": 0.06605, "loss": 0.76677, "time": 1.22448}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 0.001, "memory": 16440, "data_time": 0.01083, "loss_rpn_cls": 0.0314, "loss_rpn_bbox": 0.03222, "s0.loss_cls": 0.27143, "s0.acc": 91.7168, "s0.loss_bbox": 0.12184, "s1.loss_cls": 0.13489, "s1.acc": 91.66847, "s1.loss_bbox": 0.1155, "s2.loss_cls": 0.06513, "s2.acc": 91.73856, "s2.loss_bbox": 0.06655, "loss": 0.83897, "time": 1.23079}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.001, "memory": 16440, "data_time": 0.01038, "loss_rpn_cls": 0.05056, "loss_rpn_bbox": 0.03677, "s0.loss_cls": 0.27126, "s0.acc": 91.74121, "s0.loss_bbox": 0.126, "s1.loss_cls": 0.13444, "s1.acc": 91.71911, "s1.loss_bbox": 0.11296, "s2.loss_cls": 0.06537, "s2.acc": 91.9318, "s2.loss_bbox": 0.06437, "loss": 0.86173, "time": 1.22749}
{"mode": "val", "epoch": 5, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.353, "bbox_mAP_50": 0.526, "bbox_mAP_75": 0.387, "bbox_mAP_s": 0.012, "bbox_mAP_m": 0.121, "bbox_mAP_l": 0.41, "bbox_mAP_copypaste": "0.353 0.526 0.387 0.012 0.121 0.410"}
