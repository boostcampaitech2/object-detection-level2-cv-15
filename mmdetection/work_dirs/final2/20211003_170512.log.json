{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.15.1+2577e37", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNeXt',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(\n            type='Pretrained', checkpoint='open-mmlab://resnext101_32x4d'),\n        groups=32,\n        base_width=4),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../dataset/test.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/final2'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "final2.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 12558, "data_time": 0.05627, "loss_rpn_cls": 0.69142, "loss_rpn_bbox": 0.04687, "s0.loss_cls": 1.34831, "s0.acc": 64.29492, "s0.loss_bbox": 0.04863, "s1.loss_cls": 0.3065, "s1.acc": 94.12891, "s1.loss_bbox": 0.01724, "s2.loss_cls": 0.28513, "s2.acc": 64.95898, "s2.loss_bbox": 0.00564, "loss": 2.74975, "time": 1.18146}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 12558, "data_time": 0.01042, "loss_rpn_cls": 0.4875, "loss_rpn_bbox": 0.04344, "s0.loss_cls": 0.26218, "s0.acc": 95.8623, "s0.loss_bbox": 0.10359, "s1.loss_cls": 0.07616, "s1.acc": 98.0127, "s1.loss_bbox": 0.03088, "s2.loss_cls": 0.03187, "s2.acc": 98.48438, "s2.loss_bbox": 0.00745, "loss": 1.04306, "time": 1.1381}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0003, "memory": 12558, "data_time": 0.01059, "loss_rpn_cls": 0.18221, "loss_rpn_bbox": 0.04512, "s0.loss_cls": 0.353, "s0.acc": 93.0166, "s0.loss_bbox": 0.17623, "s1.loss_cls": 0.1011, "s1.acc": 96.8125, "s1.loss_bbox": 0.05405, "s2.loss_cls": 0.03119, "s2.acc": 98.36133, "s2.loss_bbox": 0.01062, "loss": 0.95352, "time": 1.13637}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0004, "memory": 12558, "data_time": 0.01082, "loss_rpn_cls": 0.11955, "loss_rpn_bbox": 0.03522, "s0.loss_cls": 0.27695, "s0.acc": 93.89551, "s0.loss_bbox": 0.14406, "s1.loss_cls": 0.09117, "s1.acc": 96.73926, "s1.loss_bbox": 0.05562, "s2.loss_cls": 0.02852, "s2.acc": 98.35938, "s2.loss_bbox": 0.01014, "loss": 0.76123, "time": 1.13847}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0005, "memory": 12558, "data_time": 0.01053, "loss_rpn_cls": 0.11607, "loss_rpn_bbox": 0.03765, "s0.loss_cls": 0.31799, "s0.acc": 92.94336, "s0.loss_bbox": 0.16218, "s1.loss_cls": 0.10718, "s1.acc": 95.90234, "s1.loss_bbox": 0.0712, "s2.loss_cls": 0.0335, "s2.acc": 97.9502, "s2.loss_bbox": 0.01389, "loss": 0.85966, "time": 1.13198}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0006, "memory": 12558, "data_time": 0.01042, "loss_rpn_cls": 0.10239, "loss_rpn_bbox": 0.03577, "s0.loss_cls": 0.28355, "s0.acc": 93.6123, "s0.loss_bbox": 0.14726, "s1.loss_cls": 0.10003, "s1.acc": 95.93457, "s1.loss_bbox": 0.06945, "s2.loss_cls": 0.03256, "s2.acc": 97.86133, "s2.loss_bbox": 0.01545, "loss": 0.78645, "time": 1.13313}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0007, "memory": 12558, "data_time": 0.01064, "loss_rpn_cls": 0.10833, "loss_rpn_bbox": 0.04108, "s0.loss_cls": 0.27518, "s0.acc": 93.71191, "s0.loss_bbox": 0.13781, "s1.loss_cls": 0.10427, "s1.acc": 95.58594, "s1.loss_bbox": 0.07464, "s2.loss_cls": 0.03546, "s2.acc": 97.58008, "s2.loss_bbox": 0.01841, "loss": 0.79519, "time": 1.13503}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0008, "memory": 12558, "data_time": 0.01056, "loss_rpn_cls": 0.08762, "loss_rpn_bbox": 0.03249, "s0.loss_cls": 0.25938, "s0.acc": 93.81836, "s0.loss_bbox": 0.13488, "s1.loss_cls": 0.10213, "s1.acc": 95.4502, "s1.loss_bbox": 0.0772, "s2.loss_cls": 0.03486, "s2.acc": 97.4541, "s2.loss_bbox": 0.02012, "loss": 0.74869, "time": 1.13161}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0009, "memory": 12558, "data_time": 0.01073, "loss_rpn_cls": 0.08818, "loss_rpn_bbox": 0.03298, "s0.loss_cls": 0.2793, "s0.acc": 93.3877, "s0.loss_bbox": 0.14083, "s1.loss_cls": 0.10876, "s1.acc": 94.99414, "s1.loss_bbox": 0.08379, "s2.loss_cls": 0.03959, "s2.acc": 96.95605, "s2.loss_bbox": 0.02482, "loss": 0.79824, "time": 1.1303}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.001, "memory": 12558, "data_time": 0.01089, "loss_rpn_cls": 0.08808, "loss_rpn_bbox": 0.03842, "s0.loss_cls": 0.28552, "s0.acc": 92.99219, "s0.loss_bbox": 0.14923, "s1.loss_cls": 0.11657, "s1.acc": 94.35547, "s1.loss_bbox": 0.09446, "s2.loss_cls": 0.04411, "s2.acc": 96.33008, "s2.loss_bbox": 0.03136, "loss": 0.84775, "time": 1.13647}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.001, "memory": 12558, "data_time": 0.01074, "loss_rpn_cls": 0.0844, "loss_rpn_bbox": 0.03983, "s0.loss_cls": 0.30704, "s0.acc": 92.375, "s0.loss_bbox": 0.15121, "s1.loss_cls": 0.12873, "s1.acc": 93.72559, "s1.loss_bbox": 0.09771, "s2.loss_cls": 0.0505, "s2.acc": 95.53125, "s2.loss_bbox": 0.03646, "loss": 0.89588, "time": 1.13634}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.001, "memory": 12558, "data_time": 0.01058, "loss_rpn_cls": 0.07843, "loss_rpn_bbox": 0.03538, "s0.loss_cls": 0.30427, "s0.acc": 92.3623, "s0.loss_bbox": 0.15668, "s1.loss_cls": 0.12882, "s1.acc": 93.5, "s1.loss_bbox": 0.10095, "s2.loss_cls": 0.05077, "s2.acc": 95.34375, "s2.loss_bbox": 0.03726, "loss": 0.89256, "time": 1.13289}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.001, "memory": 12558, "data_time": 0.01046, "loss_rpn_cls": 0.10459, "loss_rpn_bbox": 0.04594, "s0.loss_cls": 0.35009, "s0.acc": 91.82812, "s0.loss_bbox": 0.17014, "s1.loss_cls": 0.14052, "s1.acc": 93.40039, "s1.loss_bbox": 0.106, "s2.loss_cls": 0.05712, "s2.acc": 94.9668, "s2.loss_bbox": 0.04132, "loss": 1.01572, "time": 1.13613}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.001, "memory": 12558, "data_time": 0.01081, "loss_rpn_cls": 0.0749, "loss_rpn_bbox": 0.03506, "s0.loss_cls": 0.28058, "s0.acc": 92.83887, "s0.loss_bbox": 0.14155, "s1.loss_cls": 0.12023, "s1.acc": 93.95703, "s1.loss_bbox": 0.09704, "s2.loss_cls": 0.04981, "s2.acc": 95.21387, "s2.loss_bbox": 0.03927, "loss": 0.83843, "time": 1.13843}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.001, "memory": 12558, "data_time": 0.011, "loss_rpn_cls": 0.06823, "loss_rpn_bbox": 0.0434, "s0.loss_cls": 0.27182, "s0.acc": 92.90723, "s0.loss_bbox": 0.13689, "s1.loss_cls": 0.12208, "s1.acc": 93.63867, "s1.loss_bbox": 0.09514, "s2.loss_cls": 0.05061, "s2.acc": 94.88574, "s2.loss_bbox": 0.04023, "loss": 0.82838, "time": 1.14051}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.001, "memory": 12558, "data_time": 0.01106, "loss_rpn_cls": 0.07394, "loss_rpn_bbox": 0.03677, "s0.loss_cls": 0.29128, "s0.acc": 92.51367, "s0.loss_bbox": 0.14608, "s1.loss_cls": 0.13129, "s1.acc": 93.20898, "s1.loss_bbox": 0.10327, "s2.loss_cls": 0.05373, "s2.acc": 94.47852, "s2.loss_bbox": 0.04301, "loss": 0.87936, "time": 1.13487}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.001, "memory": 12558, "data_time": 0.0109, "loss_rpn_cls": 0.06277, "loss_rpn_bbox": 0.03127, "s0.loss_cls": 0.29064, "s0.acc": 92.32324, "s0.loss_bbox": 0.15125, "s1.loss_cls": 0.13246, "s1.acc": 92.92285, "s1.loss_bbox": 0.10865, "s2.loss_cls": 0.05669, "s2.acc": 94.20312, "s2.loss_bbox": 0.0465, "loss": 0.88023, "time": 1.14149}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.001, "memory": 12558, "data_time": 0.01111, "loss_rpn_cls": 0.0571, "loss_rpn_bbox": 0.03451, "s0.loss_cls": 0.26717, "s0.acc": 93.07031, "s0.loss_bbox": 0.12903, "s1.loss_cls": 0.1251, "s1.acc": 93.36642, "s1.loss_bbox": 0.10011, "s2.loss_cls": 0.05503, "s2.acc": 94.31466, "s2.loss_bbox": 0.04595, "loss": 0.81401, "time": 1.13981}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.001, "memory": 12558, "data_time": 0.01104, "loss_rpn_cls": 0.05845, "loss_rpn_bbox": 0.03179, "s0.loss_cls": 0.28507, "s0.acc": 92.56348, "s0.loss_bbox": 0.13776, "s1.loss_cls": 0.12737, "s1.acc": 93.35547, "s1.loss_bbox": 0.10475, "s2.loss_cls": 0.05356, "s2.acc": 94.59082, "s2.loss_bbox": 0.04716, "loss": 0.84591, "time": 1.13712}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.001, "memory": 12558, "data_time": 0.01089, "loss_rpn_cls": 0.06992, "loss_rpn_bbox": 0.03842, "s0.loss_cls": 0.28977, "s0.acc": 92.23926, "s0.loss_bbox": 0.14989, "s1.loss_cls": 0.1363, "s1.acc": 92.79492, "s1.loss_bbox": 0.11096, "s2.loss_cls": 0.05915, "s2.acc": 93.83105, "s2.loss_bbox": 0.04818, "loss": 0.90259, "time": 1.13758}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.001, "memory": 12558, "data_time": 0.01093, "loss_rpn_cls": 0.06437, "loss_rpn_bbox": 0.03691, "s0.loss_cls": 0.3038, "s0.acc": 91.65918, "s0.loss_bbox": 0.15799, "s1.loss_cls": 0.14276, "s1.acc": 92.11014, "s1.loss_bbox": 0.12126, "s2.loss_cls": 0.06104, "s2.acc": 93.61654, "s2.loss_bbox": 0.05434, "loss": 0.94247, "time": 1.1299}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.001, "memory": 12558, "data_time": 0.01086, "loss_rpn_cls": 0.06075, "loss_rpn_bbox": 0.03693, "s0.loss_cls": 0.29036, "s0.acc": 92.06445, "s0.loss_bbox": 0.14919, "s1.loss_cls": 0.13056, "s1.acc": 92.86328, "s1.loss_bbox": 0.10972, "s2.loss_cls": 0.05564, "s2.acc": 93.97852, "s2.loss_bbox": 0.04784, "loss": 0.881, "time": 1.13106}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.001, "memory": 12558, "data_time": 0.011, "loss_rpn_cls": 0.05779, "loss_rpn_bbox": 0.03524, "s0.loss_cls": 0.29064, "s0.acc": 92.18555, "s0.loss_bbox": 0.14423, "s1.loss_cls": 0.1343, "s1.acc": 92.68931, "s1.loss_bbox": 0.11157, "s2.loss_cls": 0.05827, "s2.acc": 93.73229, "s2.loss_bbox": 0.05063, "loss": 0.88268, "time": 1.14038}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.001, "memory": 12558, "data_time": 0.01097, "loss_rpn_cls": 0.07321, "loss_rpn_bbox": 0.04498, "s0.loss_cls": 0.33557, "s0.acc": 90.75293, "s0.loss_bbox": 0.17542, "s1.loss_cls": 0.15469, "s1.acc": 91.60256, "s1.loss_bbox": 0.12785, "s2.loss_cls": 0.06519, "s2.acc": 93.23756, "s2.loss_bbox": 0.05032, "loss": 1.02723, "time": 1.14165}
{"mode": "val", "epoch": 1, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.096, "bbox_mAP_50": 0.185, "bbox_mAP_75": 0.091, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.121, "bbox_mAP_copypaste": "0.096 0.185 0.091 0.000 0.005 0.121"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.001, "memory": 12558, "data_time": 0.05659, "loss_rpn_cls": 0.05904, "loss_rpn_bbox": 0.03678, "s0.loss_cls": 0.31084, "s0.acc": 91.35156, "s0.loss_bbox": 0.16245, "s1.loss_cls": 0.14926, "s1.acc": 91.66489, "s1.loss_bbox": 0.13639, "s2.loss_cls": 0.06541, "s2.acc": 92.96941, "s2.loss_bbox": 0.06174, "loss": 0.98192, "time": 1.18236}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 12558, "data_time": 0.0103, "loss_rpn_cls": 0.06472, "loss_rpn_bbox": 0.04353, "s0.loss_cls": 0.321, "s0.acc": 91.05957, "s0.loss_bbox": 0.1649, "s1.loss_cls": 0.14992, "s1.acc": 91.69974, "s1.loss_bbox": 0.12705, "s2.loss_cls": 0.0653, "s2.acc": 93.12474, "s2.loss_bbox": 0.05655, "loss": 0.99297, "time": 1.1385}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.001, "memory": 12558, "data_time": 0.01007, "loss_rpn_cls": 0.05525, "loss_rpn_bbox": 0.03609, "s0.loss_cls": 0.28235, "s0.acc": 92.18848, "s0.loss_bbox": 0.1423, "s1.loss_cls": 0.13507, "s1.acc": 92.51724, "s1.loss_bbox": 0.11499, "s2.loss_cls": 0.05835, "s2.acc": 93.67053, "s2.loss_bbox": 0.05283, "loss": 0.87723, "time": 1.13665}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 12558, "data_time": 0.01043, "loss_rpn_cls": 0.05809, "loss_rpn_bbox": 0.03521, "s0.loss_cls": 0.28, "s0.acc": 92.40137, "s0.loss_bbox": 0.13571, "s1.loss_cls": 0.1309, "s1.acc": 92.70123, "s1.loss_bbox": 0.10965, "s2.loss_cls": 0.05662, "s2.acc": 93.84973, "s2.loss_bbox": 0.04852, "loss": 0.85468, "time": 1.13767}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.001, "memory": 12558, "data_time": 0.01043, "loss_rpn_cls": 0.05323, "loss_rpn_bbox": 0.03364, "s0.loss_cls": 0.28051, "s0.acc": 92.58887, "s0.loss_bbox": 0.12712, "s1.loss_cls": 0.13146, "s1.acc": 92.97688, "s1.loss_bbox": 0.10221, "s2.loss_cls": 0.05858, "s2.acc": 93.78064, "s2.loss_bbox": 0.04993, "loss": 0.83668, "time": 1.13672}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 12558, "data_time": 0.0104, "loss_rpn_cls": 0.04983, "loss_rpn_bbox": 0.02884, "s0.loss_cls": 0.2583, "s0.acc": 92.96582, "s0.loss_bbox": 0.11892, "s1.loss_cls": 0.12633, "s1.acc": 93.11571, "s1.loss_bbox": 0.09832, "s2.loss_cls": 0.05655, "s2.acc": 93.86975, "s2.loss_bbox": 0.04882, "loss": 0.78591, "time": 1.13129}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.001, "memory": 12558, "data_time": 0.01017, "loss_rpn_cls": 0.05008, "loss_rpn_bbox": 0.03594, "s0.loss_cls": 0.25626, "s0.acc": 92.75586, "s0.loss_bbox": 0.12602, "s1.loss_cls": 0.12562, "s1.acc": 92.98096, "s1.loss_bbox": 0.10604, "s2.loss_cls": 0.05734, "s2.acc": 93.80998, "s2.loss_bbox": 0.0505, "loss": 0.8078, "time": 1.13103}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.001, "memory": 12558, "data_time": 0.01097, "loss_rpn_cls": 0.04305, "loss_rpn_bbox": 0.02415, "s0.loss_cls": 0.25607, "s0.acc": 92.78223, "s0.loss_bbox": 0.1232, "s1.loss_cls": 0.12319, "s1.acc": 92.92008, "s1.loss_bbox": 0.10647, "s2.loss_cls": 0.05617, "s2.acc": 93.56754, "s2.loss_bbox": 0.05227, "loss": 0.78457, "time": 1.13787}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.001, "memory": 12558, "data_time": 0.01063, "loss_rpn_cls": 0.06106, "loss_rpn_bbox": 0.03854, "s0.loss_cls": 0.30369, "s0.acc": 91.46582, "s0.loss_bbox": 0.14934, "s1.loss_cls": 0.14672, "s1.acc": 92.02474, "s1.loss_bbox": 0.12061, "s2.loss_cls": 0.06432, "s2.acc": 93.21273, "s2.loss_bbox": 0.05465, "loss": 0.93893, "time": 1.13577}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.001, "memory": 12558, "data_time": 0.01077, "loss_rpn_cls": 0.05598, "loss_rpn_bbox": 0.03916, "s0.loss_cls": 0.30323, "s0.acc": 91.65332, "s0.loss_bbox": 0.15316, "s1.loss_cls": 0.13968, "s1.acc": 92.18508, "s1.loss_bbox": 0.11595, "s2.loss_cls": 0.06233, "s2.acc": 92.88945, "s2.loss_bbox": 0.05538, "loss": 0.92487, "time": 1.13449}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.001, "memory": 12558, "data_time": 0.01061, "loss_rpn_cls": 0.04731, "loss_rpn_bbox": 0.03755, "s0.loss_cls": 0.3023, "s0.acc": 91.69824, "s0.loss_bbox": 0.14188, "s1.loss_cls": 0.14719, "s1.acc": 91.74021, "s1.loss_bbox": 0.12051, "s2.loss_cls": 0.06698, "s2.acc": 92.54601, "s2.loss_bbox": 0.06044, "loss": 0.92417, "time": 1.14042}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.001, "memory": 12558, "data_time": 0.01078, "loss_rpn_cls": 0.04507, "loss_rpn_bbox": 0.03459, "s0.loss_cls": 0.29925, "s0.acc": 91.92578, "s0.loss_bbox": 0.14742, "s1.loss_cls": 0.14285, "s1.acc": 92.16326, "s1.loss_bbox": 0.12171, "s2.loss_cls": 0.06332, "s2.acc": 92.90637, "s2.loss_bbox": 0.0575, "loss": 0.91171, "time": 1.14054}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.001, "memory": 12558, "data_time": 0.01071, "loss_rpn_cls": 0.0485, "loss_rpn_bbox": 0.03172, "s0.loss_cls": 0.29721, "s0.acc": 91.40723, "s0.loss_bbox": 0.14299, "s1.loss_cls": 0.14894, "s1.acc": 91.29927, "s1.loss_bbox": 0.12564, "s2.loss_cls": 0.06718, "s2.acc": 92.3207, "s2.loss_bbox": 0.05913, "loss": 0.92133, "time": 1.13031}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.001, "memory": 12558, "data_time": 0.01069, "loss_rpn_cls": 0.04174, "loss_rpn_bbox": 0.0303, "s0.loss_cls": 0.25694, "s0.acc": 92.61426, "s0.loss_bbox": 0.1214, "s1.loss_cls": 0.13183, "s1.acc": 92.33548, "s1.loss_bbox": 0.10901, "s2.loss_cls": 0.06092, "s2.acc": 93.03411, "s2.loss_bbox": 0.05654, "loss": 0.80867, "time": 1.13743}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.001, "memory": 12558, "data_time": 0.01079, "loss_rpn_cls": 0.05021, "loss_rpn_bbox": 0.0361, "s0.loss_cls": 0.28406, "s0.acc": 91.96094, "s0.loss_bbox": 0.14007, "s1.loss_cls": 0.13908, "s1.acc": 92.21567, "s1.loss_bbox": 0.11681, "s2.loss_cls": 0.06348, "s2.acc": 92.8108, "s2.loss_bbox": 0.05758, "loss": 0.88738, "time": 1.1406}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.001, "memory": 12558, "data_time": 0.01086, "loss_rpn_cls": 0.04214, "loss_rpn_bbox": 0.03084, "s0.loss_cls": 0.25714, "s0.acc": 92.78809, "s0.loss_bbox": 0.12274, "s1.loss_cls": 0.12979, "s1.acc": 92.47756, "s1.loss_bbox": 0.10388, "s2.loss_cls": 0.06011, "s2.acc": 93.15829, "s2.loss_bbox": 0.05242, "loss": 0.79906, "time": 1.13505}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.001, "memory": 12558, "data_time": 0.01064, "loss_rpn_cls": 0.04885, "loss_rpn_bbox": 0.03646, "s0.loss_cls": 0.28519, "s0.acc": 91.87695, "s0.loss_bbox": 0.14016, "s1.loss_cls": 0.13844, "s1.acc": 91.99644, "s1.loss_bbox": 0.1177, "s2.loss_cls": 0.06365, "s2.acc": 92.57914, "s2.loss_bbox": 0.06078, "loss": 0.89124, "time": 1.13135}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.001, "memory": 12558, "data_time": 0.0103, "loss_rpn_cls": 0.05049, "loss_rpn_bbox": 0.03183, "s0.loss_cls": 0.28238, "s0.acc": 92.25293, "s0.loss_bbox": 0.13222, "s1.loss_cls": 0.13775, "s1.acc": 92.34787, "s1.loss_bbox": 0.11082, "s2.loss_cls": 0.06263, "s2.acc": 93.15564, "s2.loss_bbox": 0.05637, "loss": 0.86449, "time": 1.13003}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.001, "memory": 12558, "data_time": 0.01082, "loss_rpn_cls": 0.04972, "loss_rpn_bbox": 0.03342, "s0.loss_cls": 0.24816, "s0.acc": 93.0, "s0.loss_bbox": 0.11693, "s1.loss_cls": 0.12614, "s1.acc": 92.69657, "s1.loss_bbox": 0.10397, "s2.loss_cls": 0.05901, "s2.acc": 93.25545, "s2.loss_bbox": 0.0507, "loss": 0.78805, "time": 1.14257}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.001, "memory": 12558, "data_time": 0.01066, "loss_rpn_cls": 0.04303, "loss_rpn_bbox": 0.03214, "s0.loss_cls": 0.27625, "s0.acc": 92.25, "s0.loss_bbox": 0.13151, "s1.loss_cls": 0.13772, "s1.acc": 92.083, "s1.loss_bbox": 0.11633, "s2.loss_cls": 0.06354, "s2.acc": 92.4816, "s2.loss_bbox": 0.05839, "loss": 0.85892, "time": 1.13448}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.001, "memory": 12558, "data_time": 0.01062, "loss_rpn_cls": 0.05843, "loss_rpn_bbox": 0.0311, "s0.loss_cls": 0.26162, "s0.acc": 92.57129, "s0.loss_bbox": 0.12171, "s1.loss_cls": 0.13107, "s1.acc": 92.50803, "s1.loss_bbox": 0.10635, "s2.loss_cls": 0.0618, "s2.acc": 93.02276, "s2.loss_bbox": 0.05579, "loss": 0.82788, "time": 1.12562}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.001, "memory": 12558, "data_time": 0.01077, "loss_rpn_cls": 0.04635, "loss_rpn_bbox": 0.03298, "s0.loss_cls": 0.27068, "s0.acc": 92.34668, "s0.loss_bbox": 0.12509, "s1.loss_cls": 0.13722, "s1.acc": 91.98282, "s1.loss_bbox": 0.11097, "s2.loss_cls": 0.06424, "s2.acc": 92.41095, "s2.loss_bbox": 0.05733, "loss": 0.84485, "time": 1.13572}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.001, "memory": 12558, "data_time": 0.01087, "loss_rpn_cls": 0.04827, "loss_rpn_bbox": 0.0366, "s0.loss_cls": 0.26055, "s0.acc": 92.66895, "s0.loss_bbox": 0.12342, "s1.loss_cls": 0.12866, "s1.acc": 92.59266, "s1.loss_bbox": 0.10748, "s2.loss_cls": 0.06004, "s2.acc": 93.11378, "s2.loss_bbox": 0.05602, "loss": 0.82105, "time": 1.13345}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.001, "memory": 12558, "data_time": 0.01102, "loss_rpn_cls": 0.04073, "loss_rpn_bbox": 0.03404, "s0.loss_cls": 0.26414, "s0.acc": 92.54199, "s0.loss_bbox": 0.11993, "s1.loss_cls": 0.13281, "s1.acc": 92.25427, "s1.loss_bbox": 0.10932, "s2.loss_cls": 0.06319, "s2.acc": 92.46074, "s2.loss_bbox": 0.05961, "loss": 0.82377, "time": 1.14167}
{"mode": "val", "epoch": 2, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.183, "bbox_mAP_50": 0.312, "bbox_mAP_75": 0.19, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.021, "bbox_mAP_l": 0.224, "bbox_mAP_copypaste": "0.183 0.312 0.190 0.003 0.021 0.224"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.001, "memory": 12558, "data_time": 0.05666, "loss_rpn_cls": 0.04761, "loss_rpn_bbox": 0.04027, "s0.loss_cls": 0.26167, "s0.acc": 92.43848, "s0.loss_bbox": 0.12058, "s1.loss_cls": 0.13562, "s1.acc": 92.0302, "s1.loss_bbox": 0.10693, "s2.loss_cls": 0.06586, "s2.acc": 92.03675, "s2.loss_bbox": 0.05719, "loss": 0.83573, "time": 1.18436}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 12558, "data_time": 0.01033, "loss_rpn_cls": 0.0398, "loss_rpn_bbox": 0.0284, "s0.loss_cls": 0.23608, "s0.acc": 92.92969, "s0.loss_bbox": 0.1178, "s1.loss_cls": 0.12046, "s1.acc": 92.58179, "s1.loss_bbox": 0.10566, "s2.loss_cls": 0.05843, "s2.acc": 92.9007, "s2.loss_bbox": 0.05656, "loss": 0.76319, "time": 1.14175}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.001, "memory": 12558, "data_time": 0.01055, "loss_rpn_cls": 0.03567, "loss_rpn_bbox": 0.02903, "s0.loss_cls": 0.25496, "s0.acc": 92.39941, "s0.loss_bbox": 0.1251, "s1.loss_cls": 0.13383, "s1.acc": 92.02964, "s1.loss_bbox": 0.11424, "s2.loss_cls": 0.06371, "s2.acc": 92.33076, "s2.loss_bbox": 0.06318, "loss": 0.81972, "time": 1.13991}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 12558, "data_time": 0.01057, "loss_rpn_cls": 0.03955, "loss_rpn_bbox": 0.03104, "s0.loss_cls": 0.25087, "s0.acc": 92.44531, "s0.loss_bbox": 0.12668, "s1.loss_cls": 0.12812, "s1.acc": 92.15966, "s1.loss_bbox": 0.11544, "s2.loss_cls": 0.06111, "s2.acc": 92.78171, "s2.loss_bbox": 0.0618, "loss": 0.8146, "time": 1.14035}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.001, "memory": 12558, "data_time": 0.01065, "loss_rpn_cls": 0.0365, "loss_rpn_bbox": 0.03074, "s0.loss_cls": 0.26398, "s0.acc": 92.0957, "s0.loss_bbox": 0.1299, "s1.loss_cls": 0.13415, "s1.acc": 91.97442, "s1.loss_bbox": 0.11557, "s2.loss_cls": 0.06269, "s2.acc": 92.44963, "s2.loss_bbox": 0.06219, "loss": 0.83572, "time": 1.13643}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 12558, "data_time": 0.01066, "loss_rpn_cls": 0.04053, "loss_rpn_bbox": 0.02757, "s0.loss_cls": 0.23857, "s0.acc": 92.96875, "s0.loss_bbox": 0.10943, "s1.loss_cls": 0.12249, "s1.acc": 92.67743, "s1.loss_bbox": 0.1042, "s2.loss_cls": 0.05965, "s2.acc": 92.94123, "s2.loss_bbox": 0.05924, "loss": 0.76167, "time": 1.14071}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.001, "memory": 12558, "data_time": 0.01111, "loss_rpn_cls": 0.04138, "loss_rpn_bbox": 0.0288, "s0.loss_cls": 0.23972, "s0.acc": 92.97168, "s0.loss_bbox": 0.11125, "s1.loss_cls": 0.1257, "s1.acc": 92.57198, "s1.loss_bbox": 0.10305, "s2.loss_cls": 0.063, "s2.acc": 92.72508, "s2.loss_bbox": 0.05687, "loss": 0.76977, "time": 1.14022}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.001, "memory": 12558, "data_time": 0.01047, "loss_rpn_cls": 0.04057, "loss_rpn_bbox": 0.03732, "s0.loss_cls": 0.26018, "s0.acc": 92.56445, "s0.loss_bbox": 0.12785, "s1.loss_cls": 0.13277, "s1.acc": 92.2055, "s1.loss_bbox": 0.11569, "s2.loss_cls": 0.06151, "s2.acc": 92.82849, "s2.loss_bbox": 0.06062, "loss": 0.83652, "time": 1.13068}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.001, "memory": 12558, "data_time": 0.0108, "loss_rpn_cls": 0.041, "loss_rpn_bbox": 0.03213, "s0.loss_cls": 0.25131, "s0.acc": 92.74414, "s0.loss_bbox": 0.12, "s1.loss_cls": 0.12352, "s1.acc": 92.71444, "s1.loss_bbox": 0.10297, "s2.loss_cls": 0.059, "s2.acc": 93.08342, "s2.loss_bbox": 0.05419, "loss": 0.78411, "time": 1.13615}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.001, "memory": 12558, "data_time": 0.01041, "loss_rpn_cls": 0.03609, "loss_rpn_bbox": 0.02811, "s0.loss_cls": 0.24914, "s0.acc": 92.69629, "s0.loss_bbox": 0.11814, "s1.loss_cls": 0.12601, "s1.acc": 92.3875, "s1.loss_bbox": 0.10826, "s2.loss_cls": 0.05983, "s2.acc": 92.90893, "s2.loss_bbox": 0.057, "loss": 0.78258, "time": 1.13482}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.001, "memory": 12558, "data_time": 0.01051, "loss_rpn_cls": 0.04726, "loss_rpn_bbox": 0.03073, "s0.loss_cls": 0.28149, "s0.acc": 91.94629, "s0.loss_bbox": 0.13803, "s1.loss_cls": 0.13709, "s1.acc": 92.00002, "s1.loss_bbox": 0.11921, "s2.loss_cls": 0.06398, "s2.acc": 92.70454, "s2.loss_bbox": 0.06062, "loss": 0.87842, "time": 1.13794}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.001, "memory": 12558, "data_time": 0.01101, "loss_rpn_cls": 0.0464, "loss_rpn_bbox": 0.03619, "s0.loss_cls": 0.279, "s0.acc": 91.75879, "s0.loss_bbox": 0.14238, "s1.loss_cls": 0.13946, "s1.acc": 91.64966, "s1.loss_bbox": 0.12341, "s2.loss_cls": 0.06582, "s2.acc": 92.27237, "s2.loss_bbox": 0.06564, "loss": 0.8983, "time": 1.1409}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.001, "memory": 12558, "data_time": 0.01094, "loss_rpn_cls": 0.04117, "loss_rpn_bbox": 0.03551, "s0.loss_cls": 0.26246, "s0.acc": 92.33887, "s0.loss_bbox": 0.12588, "s1.loss_cls": 0.1307, "s1.acc": 92.32743, "s1.loss_bbox": 0.11189, "s2.loss_cls": 0.06177, "s2.acc": 92.54559, "s2.loss_bbox": 0.05937, "loss": 0.82875, "time": 1.13526}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.001, "memory": 12558, "data_time": 0.01114, "loss_rpn_cls": 0.03858, "loss_rpn_bbox": 0.03409, "s0.loss_cls": 0.26717, "s0.acc": 91.99121, "s0.loss_bbox": 0.12409, "s1.loss_cls": 0.13692, "s1.acc": 91.9724, "s1.loss_bbox": 0.11604, "s2.loss_cls": 0.06515, "s2.acc": 92.46417, "s2.loss_bbox": 0.06421, "loss": 0.84624, "time": 1.14465}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.001, "memory": 12558, "data_time": 0.0114, "loss_rpn_cls": 0.03613, "loss_rpn_bbox": 0.02613, "s0.loss_cls": 0.24421, "s0.acc": 92.80273, "s0.loss_bbox": 0.11526, "s1.loss_cls": 0.13169, "s1.acc": 92.26086, "s1.loss_bbox": 0.11317, "s2.loss_cls": 0.06322, "s2.acc": 92.27694, "s2.loss_bbox": 0.06038, "loss": 0.79019, "time": 1.14203}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.001, "memory": 12558, "data_time": 0.01082, "loss_rpn_cls": 0.03264, "loss_rpn_bbox": 0.02729, "s0.loss_cls": 0.23909, "s0.acc": 93.02734, "s0.loss_bbox": 0.11042, "s1.loss_cls": 0.12464, "s1.acc": 92.65038, "s1.loss_bbox": 0.10122, "s2.loss_cls": 0.06087, "s2.acc": 92.83292, "s2.loss_bbox": 0.0563, "loss": 0.75246, "time": 1.13509}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.001, "memory": 12558, "data_time": 0.01047, "loss_rpn_cls": 0.04662, "loss_rpn_bbox": 0.03674, "s0.loss_cls": 0.27329, "s0.acc": 92.1416, "s0.loss_bbox": 0.12739, "s1.loss_cls": 0.1378, "s1.acc": 91.86569, "s1.loss_bbox": 0.11672, "s2.loss_cls": 0.06478, "s2.acc": 92.48248, "s2.loss_bbox": 0.06213, "loss": 0.86547, "time": 1.12605}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.001, "memory": 12558, "data_time": 0.01128, "loss_rpn_cls": 0.03995, "loss_rpn_bbox": 0.03107, "s0.loss_cls": 0.24219, "s0.acc": 92.7666, "s0.loss_bbox": 0.1094, "s1.loss_cls": 0.13023, "s1.acc": 92.14186, "s1.loss_bbox": 0.10476, "s2.loss_cls": 0.06249, "s2.acc": 92.43386, "s2.loss_bbox": 0.0576, "loss": 0.77769, "time": 1.13795}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.001, "memory": 12558, "data_time": 0.01116, "loss_rpn_cls": 0.04084, "loss_rpn_bbox": 0.03118, "s0.loss_cls": 0.24488, "s0.acc": 92.93945, "s0.loss_bbox": 0.10917, "s1.loss_cls": 0.12619, "s1.acc": 92.55014, "s1.loss_bbox": 0.10127, "s2.loss_cls": 0.06123, "s2.acc": 92.54914, "s2.loss_bbox": 0.05659, "loss": 0.77135, "time": 1.13913}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.001, "memory": 12558, "data_time": 0.01111, "loss_rpn_cls": 0.03628, "loss_rpn_bbox": 0.02579, "s0.loss_cls": 0.24577, "s0.acc": 92.83496, "s0.loss_bbox": 0.10915, "s1.loss_cls": 0.12674, "s1.acc": 92.4162, "s1.loss_bbox": 0.10288, "s2.loss_cls": 0.06231, "s2.acc": 92.47178, "s2.loss_bbox": 0.0581, "loss": 0.76702, "time": 1.1366}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.001, "memory": 12558, "data_time": 0.0108, "loss_rpn_cls": 0.05492, "loss_rpn_bbox": 0.03989, "s0.loss_cls": 0.30905, "s0.acc": 91.07715, "s0.loss_bbox": 0.14712, "s1.loss_cls": 0.15485, "s1.acc": 90.87692, "s1.loss_bbox": 0.13234, "s2.loss_cls": 0.0741, "s2.acc": 91.35142, "s2.loss_bbox": 0.06936, "loss": 0.98162, "time": 1.1318}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.001, "memory": 12558, "data_time": 0.011, "loss_rpn_cls": 0.04375, "loss_rpn_bbox": 0.04382, "s0.loss_cls": 0.28288, "s0.acc": 91.67676, "s0.loss_bbox": 0.13627, "s1.loss_cls": 0.14236, "s1.acc": 91.49011, "s1.loss_bbox": 0.11893, "s2.loss_cls": 0.06805, "s2.acc": 91.90148, "s2.loss_bbox": 0.06209, "loss": 0.89816, "time": 1.13503}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.001, "memory": 12558, "data_time": 0.0113, "loss_rpn_cls": 0.04177, "loss_rpn_bbox": 0.02621, "s0.loss_cls": 0.25923, "s0.acc": 92.5918, "s0.loss_bbox": 0.11479, "s1.loss_cls": 0.13106, "s1.acc": 92.39318, "s1.loss_bbox": 0.10128, "s2.loss_cls": 0.06143, "s2.acc": 92.5695, "s2.loss_bbox": 0.05594, "loss": 0.7917, "time": 1.13783}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.001, "memory": 12558, "data_time": 0.01115, "loss_rpn_cls": 0.045, "loss_rpn_bbox": 0.02786, "s0.loss_cls": 0.26459, "s0.acc": 92.4248, "s0.loss_bbox": 0.12858, "s1.loss_cls": 0.13196, "s1.acc": 92.36408, "s1.loss_bbox": 0.11459, "s2.loss_cls": 0.0617, "s2.acc": 92.77165, "s2.loss_bbox": 0.05862, "loss": 0.8329, "time": 1.13787}
{"mode": "val", "epoch": 3, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.258, "bbox_mAP_50": 0.417, "bbox_mAP_75": 0.278, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.065, "bbox_mAP_l": 0.308, "bbox_mAP_copypaste": "0.258 0.417 0.278 0.004 0.065 0.308"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.001, "memory": 12558, "data_time": 0.05658, "loss_rpn_cls": 0.03412, "loss_rpn_bbox": 0.03743, "s0.loss_cls": 0.25086, "s0.acc": 92.2666, "s0.loss_bbox": 0.12681, "s1.loss_cls": 0.12805, "s1.acc": 92.2056, "s1.loss_bbox": 0.11619, "s2.loss_cls": 0.06377, "s2.acc": 92.22248, "s2.loss_bbox": 0.0646, "loss": 0.82182, "time": 1.18085}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 12558, "data_time": 0.01078, "loss_rpn_cls": 0.03916, "loss_rpn_bbox": 0.02798, "s0.loss_cls": 0.23375, "s0.acc": 93.10352, "s0.loss_bbox": 0.10896, "s1.loss_cls": 0.12095, "s1.acc": 92.83004, "s1.loss_bbox": 0.10437, "s2.loss_cls": 0.06104, "s2.acc": 92.78298, "s2.loss_bbox": 0.06023, "loss": 0.75643, "time": 1.13903}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.001, "memory": 12558, "data_time": 0.01052, "loss_rpn_cls": 0.0365, "loss_rpn_bbox": 0.03641, "s0.loss_cls": 0.26032, "s0.acc": 92.18652, "s0.loss_bbox": 0.1298, "s1.loss_cls": 0.13086, "s1.acc": 92.1921, "s1.loss_bbox": 0.11654, "s2.loss_cls": 0.06491, "s2.acc": 92.07715, "s2.loss_bbox": 0.06344, "loss": 0.8388, "time": 1.1382}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 12558, "data_time": 0.01053, "loss_rpn_cls": 0.04209, "loss_rpn_bbox": 0.03453, "s0.loss_cls": 0.27508, "s0.acc": 91.56445, "s0.loss_bbox": 0.13415, "s1.loss_cls": 0.14025, "s1.acc": 91.29075, "s1.loss_bbox": 0.12043, "s2.loss_cls": 0.06772, "s2.acc": 91.63909, "s2.loss_bbox": 0.06363, "loss": 0.87789, "time": 1.13914}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.001, "memory": 12558, "data_time": 0.0112, "loss_rpn_cls": 0.0382, "loss_rpn_bbox": 0.02665, "s0.loss_cls": 0.24127, "s0.acc": 92.69336, "s0.loss_bbox": 0.11083, "s1.loss_cls": 0.12378, "s1.acc": 92.35286, "s1.loss_bbox": 0.10226, "s2.loss_cls": 0.06252, "s2.acc": 92.31342, "s2.loss_bbox": 0.05815, "loss": 0.76366, "time": 1.13738}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 12558, "data_time": 0.01068, "loss_rpn_cls": 0.04098, "loss_rpn_bbox": 0.03416, "s0.loss_cls": 0.26843, "s0.acc": 91.95703, "s0.loss_bbox": 0.12754, "s1.loss_cls": 0.13485, "s1.acc": 91.9378, "s1.loss_bbox": 0.11215, "s2.loss_cls": 0.06505, "s2.acc": 92.22255, "s2.loss_bbox": 0.06121, "loss": 0.84437, "time": 1.13569}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.001, "memory": 12558, "data_time": 0.01066, "loss_rpn_cls": 0.03157, "loss_rpn_bbox": 0.03058, "s0.loss_cls": 0.21962, "s0.acc": 93.31738, "s0.loss_bbox": 0.10792, "s1.loss_cls": 0.11118, "s1.acc": 93.04619, "s1.loss_bbox": 0.10241, "s2.loss_cls": 0.05465, "s2.acc": 93.18408, "s2.loss_bbox": 0.05733, "loss": 0.71526, "time": 1.13824}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.001, "memory": 12558, "data_time": 0.01041, "loss_rpn_cls": 0.03211, "loss_rpn_bbox": 0.02891, "s0.loss_cls": 0.21512, "s0.acc": 93.4082, "s0.loss_bbox": 0.10515, "s1.loss_cls": 0.11183, "s1.acc": 93.16888, "s1.loss_bbox": 0.1001, "s2.loss_cls": 0.05542, "s2.acc": 93.1043, "s2.loss_bbox": 0.05613, "loss": 0.70478, "time": 1.12837}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.001, "memory": 12558, "data_time": 0.01078, "loss_rpn_cls": 0.03526, "loss_rpn_bbox": 0.03094, "s0.loss_cls": 0.24977, "s0.acc": 92.53027, "s0.loss_bbox": 0.12004, "s1.loss_cls": 0.12725, "s1.acc": 92.35286, "s1.loss_bbox": 0.11301, "s2.loss_cls": 0.06187, "s2.acc": 92.54518, "s2.loss_bbox": 0.06117, "loss": 0.79931, "time": 1.13288}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.001, "memory": 12558, "data_time": 0.01061, "loss_rpn_cls": 0.03147, "loss_rpn_bbox": 0.02654, "s0.loss_cls": 0.22663, "s0.acc": 93.27832, "s0.loss_bbox": 0.10149, "s1.loss_cls": 0.1171, "s1.acc": 92.89885, "s1.loss_bbox": 0.09883, "s2.loss_cls": 0.0576, "s2.acc": 93.17525, "s2.loss_bbox": 0.05738, "loss": 0.71704, "time": 1.13337}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.001, "memory": 12558, "data_time": 0.01084, "loss_rpn_cls": 0.03871, "loss_rpn_bbox": 0.02837, "s0.loss_cls": 0.2355, "s0.acc": 92.85059, "s0.loss_bbox": 0.11204, "s1.loss_cls": 0.12357, "s1.acc": 92.53327, "s1.loss_bbox": 0.10725, "s2.loss_cls": 0.06179, "s2.acc": 92.31484, "s2.loss_bbox": 0.06333, "loss": 0.77055, "time": 1.13384}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.001, "memory": 12558, "data_time": 0.01094, "loss_rpn_cls": 0.03357, "loss_rpn_bbox": 0.02652, "s0.loss_cls": 0.24247, "s0.acc": 92.71094, "s0.loss_bbox": 0.11945, "s1.loss_cls": 0.12181, "s1.acc": 92.66186, "s1.loss_bbox": 0.10934, "s2.loss_cls": 0.05852, "s2.acc": 92.94316, "s2.loss_bbox": 0.05965, "loss": 0.77133, "time": 1.1381}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.001, "memory": 12558, "data_time": 0.01109, "loss_rpn_cls": 0.033, "loss_rpn_bbox": 0.02977, "s0.loss_cls": 0.22647, "s0.acc": 93.11914, "s0.loss_bbox": 0.11091, "s1.loss_cls": 0.11616, "s1.acc": 92.90863, "s1.loss_bbox": 0.10316, "s2.loss_cls": 0.05678, "s2.acc": 92.95426, "s2.loss_bbox": 0.06013, "loss": 0.73638, "time": 1.13849}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.001, "memory": 12558, "data_time": 0.01113, "loss_rpn_cls": 0.04921, "loss_rpn_bbox": 0.03268, "s0.loss_cls": 0.26418, "s0.acc": 92.10254, "s0.loss_bbox": 0.12757, "s1.loss_cls": 0.13061, "s1.acc": 92.07164, "s1.loss_bbox": 0.11389, "s2.loss_cls": 0.06424, "s2.acc": 92.23214, "s2.loss_bbox": 0.06167, "loss": 0.84405, "time": 1.13837}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.001, "memory": 12558, "data_time": 0.01075, "loss_rpn_cls": 0.03895, "loss_rpn_bbox": 0.03036, "s0.loss_cls": 0.25648, "s0.acc": 92.23438, "s0.loss_bbox": 0.12617, "s1.loss_cls": 0.12884, "s1.acc": 92.09049, "s1.loss_bbox": 0.11635, "s2.loss_cls": 0.06155, "s2.acc": 92.45976, "s2.loss_bbox": 0.06449, "loss": 0.82318, "time": 1.13856}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.001, "memory": 12558, "data_time": 0.01098, "loss_rpn_cls": 0.03525, "loss_rpn_bbox": 0.02998, "s0.loss_cls": 0.24193, "s0.acc": 92.56055, "s0.loss_bbox": 0.11531, "s1.loss_cls": 0.12178, "s1.acc": 92.5365, "s1.loss_bbox": 0.10666, "s2.loss_cls": 0.06025, "s2.acc": 92.57954, "s2.loss_bbox": 0.05999, "loss": 0.77117, "time": 1.13436}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.001, "memory": 12558, "data_time": 0.01111, "loss_rpn_cls": 0.03318, "loss_rpn_bbox": 0.02551, "s0.loss_cls": 0.25259, "s0.acc": 92.35742, "s0.loss_bbox": 0.11742, "s1.loss_cls": 0.13184, "s1.acc": 91.89887, "s1.loss_bbox": 0.10973, "s2.loss_cls": 0.06482, "s2.acc": 91.99303, "s2.loss_bbox": 0.0614, "loss": 0.7965, "time": 1.14301}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.001, "memory": 12558, "data_time": 0.01063, "loss_rpn_cls": 0.03073, "loss_rpn_bbox": 0.02335, "s0.loss_cls": 0.24237, "s0.acc": 92.64941, "s0.loss_bbox": 0.1121, "s1.loss_cls": 0.12121, "s1.acc": 92.6246, "s1.loss_bbox": 0.10041, "s2.loss_cls": 0.05876, "s2.acc": 92.81029, "s2.loss_bbox": 0.05825, "loss": 0.74718, "time": 1.13123}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.001, "memory": 12558, "data_time": 0.01086, "loss_rpn_cls": 0.03512, "loss_rpn_bbox": 0.02905, "s0.loss_cls": 0.22035, "s0.acc": 93.29004, "s0.loss_bbox": 0.10387, "s1.loss_cls": 0.1121, "s1.acc": 93.01037, "s1.loss_bbox": 0.09514, "s2.loss_cls": 0.05495, "s2.acc": 93.18563, "s2.loss_bbox": 0.05272, "loss": 0.70332, "time": 1.13858}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.001, "memory": 12558, "data_time": 0.01133, "loss_rpn_cls": 0.0319, "loss_rpn_bbox": 0.02636, "s0.loss_cls": 0.22121, "s0.acc": 93.36133, "s0.loss_bbox": 0.1006, "s1.loss_cls": 0.11354, "s1.acc": 93.17834, "s1.loss_bbox": 0.09431, "s2.loss_cls": 0.05662, "s2.acc": 93.15248, "s2.loss_bbox": 0.0548, "loss": 0.69934, "time": 1.13868}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.001, "memory": 12558, "data_time": 0.01111, "loss_rpn_cls": 0.0397, "loss_rpn_bbox": 0.03169, "s0.loss_cls": 0.25676, "s0.acc": 92.2373, "s0.loss_bbox": 0.12104, "s1.loss_cls": 0.13028, "s1.acc": 92.1918, "s1.loss_bbox": 0.11317, "s2.loss_cls": 0.06166, "s2.acc": 92.43842, "s2.loss_bbox": 0.0632, "loss": 0.8175, "time": 1.13942}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.001, "memory": 12558, "data_time": 0.0114, "loss_rpn_cls": 0.03843, "loss_rpn_bbox": 0.02513, "s0.loss_cls": 0.26174, "s0.acc": 92.18555, "s0.loss_bbox": 0.1166, "s1.loss_cls": 0.133, "s1.acc": 91.96381, "s1.loss_bbox": 0.10735, "s2.loss_cls": 0.06471, "s2.acc": 92.15738, "s2.loss_bbox": 0.06272, "loss": 0.80969, "time": 1.14234}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 0.001, "memory": 12558, "data_time": 0.01118, "loss_rpn_cls": 0.03461, "loss_rpn_bbox": 0.02926, "s0.loss_cls": 0.25331, "s0.acc": 92.01172, "s0.loss_bbox": 0.12085, "s1.loss_cls": 0.13422, "s1.acc": 91.30389, "s1.loss_bbox": 0.11584, "s2.loss_cls": 0.06607, "s2.acc": 91.56988, "s2.loss_bbox": 0.06813, "loss": 0.8223, "time": 1.13606}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.001, "memory": 12558, "data_time": 0.01131, "loss_rpn_cls": 0.03404, "loss_rpn_bbox": 0.02609, "s0.loss_cls": 0.23836, "s0.acc": 92.93652, "s0.loss_bbox": 0.11284, "s1.loss_cls": 0.11932, "s1.acc": 93.02744, "s1.loss_bbox": 0.1046, "s2.loss_cls": 0.05678, "s2.acc": 93.10619, "s2.loss_bbox": 0.05903, "loss": 0.75106, "time": 1.13421}
{"mode": "val", "epoch": 4, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.3, "bbox_mAP_50": 0.477, "bbox_mAP_75": 0.326, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.1, "bbox_mAP_l": 0.353, "bbox_mAP_copypaste": "0.300 0.477 0.326 0.005 0.100 0.353"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.001, "memory": 12558, "data_time": 0.05694, "loss_rpn_cls": 0.03145, "loss_rpn_bbox": 0.02675, "s0.loss_cls": 0.22393, "s0.acc": 93.27051, "s0.loss_bbox": 0.10836, "s1.loss_cls": 0.1132, "s1.acc": 92.96304, "s1.loss_bbox": 0.1017, "s2.loss_cls": 0.05689, "s2.acc": 92.87205, "s2.loss_bbox": 0.05759, "loss": 0.71987, "time": 1.18523}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 12558, "data_time": 0.01076, "loss_rpn_cls": 0.03219, "loss_rpn_bbox": 0.03158, "s0.loss_cls": 0.2515, "s0.acc": 92.09277, "s0.loss_bbox": 0.12321, "s1.loss_cls": 0.12751, "s1.acc": 91.86137, "s1.loss_bbox": 0.11546, "s2.loss_cls": 0.06286, "s2.acc": 92.08032, "s2.loss_bbox": 0.06621, "loss": 0.81052, "time": 1.13721}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.001, "memory": 12558, "data_time": 0.01053, "loss_rpn_cls": 0.02806, "loss_rpn_bbox": 0.02557, "s0.loss_cls": 0.22345, "s0.acc": 93.13477, "s0.loss_bbox": 0.10389, "s1.loss_cls": 0.11403, "s1.acc": 92.80475, "s1.loss_bbox": 0.09403, "s2.loss_cls": 0.05646, "s2.acc": 93.08632, "s2.loss_bbox": 0.05655, "loss": 0.70204, "time": 1.13533}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 12558, "data_time": 0.01067, "loss_rpn_cls": 0.03129, "loss_rpn_bbox": 0.02654, "s0.loss_cls": 0.22811, "s0.acc": 93.0, "s0.loss_bbox": 0.10748, "s1.loss_cls": 0.11598, "s1.acc": 92.6507, "s1.loss_bbox": 0.10152, "s2.loss_cls": 0.05834, "s2.acc": 92.70689, "s2.loss_bbox": 0.05748, "loss": 0.72674, "time": 1.13774}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.001, "memory": 12558, "data_time": 0.01097, "loss_rpn_cls": 0.02966, "loss_rpn_bbox": 0.02686, "s0.loss_cls": 0.22988, "s0.acc": 92.74512, "s0.loss_bbox": 0.11249, "s1.loss_cls": 0.11731, "s1.acc": 92.60377, "s1.loss_bbox": 0.10763, "s2.loss_cls": 0.0588, "s2.acc": 92.66866, "s2.loss_bbox": 0.06039, "loss": 0.74302, "time": 1.1368}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 12558, "data_time": 0.01097, "loss_rpn_cls": 0.02567, "loss_rpn_bbox": 0.02294, "s0.loss_cls": 0.21366, "s0.acc": 93.28223, "s0.loss_bbox": 0.09681, "s1.loss_cls": 0.11059, "s1.acc": 93.07145, "s1.loss_bbox": 0.09656, "s2.loss_cls": 0.05785, "s2.acc": 92.82372, "s2.loss_bbox": 0.05804, "loss": 0.68212, "time": 1.13488}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.001, "memory": 12558, "data_time": 0.01084, "loss_rpn_cls": 0.03121, "loss_rpn_bbox": 0.02354, "s0.loss_cls": 0.21126, "s0.acc": 93.37012, "s0.loss_bbox": 0.10671, "s1.loss_cls": 0.10958, "s1.acc": 93.04328, "s1.loss_bbox": 0.09574, "s2.loss_cls": 0.0536, "s2.acc": 93.20879, "s2.loss_bbox": 0.05266, "loss": 0.6843, "time": 1.13486}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.001, "memory": 12558, "data_time": 0.01077, "loss_rpn_cls": 0.0308, "loss_rpn_bbox": 0.02513, "s0.loss_cls": 0.24133, "s0.acc": 92.71289, "s0.loss_bbox": 0.11361, "s1.loss_cls": 0.12188, "s1.acc": 92.61722, "s1.loss_bbox": 0.10425, "s2.loss_cls": 0.05922, "s2.acc": 92.75229, "s2.loss_bbox": 0.05995, "loss": 0.75617, "time": 1.13908}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.001, "memory": 12558, "data_time": 0.01116, "loss_rpn_cls": 0.02744, "loss_rpn_bbox": 0.02625, "s0.loss_cls": 0.22643, "s0.acc": 93.0957, "s0.loss_bbox": 0.10223, "s1.loss_cls": 0.11322, "s1.acc": 93.09106, "s1.loss_bbox": 0.09326, "s2.loss_cls": 0.05624, "s2.acc": 92.9172, "s2.loss_bbox": 0.05769, "loss": 0.70275, "time": 1.13987}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.001, "memory": 12558, "data_time": 0.01098, "loss_rpn_cls": 0.02708, "loss_rpn_bbox": 0.02637, "s0.loss_cls": 0.2115, "s0.acc": 93.28418, "s0.loss_bbox": 0.1047, "s1.loss_cls": 0.1071, "s1.acc": 93.09421, "s1.loss_bbox": 0.10011, "s2.loss_cls": 0.05411, "s2.acc": 93.12598, "s2.loss_bbox": 0.05914, "loss": 0.69011, "time": 1.13387}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.001, "memory": 12558, "data_time": 0.01074, "loss_rpn_cls": 0.03201, "loss_rpn_bbox": 0.02558, "s0.loss_cls": 0.22807, "s0.acc": 92.7998, "s0.loss_bbox": 0.11698, "s1.loss_cls": 0.11512, "s1.acc": 92.57366, "s1.loss_bbox": 0.10446, "s2.loss_cls": 0.05753, "s2.acc": 92.53143, "s2.loss_bbox": 0.05944, "loss": 0.73919, "time": 1.13396}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.001, "memory": 12558, "data_time": 0.01049, "loss_rpn_cls": 0.03961, "loss_rpn_bbox": 0.02728, "s0.loss_cls": 0.23522, "s0.acc": 92.81445, "s0.loss_bbox": 0.11214, "s1.loss_cls": 0.11881, "s1.acc": 92.51516, "s1.loss_bbox": 0.10235, "s2.loss_cls": 0.05775, "s2.acc": 92.94832, "s2.loss_bbox": 0.05784, "loss": 0.75101, "time": 1.1234}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.001, "memory": 12558, "data_time": 0.01097, "loss_rpn_cls": 0.03333, "loss_rpn_bbox": 0.02986, "s0.loss_cls": 0.25005, "s0.acc": 92.41699, "s0.loss_bbox": 0.12154, "s1.loss_cls": 0.12327, "s1.acc": 92.45714, "s1.loss_bbox": 0.11321, "s2.loss_cls": 0.06026, "s2.acc": 92.369, "s2.loss_bbox": 0.06208, "loss": 0.79361, "time": 1.13167}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.001, "memory": 12558, "data_time": 0.01129, "loss_rpn_cls": 0.03004, "loss_rpn_bbox": 0.02542, "s0.loss_cls": 0.22227, "s0.acc": 93.34277, "s0.loss_bbox": 0.10459, "s1.loss_cls": 0.11131, "s1.acc": 93.15869, "s1.loss_bbox": 0.09923, "s2.loss_cls": 0.05372, "s2.acc": 93.22618, "s2.loss_bbox": 0.05605, "loss": 0.70261, "time": 1.13859}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.001, "memory": 12558, "data_time": 0.01106, "loss_rpn_cls": 0.03294, "loss_rpn_bbox": 0.03027, "s0.loss_cls": 0.22761, "s0.acc": 93.16797, "s0.loss_bbox": 0.11033, "s1.loss_cls": 0.1146, "s1.acc": 93.1589, "s1.loss_bbox": 0.10212, "s2.loss_cls": 0.05526, "s2.acc": 93.39578, "s2.loss_bbox": 0.05902, "loss": 0.73216, "time": 1.13388}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.001, "memory": 12558, "data_time": 0.01126, "loss_rpn_cls": 0.03277, "loss_rpn_bbox": 0.02979, "s0.loss_cls": 0.23317, "s0.acc": 92.84473, "s0.loss_bbox": 0.11169, "s1.loss_cls": 0.1172, "s1.acc": 92.76752, "s1.loss_bbox": 0.10398, "s2.loss_cls": 0.05782, "s2.acc": 92.81053, "s2.loss_bbox": 0.05977, "loss": 0.74619, "time": 1.13337}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.001, "memory": 12558, "data_time": 0.01117, "loss_rpn_cls": 0.0299, "loss_rpn_bbox": 0.029, "s0.loss_cls": 0.23274, "s0.acc": 92.98242, "s0.loss_bbox": 0.10393, "s1.loss_cls": 0.11883, "s1.acc": 92.70544, "s1.loss_bbox": 0.09588, "s2.loss_cls": 0.05874, "s2.acc": 92.96769, "s2.loss_bbox": 0.05556, "loss": 0.72457, "time": 1.13545}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.001, "memory": 12558, "data_time": 0.01098, "loss_rpn_cls": 0.02712, "loss_rpn_bbox": 0.02319, "s0.loss_cls": 0.2142, "s0.acc": 93.3584, "s0.loss_bbox": 0.1081, "s1.loss_cls": 0.10725, "s1.acc": 93.30009, "s1.loss_bbox": 0.09756, "s2.loss_cls": 0.05132, "s2.acc": 93.63289, "s2.loss_bbox": 0.05783, "loss": 0.68657, "time": 1.13775}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.001, "memory": 12558, "data_time": 0.01133, "loss_rpn_cls": 0.04051, "loss_rpn_bbox": 0.03285, "s0.loss_cls": 0.27733, "s0.acc": 91.34961, "s0.loss_bbox": 0.13238, "s1.loss_cls": 0.13792, "s1.acc": 91.39465, "s1.loss_bbox": 0.1203, "s2.loss_cls": 0.06457, "s2.acc": 92.01138, "s2.loss_bbox": 0.06656, "loss": 0.87242, "time": 1.13563}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.001, "memory": 12558, "data_time": 0.01127, "loss_rpn_cls": 0.0303, "loss_rpn_bbox": 0.03347, "s0.loss_cls": 0.23214, "s0.acc": 92.91113, "s0.loss_bbox": 0.11383, "s1.loss_cls": 0.11573, "s1.acc": 92.74847, "s1.loss_bbox": 0.10077, "s2.loss_cls": 0.05704, "s2.acc": 93.09679, "s2.loss_bbox": 0.05779, "loss": 0.74106, "time": 1.13732}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.001, "memory": 12558, "data_time": 0.01094, "loss_rpn_cls": 0.03611, "loss_rpn_bbox": 0.02586, "s0.loss_cls": 0.25317, "s0.acc": 92.34961, "s0.loss_bbox": 0.11875, "s1.loss_cls": 0.12707, "s1.acc": 92.19341, "s1.loss_bbox": 0.11049, "s2.loss_cls": 0.0608, "s2.acc": 92.53291, "s2.loss_bbox": 0.06312, "loss": 0.79537, "time": 1.13274}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.001, "memory": 12558, "data_time": 0.0115, "loss_rpn_cls": 0.03076, "loss_rpn_bbox": 0.02991, "s0.loss_cls": 0.24547, "s0.acc": 92.41406, "s0.loss_bbox": 0.12256, "s1.loss_cls": 0.11999, "s1.acc": 92.50594, "s1.loss_bbox": 0.11149, "s2.loss_cls": 0.05678, "s2.acc": 93.02456, "s2.loss_bbox": 0.06134, "loss": 0.77831, "time": 1.13873}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 0.001, "memory": 12558, "data_time": 0.01127, "loss_rpn_cls": 0.0338, "loss_rpn_bbox": 0.02597, "s0.loss_cls": 0.23021, "s0.acc": 92.90039, "s0.loss_bbox": 0.10956, "s1.loss_cls": 0.1158, "s1.acc": 92.76185, "s1.loss_bbox": 0.10041, "s2.loss_cls": 0.0554, "s2.acc": 93.07868, "s2.loss_bbox": 0.05701, "loss": 0.72816, "time": 1.13338}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.001, "memory": 12558, "data_time": 0.0119, "loss_rpn_cls": 0.03465, "loss_rpn_bbox": 0.02803, "s0.loss_cls": 0.23209, "s0.acc": 92.72852, "s0.loss_bbox": 0.11816, "s1.loss_cls": 0.1169, "s1.acc": 92.62916, "s1.loss_bbox": 0.10687, "s2.loss_cls": 0.05608, "s2.acc": 92.95944, "s2.loss_bbox": 0.05969, "loss": 0.75247, "time": 1.13886}
{"mode": "val", "epoch": 5, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.353, "bbox_mAP_50": 0.533, "bbox_mAP_75": 0.394, "bbox_mAP_s": 0.013, "bbox_mAP_m": 0.131, "bbox_mAP_l": 0.411, "bbox_mAP_copypaste": "0.353 0.533 0.394 0.013 0.131 0.411"}
