{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.15.1+2577e37", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNeXt',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(\n            type='Pretrained', checkpoint='open-mmlab://resnext101_32x4d'),\n        groups=32,\n        base_width=4),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 0.7, 1.0, 1.5, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../dataset/test.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/final4'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "final4.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 12629, "data_time": 0.05603, "loss_rpn_cls": 0.69063, "loss_rpn_bbox": 0.05301, "s0.loss_cls": 1.17638, "s0.acc": 71.5625, "s0.loss_bbox": 0.05014, "s1.loss_cls": 0.56924, "s1.acc": 69.29785, "s1.loss_bbox": 0.01634, "s2.loss_cls": 0.45217, "s2.acc": 46.35742, "s2.loss_bbox": 0.00264, "loss": 3.01054, "time": 1.19251}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 12629, "data_time": 0.01088, "loss_rpn_cls": 0.59334, "loss_rpn_bbox": 0.04727, "s0.loss_cls": 0.25118, "s0.acc": 96.03027, "s0.loss_bbox": 0.09198, "s1.loss_cls": 0.07642, "s1.acc": 98.08594, "s1.loss_bbox": 0.02906, "s2.loss_cls": 0.03381, "s2.acc": 98.22363, "s2.loss_bbox": 0.00538, "loss": 1.12845, "time": 1.15851}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0003, "memory": 12629, "data_time": 0.01041, "loss_rpn_cls": 0.22614, "loss_rpn_bbox": 0.03875, "s0.loss_cls": 0.33031, "s0.acc": 93.67188, "s0.loss_bbox": 0.15171, "s1.loss_cls": 0.10789, "s1.acc": 96.75586, "s1.loss_bbox": 0.05895, "s2.loss_cls": 0.0308, "s2.acc": 98.47363, "s2.loss_bbox": 0.01118, "loss": 0.95572, "time": 1.15668}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0004, "memory": 12629, "data_time": 0.01064, "loss_rpn_cls": 0.1532, "loss_rpn_bbox": 0.04805, "s0.loss_cls": 0.33659, "s0.acc": 92.82129, "s0.loss_bbox": 0.16122, "s1.loss_cls": 0.11681, "s1.acc": 95.70215, "s1.loss_bbox": 0.07468, "s2.loss_cls": 0.03731, "s2.acc": 97.77637, "s2.loss_bbox": 0.01653, "loss": 0.9444, "time": 1.15435}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0005, "memory": 12629, "data_time": 0.01064, "loss_rpn_cls": 0.1353, "loss_rpn_bbox": 0.04444, "s0.loss_cls": 0.28679, "s0.acc": 93.87305, "s0.loss_bbox": 0.13466, "s1.loss_cls": 0.09589, "s1.acc": 96.40625, "s1.loss_bbox": 0.05774, "s2.loss_cls": 0.03103, "s2.acc": 98.08203, "s2.loss_bbox": 0.01211, "loss": 0.79796, "time": 1.15223}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0006, "memory": 12629, "data_time": 0.01081, "loss_rpn_cls": 0.12566, "loss_rpn_bbox": 0.03853, "s0.loss_cls": 0.2621, "s0.acc": 94.36621, "s0.loss_bbox": 0.12266, "s1.loss_cls": 0.09246, "s1.acc": 96.4834, "s1.loss_bbox": 0.05644, "s2.loss_cls": 0.03039, "s2.acc": 98.02441, "s2.loss_bbox": 0.01343, "loss": 0.74167, "time": 1.14994}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0007, "memory": 12629, "data_time": 0.01052, "loss_rpn_cls": 0.14077, "loss_rpn_bbox": 0.04477, "s0.loss_cls": 0.29266, "s0.acc": 93.47363, "s0.loss_bbox": 0.14134, "s1.loss_cls": 0.10199, "s1.acc": 95.85254, "s1.loss_bbox": 0.06546, "s2.loss_cls": 0.03436, "s2.acc": 97.65625, "s2.loss_bbox": 0.01559, "loss": 0.83693, "time": 1.15218}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0008, "memory": 12629, "data_time": 0.01073, "loss_rpn_cls": 0.12035, "loss_rpn_bbox": 0.04355, "s0.loss_cls": 0.28344, "s0.acc": 93.33105, "s0.loss_bbox": 0.13657, "s1.loss_cls": 0.11275, "s1.acc": 94.96289, "s1.loss_bbox": 0.08229, "s2.loss_cls": 0.04068, "s2.acc": 96.96094, "s2.loss_bbox": 0.024, "loss": 0.84363, "time": 1.14924}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0009, "memory": 12629, "data_time": 0.01147, "loss_rpn_cls": 0.11037, "loss_rpn_bbox": 0.04, "s0.loss_cls": 0.3111, "s0.acc": 93.10352, "s0.loss_bbox": 0.14507, "s1.loss_cls": 0.11868, "s1.acc": 94.90137, "s1.loss_bbox": 0.08298, "s2.loss_cls": 0.04361, "s2.acc": 96.79883, "s2.loss_bbox": 0.02625, "loss": 0.87805, "time": 1.15091}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.001, "memory": 12629, "data_time": 0.01082, "loss_rpn_cls": 0.10008, "loss_rpn_bbox": 0.03842, "s0.loss_cls": 0.29161, "s0.acc": 92.84277, "s0.loss_bbox": 0.14246, "s1.loss_cls": 0.12331, "s1.acc": 94.16211, "s1.loss_bbox": 0.09078, "s2.loss_cls": 0.04788, "s2.acc": 95.94043, "s2.loss_bbox": 0.03365, "loss": 0.8682, "time": 1.1542}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.001, "memory": 12629, "data_time": 0.0107, "loss_rpn_cls": 0.11615, "loss_rpn_bbox": 0.05187, "s0.loss_cls": 0.36893, "s0.acc": 90.80957, "s0.loss_bbox": 0.18701, "s1.loss_cls": 0.15258, "s1.acc": 92.51855, "s1.loss_bbox": 0.11483, "s2.loss_cls": 0.0613, "s2.acc": 94.57812, "s2.loss_bbox": 0.04501, "loss": 1.09768, "time": 1.15064}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.001, "memory": 12629, "data_time": 0.0108, "loss_rpn_cls": 0.11033, "loss_rpn_bbox": 0.04228, "s0.loss_cls": 0.3412, "s0.acc": 91.41895, "s0.loss_bbox": 0.17703, "s1.loss_cls": 0.14604, "s1.acc": 92.62012, "s1.loss_bbox": 0.11653, "s2.loss_cls": 0.06209, "s2.acc": 93.83301, "s2.loss_bbox": 0.04963, "loss": 1.04513, "time": 1.15005}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.001, "memory": 12629, "data_time": 0.01069, "loss_rpn_cls": 0.08747, "loss_rpn_bbox": 0.0354, "s0.loss_cls": 0.34155, "s0.acc": 91.29688, "s0.loss_bbox": 0.17093, "s1.loss_cls": 0.15164, "s1.acc": 92.21431, "s1.loss_bbox": 0.12222, "s2.loss_cls": 0.06412, "s2.acc": 93.7949, "s2.loss_bbox": 0.05106, "loss": 1.02438, "time": 1.15111}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.001, "memory": 12629, "data_time": 0.01105, "loss_rpn_cls": 0.07507, "loss_rpn_bbox": 0.03744, "s0.loss_cls": 0.32404, "s0.acc": 91.58008, "s0.loss_bbox": 0.15298, "s1.loss_cls": 0.1468, "s1.acc": 92.31152, "s1.loss_bbox": 0.11412, "s2.loss_cls": 0.06288, "s2.acc": 93.63672, "s2.loss_bbox": 0.05165, "loss": 0.96499, "time": 1.15302}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.001, "memory": 12629, "data_time": 0.01098, "loss_rpn_cls": 0.08898, "loss_rpn_bbox": 0.05059, "s0.loss_cls": 0.37327, "s0.acc": 90.32617, "s0.loss_bbox": 0.1884, "s1.loss_cls": 0.16349, "s1.acc": 91.41181, "s1.loss_bbox": 0.13381, "s2.loss_cls": 0.06854, "s2.acc": 92.94016, "s2.loss_bbox": 0.05764, "loss": 1.12474, "time": 1.15107}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.001, "memory": 12629, "data_time": 0.01093, "loss_rpn_cls": 0.08342, "loss_rpn_bbox": 0.04844, "s0.loss_cls": 0.34123, "s0.acc": 91.02832, "s0.loss_bbox": 0.16602, "s1.loss_cls": 0.1535, "s1.acc": 91.93848, "s1.loss_bbox": 0.12147, "s2.loss_cls": 0.06547, "s2.acc": 93.2373, "s2.loss_bbox": 0.05358, "loss": 1.03313, "time": 1.15393}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.001, "memory": 12629, "data_time": 0.01096, "loss_rpn_cls": 0.09328, "loss_rpn_bbox": 0.0487, "s0.loss_cls": 0.35263, "s0.acc": 90.8877, "s0.loss_bbox": 0.16862, "s1.loss_cls": 0.16036, "s1.acc": 91.62305, "s1.loss_bbox": 0.1266, "s2.loss_cls": 0.06844, "s2.acc": 92.92773, "s2.loss_bbox": 0.0545, "loss": 1.07312, "time": 1.15462}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.001, "memory": 12629, "data_time": 0.01128, "loss_rpn_cls": 0.07348, "loss_rpn_bbox": 0.04156, "s0.loss_cls": 0.31277, "s0.acc": 91.72754, "s0.loss_bbox": 0.14685, "s1.loss_cls": 0.14722, "s1.acc": 92.32617, "s1.loss_bbox": 0.1109, "s2.loss_cls": 0.06332, "s2.acc": 93.60357, "s2.loss_bbox": 0.05163, "loss": 0.94774, "time": 1.15451}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.001, "memory": 12629, "data_time": 0.01099, "loss_rpn_cls": 0.06994, "loss_rpn_bbox": 0.04548, "s0.loss_cls": 0.33693, "s0.acc": 91.4248, "s0.loss_bbox": 0.16053, "s1.loss_cls": 0.14787, "s1.acc": 92.40297, "s1.loss_bbox": 0.11486, "s2.loss_cls": 0.06248, "s2.acc": 93.41574, "s2.loss_bbox": 0.05077, "loss": 0.98885, "time": 1.14804}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.001, "memory": 12629, "data_time": 0.01131, "loss_rpn_cls": 0.07099, "loss_rpn_bbox": 0.04327, "s0.loss_cls": 0.3391, "s0.acc": 91.16211, "s0.loss_bbox": 0.1611, "s1.loss_cls": 0.15636, "s1.acc": 91.62402, "s1.loss_bbox": 0.12539, "s2.loss_cls": 0.06935, "s2.acc": 92.81641, "s2.loss_bbox": 0.05863, "loss": 1.02419, "time": 1.15321}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.001, "memory": 12629, "data_time": 0.01165, "loss_rpn_cls": 0.06764, "loss_rpn_bbox": 0.04627, "s0.loss_cls": 0.31733, "s0.acc": 91.45996, "s0.loss_bbox": 0.15811, "s1.loss_cls": 0.14772, "s1.acc": 91.92955, "s1.loss_bbox": 0.11855, "s2.loss_cls": 0.06449, "s2.acc": 92.95802, "s2.loss_bbox": 0.05295, "loss": 0.97305, "time": 1.15811}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.001, "memory": 12629, "data_time": 0.01115, "loss_rpn_cls": 0.06624, "loss_rpn_bbox": 0.04491, "s0.loss_cls": 0.33117, "s0.acc": 91.17969, "s0.loss_bbox": 0.15281, "s1.loss_cls": 0.1559, "s1.acc": 91.69767, "s1.loss_bbox": 0.11907, "s2.loss_cls": 0.06744, "s2.acc": 92.87963, "s2.loss_bbox": 0.05468, "loss": 0.99222, "time": 1.15524}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.001, "memory": 12629, "data_time": 0.01148, "loss_rpn_cls": 0.06495, "loss_rpn_bbox": 0.0391, "s0.loss_cls": 0.29177, "s0.acc": 92.28906, "s0.loss_bbox": 0.13923, "s1.loss_cls": 0.13962, "s1.acc": 92.52233, "s1.loss_bbox": 0.11739, "s2.loss_cls": 0.06286, "s2.acc": 93.24805, "s2.loss_bbox": 0.05722, "loss": 0.91212, "time": 1.15478}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.001, "memory": 12629, "data_time": 0.01143, "loss_rpn_cls": 0.06295, "loss_rpn_bbox": 0.03716, "s0.loss_cls": 0.29802, "s0.acc": 91.94531, "s0.loss_bbox": 0.14195, "s1.loss_cls": 0.14241, "s1.acc": 92.29864, "s1.loss_bbox": 0.10991, "s2.loss_cls": 0.06339, "s2.acc": 93.17478, "s2.loss_bbox": 0.05043, "loss": 0.90623, "time": 1.15332}
{"mode": "val", "epoch": 1, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.09, "bbox_mAP_50": 0.156, "bbox_mAP_75": 0.092, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.114, "bbox_mAP_copypaste": "0.090 0.156 0.092 0.000 0.005 0.114"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.001, "memory": 12629, "data_time": 0.05629, "loss_rpn_cls": 0.05949, "loss_rpn_bbox": 0.04366, "s0.loss_cls": 0.31881, "s0.acc": 91.22168, "s0.loss_bbox": 0.15391, "s1.loss_cls": 0.15187, "s1.acc": 91.74849, "s1.loss_bbox": 0.12544, "s2.loss_cls": 0.06952, "s2.acc": 92.39713, "s2.loss_bbox": 0.06022, "loss": 0.98291, "time": 1.19869}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 12629, "data_time": 0.01042, "loss_rpn_cls": 0.04945, "loss_rpn_bbox": 0.03227, "s0.loss_cls": 0.2829, "s0.acc": 91.83984, "s0.loss_bbox": 0.13482, "s1.loss_cls": 0.14379, "s1.acc": 91.73207, "s1.loss_bbox": 0.12081, "s2.loss_cls": 0.06496, "s2.acc": 92.6345, "s2.loss_bbox": 0.0589, "loss": 0.8879, "time": 1.15389}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.001, "memory": 12629, "data_time": 0.01031, "loss_rpn_cls": 0.06446, "loss_rpn_bbox": 0.04607, "s0.loss_cls": 0.34978, "s0.acc": 90.82324, "s0.loss_bbox": 0.16022, "s1.loss_cls": 0.1669, "s1.acc": 91.18992, "s1.loss_bbox": 0.13054, "s2.loss_cls": 0.07539, "s2.acc": 91.55761, "s2.loss_bbox": 0.0649, "loss": 1.05826, "time": 1.15478}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 12629, "data_time": 0.01031, "loss_rpn_cls": 0.06887, "loss_rpn_bbox": 0.03785, "s0.loss_cls": 0.33766, "s0.acc": 90.56836, "s0.loss_bbox": 0.15944, "s1.loss_cls": 0.15781, "s1.acc": 90.90963, "s1.loss_bbox": 0.1351, "s2.loss_cls": 0.07229, "s2.acc": 91.69424, "s2.loss_bbox": 0.06788, "loss": 1.0369, "time": 1.14918}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.001, "memory": 12629, "data_time": 0.01032, "loss_rpn_cls": 0.05525, "loss_rpn_bbox": 0.04106, "s0.loss_cls": 0.31059, "s0.acc": 91.83594, "s0.loss_bbox": 0.13891, "s1.loss_cls": 0.14803, "s1.acc": 92.01002, "s1.loss_bbox": 0.11533, "s2.loss_cls": 0.06765, "s2.acc": 92.67929, "s2.loss_bbox": 0.05865, "loss": 0.93547, "time": 1.15552}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 12629, "data_time": 0.01032, "loss_rpn_cls": 0.05096, "loss_rpn_bbox": 0.03673, "s0.loss_cls": 0.31129, "s0.acc": 91.39355, "s0.loss_bbox": 0.14592, "s1.loss_cls": 0.15338, "s1.acc": 91.39728, "s1.loss_bbox": 0.11861, "s2.loss_cls": 0.06948, "s2.acc": 92.2889, "s2.loss_bbox": 0.05896, "loss": 0.94534, "time": 1.14844}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.001, "memory": 12629, "data_time": 0.01054, "loss_rpn_cls": 0.05983, "loss_rpn_bbox": 0.04761, "s0.loss_cls": 0.32915, "s0.acc": 91.01758, "s0.loss_bbox": 0.15599, "s1.loss_cls": 0.16382, "s1.acc": 90.77575, "s1.loss_bbox": 0.12944, "s2.loss_cls": 0.07258, "s2.acc": 91.90847, "s2.loss_bbox": 0.06125, "loss": 1.01968, "time": 1.1587}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.001, "memory": 12629, "data_time": 0.01043, "loss_rpn_cls": 0.0601, "loss_rpn_bbox": 0.04255, "s0.loss_cls": 0.32616, "s0.acc": 90.86719, "s0.loss_bbox": 0.14771, "s1.loss_cls": 0.15734, "s1.acc": 90.96461, "s1.loss_bbox": 0.12201, "s2.loss_cls": 0.07317, "s2.acc": 91.58796, "s2.loss_bbox": 0.06195, "loss": 0.99101, "time": 1.15468}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.001, "memory": 12629, "data_time": 0.01026, "loss_rpn_cls": 0.04955, "loss_rpn_bbox": 0.03323, "s0.loss_cls": 0.30081, "s0.acc": 91.4707, "s0.loss_bbox": 0.1407, "s1.loss_cls": 0.15185, "s1.acc": 91.33563, "s1.loss_bbox": 0.12563, "s2.loss_cls": 0.07131, "s2.acc": 91.82055, "s2.loss_bbox": 0.06526, "loss": 0.93834, "time": 1.15396}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.001, "memory": 12629, "data_time": 0.01075, "loss_rpn_cls": 0.05594, "loss_rpn_bbox": 0.04305, "s0.loss_cls": 0.30471, "s0.acc": 91.44922, "s0.loss_bbox": 0.14617, "s1.loss_cls": 0.15031, "s1.acc": 91.35946, "s1.loss_bbox": 0.12454, "s2.loss_cls": 0.06923, "s2.acc": 92.19595, "s2.loss_bbox": 0.0603, "loss": 0.95425, "time": 1.15712}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.001, "memory": 12629, "data_time": 0.01079, "loss_rpn_cls": 0.05393, "loss_rpn_bbox": 0.04213, "s0.loss_cls": 0.27696, "s0.acc": 92.27051, "s0.loss_bbox": 0.12982, "s1.loss_cls": 0.13969, "s1.acc": 92.12825, "s1.loss_bbox": 0.11413, "s2.loss_cls": 0.06595, "s2.acc": 92.50175, "s2.loss_bbox": 0.05639, "loss": 0.879, "time": 1.15787}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.001, "memory": 12629, "data_time": 0.01024, "loss_rpn_cls": 0.04573, "loss_rpn_bbox": 0.03439, "s0.loss_cls": 0.31409, "s0.acc": 91.25586, "s0.loss_bbox": 0.14601, "s1.loss_cls": 0.15764, "s1.acc": 90.93212, "s1.loss_bbox": 0.12307, "s2.loss_cls": 0.0722, "s2.acc": 91.8221, "s2.loss_bbox": 0.06151, "loss": 0.95464, "time": 1.15264}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.001, "memory": 12629, "data_time": 0.01045, "loss_rpn_cls": 0.04529, "loss_rpn_bbox": 0.0402, "s0.loss_cls": 0.28624, "s0.acc": 91.84766, "s0.loss_bbox": 0.1336, "s1.loss_cls": 0.14748, "s1.acc": 91.50948, "s1.loss_bbox": 0.11888, "s2.loss_cls": 0.07004, "s2.acc": 92.02227, "s2.loss_bbox": 0.06208, "loss": 0.90381, "time": 1.15135}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.001, "memory": 12647, "data_time": 0.01041, "loss_rpn_cls": 0.06104, "loss_rpn_bbox": 0.04646, "s0.loss_cls": 0.29798, "s0.acc": 91.55762, "s0.loss_bbox": 0.14482, "s1.loss_cls": 0.14744, "s1.acc": 91.49001, "s1.loss_bbox": 0.12377, "s2.loss_cls": 0.06749, "s2.acc": 92.15952, "s2.loss_bbox": 0.06189, "loss": 0.95088, "time": 1.14951}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.001, "memory": 12647, "data_time": 0.0107, "loss_rpn_cls": 0.04843, "loss_rpn_bbox": 0.03295, "s0.loss_cls": 0.29693, "s0.acc": 91.66406, "s0.loss_bbox": 0.13537, "s1.loss_cls": 0.15133, "s1.acc": 91.34679, "s1.loss_bbox": 0.11772, "s2.loss_cls": 0.06982, "s2.acc": 91.99704, "s2.loss_bbox": 0.06018, "loss": 0.91272, "time": 1.15518}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.001, "memory": 12647, "data_time": 0.01047, "loss_rpn_cls": 0.06335, "loss_rpn_bbox": 0.04042, "s0.loss_cls": 0.32712, "s0.acc": 90.92578, "s0.loss_bbox": 0.15498, "s1.loss_cls": 0.16267, "s1.acc": 90.77837, "s1.loss_bbox": 0.13252, "s2.loss_cls": 0.07313, "s2.acc": 91.76753, "s2.loss_bbox": 0.06383, "loss": 1.01802, "time": 1.15161}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.001, "memory": 12647, "data_time": 0.0103, "loss_rpn_cls": 0.04121, "loss_rpn_bbox": 0.02975, "s0.loss_cls": 0.2984, "s0.acc": 91.48145, "s0.loss_bbox": 0.13295, "s1.loss_cls": 0.15197, "s1.acc": 91.20654, "s1.loss_bbox": 0.11726, "s2.loss_cls": 0.07212, "s2.acc": 91.79667, "s2.loss_bbox": 0.0601, "loss": 0.90376, "time": 1.15585}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.001, "memory": 12647, "data_time": 0.01033, "loss_rpn_cls": 0.0692, "loss_rpn_bbox": 0.04194, "s0.loss_cls": 0.30426, "s0.acc": 91.39453, "s0.loss_bbox": 0.14619, "s1.loss_cls": 0.14882, "s1.acc": 91.6668, "s1.loss_bbox": 0.12767, "s2.loss_cls": 0.06732, "s2.acc": 92.35268, "s2.loss_bbox": 0.06125, "loss": 0.96666, "time": 1.15482}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.001, "memory": 12647, "data_time": 0.01046, "loss_rpn_cls": 0.05276, "loss_rpn_bbox": 0.05018, "s0.loss_cls": 0.31261, "s0.acc": 91.0625, "s0.loss_bbox": 0.15514, "s1.loss_cls": 0.15577, "s1.acc": 90.83053, "s1.loss_bbox": 0.1331, "s2.loss_cls": 0.07274, "s2.acc": 91.45727, "s2.loss_bbox": 0.06818, "loss": 1.00049, "time": 1.15591}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.001, "memory": 12647, "data_time": 0.01017, "loss_rpn_cls": 0.05411, "loss_rpn_bbox": 0.03678, "s0.loss_cls": 0.33676, "s0.acc": 90.57617, "s0.loss_bbox": 0.1504, "s1.loss_cls": 0.16557, "s1.acc": 90.54343, "s1.loss_bbox": 0.12893, "s2.loss_cls": 0.07617, "s2.acc": 91.28425, "s2.loss_bbox": 0.06645, "loss": 1.01517, "time": 1.14563}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.001, "memory": 12647, "data_time": 0.01018, "loss_rpn_cls": 0.04581, "loss_rpn_bbox": 0.03658, "s0.loss_cls": 0.27202, "s0.acc": 92.04688, "s0.loss_bbox": 0.12895, "s1.loss_cls": 0.13697, "s1.acc": 91.77759, "s1.loss_bbox": 0.11457, "s2.loss_cls": 0.06617, "s2.acc": 92.0881, "s2.loss_bbox": 0.06158, "loss": 0.86265, "time": 1.14989}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.001, "memory": 12647, "data_time": 0.01001, "loss_rpn_cls": 0.05275, "loss_rpn_bbox": 0.03991, "s0.loss_cls": 0.31195, "s0.acc": 91.47754, "s0.loss_bbox": 0.13215, "s1.loss_cls": 0.15956, "s1.acc": 90.93382, "s1.loss_bbox": 0.12002, "s2.loss_cls": 0.07657, "s2.acc": 91.24534, "s2.loss_bbox": 0.06555, "loss": 0.95846, "time": 1.15055}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.001, "memory": 12647, "data_time": 0.01095, "loss_rpn_cls": 0.0483, "loss_rpn_bbox": 0.03451, "s0.loss_cls": 0.27609, "s0.acc": 92.20605, "s0.loss_bbox": 0.11633, "s1.loss_cls": 0.14148, "s1.acc": 91.94711, "s1.loss_bbox": 0.10472, "s2.loss_cls": 0.06819, "s2.acc": 92.28466, "s2.loss_bbox": 0.05697, "loss": 0.8466, "time": 1.15005}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.001, "memory": 12647, "data_time": 0.01039, "loss_rpn_cls": 0.05099, "loss_rpn_bbox": 0.04106, "s0.loss_cls": 0.32542, "s0.acc": 90.74902, "s0.loss_bbox": 0.1545, "s1.loss_cls": 0.16115, "s1.acc": 90.74081, "s1.loss_bbox": 0.13735, "s2.loss_cls": 0.07557, "s2.acc": 91.2775, "s2.loss_bbox": 0.07208, "loss": 1.01812, "time": 1.15673}
{"mode": "val", "epoch": 2, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.188, "bbox_mAP_50": 0.309, "bbox_mAP_75": 0.198, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.026, "bbox_mAP_l": 0.23, "bbox_mAP_copypaste": "0.188 0.309 0.198 0.004 0.026 0.230"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.001, "memory": 12647, "data_time": 0.05576, "loss_rpn_cls": 0.04183, "loss_rpn_bbox": 0.03695, "s0.loss_cls": 0.28917, "s0.acc": 91.40137, "s0.loss_bbox": 0.12936, "s1.loss_cls": 0.15354, "s1.acc": 90.56317, "s1.loss_bbox": 0.12738, "s2.loss_cls": 0.07584, "s2.acc": 90.78873, "s2.loss_bbox": 0.06975, "loss": 0.92382, "time": 1.19408}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 12647, "data_time": 0.01023, "loss_rpn_cls": 0.04915, "loss_rpn_bbox": 0.0421, "s0.loss_cls": 0.31466, "s0.acc": 91.02441, "s0.loss_bbox": 0.14326, "s1.loss_cls": 0.15543, "s1.acc": 91.01174, "s1.loss_bbox": 0.12686, "s2.loss_cls": 0.07254, "s2.acc": 91.50811, "s2.loss_bbox": 0.06562, "loss": 0.96963, "time": 1.15162}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.001, "memory": 12647, "data_time": 0.01042, "loss_rpn_cls": 0.05412, "loss_rpn_bbox": 0.03593, "s0.loss_cls": 0.30414, "s0.acc": 91.31055, "s0.loss_bbox": 0.14273, "s1.loss_cls": 0.15259, "s1.acc": 90.99477, "s1.loss_bbox": 0.12773, "s2.loss_cls": 0.07381, "s2.acc": 91.33909, "s2.loss_bbox": 0.0719, "loss": 0.96295, "time": 1.15765}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 12647, "data_time": 0.01025, "loss_rpn_cls": 0.04739, "loss_rpn_bbox": 0.03941, "s0.loss_cls": 0.29371, "s0.acc": 91.47461, "s0.loss_bbox": 0.13521, "s1.loss_cls": 0.14853, "s1.acc": 91.27113, "s1.loss_bbox": 0.11872, "s2.loss_cls": 0.0717, "s2.acc": 91.59951, "s2.loss_bbox": 0.06364, "loss": 0.91831, "time": 1.15077}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.001, "memory": 12647, "data_time": 0.01034, "loss_rpn_cls": 0.03976, "loss_rpn_bbox": 0.03389, "s0.loss_cls": 0.27564, "s0.acc": 91.875, "s0.loss_bbox": 0.12288, "s1.loss_cls": 0.14279, "s1.acc": 91.36332, "s1.loss_bbox": 0.11849, "s2.loss_cls": 0.07022, "s2.acc": 91.66591, "s2.loss_bbox": 0.0664, "loss": 0.87007, "time": 1.15353}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 12647, "data_time": 0.01071, "loss_rpn_cls": 0.04782, "loss_rpn_bbox": 0.04416, "s0.loss_cls": 0.29424, "s0.acc": 91.32812, "s0.loss_bbox": 0.13746, "s1.loss_cls": 0.14691, "s1.acc": 91.20994, "s1.loss_bbox": 0.12132, "s2.loss_cls": 0.07139, "s2.acc": 91.24313, "s2.loss_bbox": 0.06621, "loss": 0.9295, "time": 1.1552}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.001, "memory": 12647, "data_time": 0.01045, "loss_rpn_cls": 0.0407, "loss_rpn_bbox": 0.03142, "s0.loss_cls": 0.27647, "s0.acc": 92.17285, "s0.loss_bbox": 0.12117, "s1.loss_cls": 0.14018, "s1.acc": 91.80382, "s1.loss_bbox": 0.1112, "s2.loss_cls": 0.06709, "s2.acc": 92.21838, "s2.loss_bbox": 0.06161, "loss": 0.84985, "time": 1.15162}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.001, "memory": 12647, "data_time": 0.01082, "loss_rpn_cls": 0.04321, "loss_rpn_bbox": 0.03187, "s0.loss_cls": 0.26675, "s0.acc": 92.05664, "s0.loss_bbox": 0.11127, "s1.loss_cls": 0.14224, "s1.acc": 91.44723, "s1.loss_bbox": 0.10576, "s2.loss_cls": 0.07262, "s2.acc": 91.14444, "s2.loss_bbox": 0.06337, "loss": 0.83709, "time": 1.1516}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.001, "memory": 12647, "data_time": 0.01097, "loss_rpn_cls": 0.04943, "loss_rpn_bbox": 0.03851, "s0.loss_cls": 0.31546, "s0.acc": 90.69141, "s0.loss_bbox": 0.14757, "s1.loss_cls": 0.15713, "s1.acc": 90.65199, "s1.loss_bbox": 0.12628, "s2.loss_cls": 0.07536, "s2.acc": 91.20296, "s2.loss_bbox": 0.06869, "loss": 0.97842, "time": 1.15241}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.001, "memory": 12647, "data_time": 0.01075, "loss_rpn_cls": 0.04484, "loss_rpn_bbox": 0.03281, "s0.loss_cls": 0.27447, "s0.acc": 91.81738, "s0.loss_bbox": 0.12681, "s1.loss_cls": 0.14394, "s1.acc": 91.13251, "s1.loss_bbox": 0.12262, "s2.loss_cls": 0.07054, "s2.acc": 91.54453, "s2.loss_bbox": 0.06933, "loss": 0.88536, "time": 1.15766}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.001, "memory": 12647, "data_time": 0.01073, "loss_rpn_cls": 0.03985, "loss_rpn_bbox": 0.03499, "s0.loss_cls": 0.27801, "s0.acc": 91.83691, "s0.loss_bbox": 0.12498, "s1.loss_cls": 0.14258, "s1.acc": 91.48601, "s1.loss_bbox": 0.11241, "s2.loss_cls": 0.06937, "s2.acc": 91.45384, "s2.loss_bbox": 0.06228, "loss": 0.86446, "time": 1.15868}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.001, "memory": 12647, "data_time": 0.01077, "loss_rpn_cls": 0.0458, "loss_rpn_bbox": 0.0371, "s0.loss_cls": 0.2959, "s0.acc": 91.42285, "s0.loss_bbox": 0.13782, "s1.loss_cls": 0.15033, "s1.acc": 91.1794, "s1.loss_bbox": 0.1252, "s2.loss_cls": 0.07235, "s2.acc": 91.46727, "s2.loss_bbox": 0.06603, "loss": 0.93053, "time": 1.15569}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.001, "memory": 12647, "data_time": 0.01074, "loss_rpn_cls": 0.04847, "loss_rpn_bbox": 0.03696, "s0.loss_cls": 0.27794, "s0.acc": 91.98145, "s0.loss_bbox": 0.12924, "s1.loss_cls": 0.14044, "s1.acc": 91.8051, "s1.loss_bbox": 0.1161, "s2.loss_cls": 0.06639, "s2.acc": 92.24225, "s2.loss_bbox": 0.06076, "loss": 0.8763, "time": 1.1545}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.001, "memory": 12647, "data_time": 0.01088, "loss_rpn_cls": 0.03877, "loss_rpn_bbox": 0.03036, "s0.loss_cls": 0.25711, "s0.acc": 92.39648, "s0.loss_bbox": 0.11703, "s1.loss_cls": 0.13371, "s1.acc": 91.97464, "s1.loss_bbox": 0.11178, "s2.loss_cls": 0.06542, "s2.acc": 91.93334, "s2.loss_bbox": 0.06508, "loss": 0.81927, "time": 1.15148}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.001, "memory": 12647, "data_time": 0.01103, "loss_rpn_cls": 0.04775, "loss_rpn_bbox": 0.04672, "s0.loss_cls": 0.29591, "s0.acc": 91.30371, "s0.loss_bbox": 0.14225, "s1.loss_cls": 0.1497, "s1.acc": 91.11224, "s1.loss_bbox": 0.12699, "s2.loss_cls": 0.06954, "s2.acc": 91.77782, "s2.loss_bbox": 0.06803, "loss": 0.9469, "time": 1.15422}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.001, "memory": 12647, "data_time": 0.01133, "loss_rpn_cls": 0.04911, "loss_rpn_bbox": 0.03308, "s0.loss_cls": 0.29471, "s0.acc": 91.5791, "s0.loss_bbox": 0.12872, "s1.loss_cls": 0.15002, "s1.acc": 91.03481, "s1.loss_bbox": 0.12169, "s2.loss_cls": 0.07217, "s2.acc": 91.41563, "s2.loss_bbox": 0.06829, "loss": 0.91779, "time": 1.15169}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.001, "memory": 12647, "data_time": 0.01097, "loss_rpn_cls": 0.04633, "loss_rpn_bbox": 0.04157, "s0.loss_cls": 0.27735, "s0.acc": 92.05371, "s0.loss_bbox": 0.12429, "s1.loss_cls": 0.14264, "s1.acc": 91.64345, "s1.loss_bbox": 0.11428, "s2.loss_cls": 0.06813, "s2.acc": 91.92195, "s2.loss_bbox": 0.0628, "loss": 0.8774, "time": 1.1521}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.001, "memory": 12647, "data_time": 0.01098, "loss_rpn_cls": 0.04357, "loss_rpn_bbox": 0.03295, "s0.loss_cls": 0.27157, "s0.acc": 92.08398, "s0.loss_bbox": 0.1187, "s1.loss_cls": 0.14367, "s1.acc": 91.68264, "s1.loss_bbox": 0.11017, "s2.loss_cls": 0.06889, "s2.acc": 91.96222, "s2.loss_bbox": 0.06077, "loss": 0.85031, "time": 1.15147}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.001, "memory": 12647, "data_time": 0.0113, "loss_rpn_cls": 0.04374, "loss_rpn_bbox": 0.05033, "s0.loss_cls": 0.30063, "s0.acc": 91.10059, "s0.loss_bbox": 0.13796, "s1.loss_cls": 0.15905, "s1.acc": 90.63999, "s1.loss_bbox": 0.13025, "s2.loss_cls": 0.07712, "s2.acc": 91.06396, "s2.loss_bbox": 0.07058, "loss": 0.96966, "time": 1.15379}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.001, "memory": 12647, "data_time": 0.01113, "loss_rpn_cls": 0.03778, "loss_rpn_bbox": 0.03658, "s0.loss_cls": 0.27543, "s0.acc": 91.71973, "s0.loss_bbox": 0.13193, "s1.loss_cls": 0.14008, "s1.acc": 91.57413, "s1.loss_bbox": 0.11772, "s2.loss_cls": 0.06847, "s2.acc": 91.58537, "s2.loss_bbox": 0.0644, "loss": 0.87239, "time": 1.1575}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.001, "memory": 12647, "data_time": 0.01107, "loss_rpn_cls": 0.04615, "loss_rpn_bbox": 0.03627, "s0.loss_cls": 0.26413, "s0.acc": 92.14258, "s0.loss_bbox": 0.1223, "s1.loss_cls": 0.1345, "s1.acc": 92.00675, "s1.loss_bbox": 0.11228, "s2.loss_cls": 0.0656, "s2.acc": 92.33709, "s2.loss_bbox": 0.06164, "loss": 0.84287, "time": 1.15683}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.001, "memory": 12647, "data_time": 0.01104, "loss_rpn_cls": 0.03648, "loss_rpn_bbox": 0.03347, "s0.loss_cls": 0.26691, "s0.acc": 92.45898, "s0.loss_bbox": 0.11162, "s1.loss_cls": 0.14037, "s1.acc": 91.88276, "s1.loss_bbox": 0.10703, "s2.loss_cls": 0.06781, "s2.acc": 92.28426, "s2.loss_bbox": 0.06202, "loss": 0.82571, "time": 1.14921}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.001, "memory": 12647, "data_time": 0.01115, "loss_rpn_cls": 0.04531, "loss_rpn_bbox": 0.03346, "s0.loss_cls": 0.26265, "s0.acc": 92.35645, "s0.loss_bbox": 0.12537, "s1.loss_cls": 0.13588, "s1.acc": 92.01455, "s1.loss_bbox": 0.11277, "s2.loss_cls": 0.06515, "s2.acc": 92.53113, "s2.loss_bbox": 0.06307, "loss": 0.84365, "time": 1.14747}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.001, "memory": 12647, "data_time": 0.01109, "loss_rpn_cls": 0.04866, "loss_rpn_bbox": 0.04076, "s0.loss_cls": 0.28129, "s0.acc": 91.56445, "s0.loss_bbox": 0.13033, "s1.loss_cls": 0.14349, "s1.acc": 91.30806, "s1.loss_bbox": 0.12241, "s2.loss_cls": 0.069, "s2.acc": 91.6999, "s2.loss_bbox": 0.06863, "loss": 0.90458, "time": 1.15177}
{"mode": "val", "epoch": 3, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.238, "bbox_mAP_50": 0.375, "bbox_mAP_75": 0.259, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.048, "bbox_mAP_l": 0.288, "bbox_mAP_copypaste": "0.238 0.375 0.259 0.004 0.048 0.288"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.001, "memory": 12647, "data_time": 0.05635, "loss_rpn_cls": 0.0417, "loss_rpn_bbox": 0.04599, "s0.loss_cls": 0.27859, "s0.acc": 91.73535, "s0.loss_bbox": 0.12547, "s1.loss_cls": 0.14228, "s1.acc": 91.47473, "s1.loss_bbox": 0.11654, "s2.loss_cls": 0.06921, "s2.acc": 91.75727, "s2.loss_bbox": 0.06444, "loss": 0.88424, "time": 1.20187}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 12647, "data_time": 0.01074, "loss_rpn_cls": 0.04375, "loss_rpn_bbox": 0.03484, "s0.loss_cls": 0.26955, "s0.acc": 91.55762, "s0.loss_bbox": 0.12556, "s1.loss_cls": 0.13807, "s1.acc": 91.2683, "s1.loss_bbox": 0.11532, "s2.loss_cls": 0.06888, "s2.acc": 91.18245, "s2.loss_bbox": 0.06625, "loss": 0.86224, "time": 1.1508}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.001, "memory": 12647, "data_time": 0.01057, "loss_rpn_cls": 0.03243, "loss_rpn_bbox": 0.0322, "s0.loss_cls": 0.25219, "s0.acc": 92.5752, "s0.loss_bbox": 0.10909, "s1.loss_cls": 0.13236, "s1.acc": 91.93971, "s1.loss_bbox": 0.11032, "s2.loss_cls": 0.06595, "s2.acc": 91.7057, "s2.loss_bbox": 0.06539, "loss": 0.79993, "time": 1.15344}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 12647, "data_time": 0.01103, "loss_rpn_cls": 0.04493, "loss_rpn_bbox": 0.03609, "s0.loss_cls": 0.29572, "s0.acc": 90.79688, "s0.loss_bbox": 0.14016, "s1.loss_cls": 0.14811, "s1.acc": 90.7878, "s1.loss_bbox": 0.12992, "s2.loss_cls": 0.07233, "s2.acc": 91.02638, "s2.loss_bbox": 0.07239, "loss": 0.93964, "time": 1.15659}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.001, "memory": 12647, "data_time": 0.01049, "loss_rpn_cls": 0.04541, "loss_rpn_bbox": 0.03928, "s0.loss_cls": 0.27884, "s0.acc": 91.47559, "s0.loss_bbox": 0.13132, "s1.loss_cls": 0.14238, "s1.acc": 91.12172, "s1.loss_bbox": 0.12081, "s2.loss_cls": 0.07051, "s2.acc": 91.34642, "s2.loss_bbox": 0.06829, "loss": 0.89684, "time": 1.14988}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 12647, "data_time": 0.01053, "loss_rpn_cls": 0.03908, "loss_rpn_bbox": 0.03548, "s0.loss_cls": 0.26978, "s0.acc": 92.15039, "s0.loss_bbox": 0.12443, "s1.loss_cls": 0.13695, "s1.acc": 91.87033, "s1.loss_bbox": 0.11655, "s2.loss_cls": 0.06709, "s2.acc": 91.90715, "s2.loss_bbox": 0.06246, "loss": 0.85182, "time": 1.1537}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.001, "memory": 12647, "data_time": 0.01072, "loss_rpn_cls": 0.04149, "loss_rpn_bbox": 0.03557, "s0.loss_cls": 0.27538, "s0.acc": 91.60742, "s0.loss_bbox": 0.12801, "s1.loss_cls": 0.1399, "s1.acc": 91.55359, "s1.loss_bbox": 0.12307, "s2.loss_cls": 0.06797, "s2.acc": 91.94551, "s2.loss_bbox": 0.06916, "loss": 0.88055, "time": 1.15205}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.001, "memory": 12647, "data_time": 0.01064, "loss_rpn_cls": 0.03956, "loss_rpn_bbox": 0.03547, "s0.loss_cls": 0.26589, "s0.acc": 91.95605, "s0.loss_bbox": 0.12659, "s1.loss_cls": 0.13849, "s1.acc": 91.43499, "s1.loss_bbox": 0.11595, "s2.loss_cls": 0.06808, "s2.acc": 91.45944, "s2.loss_bbox": 0.06415, "loss": 0.85416, "time": 1.14796}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.001, "memory": 12647, "data_time": 0.0106, "loss_rpn_cls": 0.0351, "loss_rpn_bbox": 0.03506, "s0.loss_cls": 0.24061, "s0.acc": 92.80566, "s0.loss_bbox": 0.10729, "s1.loss_cls": 0.12507, "s1.acc": 92.33199, "s1.loss_bbox": 0.10381, "s2.loss_cls": 0.06404, "s2.acc": 92.15322, "s2.loss_bbox": 0.06143, "loss": 0.7724, "time": 1.14992}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.001, "memory": 12647, "data_time": 0.01084, "loss_rpn_cls": 0.04279, "loss_rpn_bbox": 0.02996, "s0.loss_cls": 0.25392, "s0.acc": 92.45898, "s0.loss_bbox": 0.10749, "s1.loss_cls": 0.13201, "s1.acc": 91.99987, "s1.loss_bbox": 0.10379, "s2.loss_cls": 0.06422, "s2.acc": 92.29577, "s2.loss_bbox": 0.05918, "loss": 0.79336, "time": 1.15288}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.001, "memory": 12647, "data_time": 0.01054, "loss_rpn_cls": 0.03525, "loss_rpn_bbox": 0.03744, "s0.loss_cls": 0.26207, "s0.acc": 91.86914, "s0.loss_bbox": 0.12882, "s1.loss_cls": 0.1327, "s1.acc": 91.69576, "s1.loss_bbox": 0.11887, "s2.loss_cls": 0.06585, "s2.acc": 91.88219, "s2.loss_bbox": 0.06611, "loss": 0.84711, "time": 1.15019}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.001, "memory": 12647, "data_time": 0.01094, "loss_rpn_cls": 0.04524, "loss_rpn_bbox": 0.03368, "s0.loss_cls": 0.25906, "s0.acc": 92.35645, "s0.loss_bbox": 0.11808, "s1.loss_cls": 0.13303, "s1.acc": 91.93135, "s1.loss_bbox": 0.10937, "s2.loss_cls": 0.06645, "s2.acc": 92.04244, "s2.loss_bbox": 0.06439, "loss": 0.8293, "time": 1.15106}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.001, "memory": 12647, "data_time": 0.01101, "loss_rpn_cls": 0.03691, "loss_rpn_bbox": 0.03849, "s0.loss_cls": 0.26198, "s0.acc": 92.07422, "s0.loss_bbox": 0.11058, "s1.loss_cls": 0.13607, "s1.acc": 91.54526, "s1.loss_bbox": 0.1047, "s2.loss_cls": 0.06822, "s2.acc": 91.82133, "s2.loss_bbox": 0.06207, "loss": 0.81902, "time": 1.151}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.001, "memory": 12647, "data_time": 0.0108, "loss_rpn_cls": 0.03848, "loss_rpn_bbox": 0.03846, "s0.loss_cls": 0.28841, "s0.acc": 90.79883, "s0.loss_bbox": 0.14714, "s1.loss_cls": 0.14416, "s1.acc": 90.67726, "s1.loss_bbox": 0.13484, "s2.loss_cls": 0.07242, "s2.acc": 90.59876, "s2.loss_bbox": 0.07445, "loss": 0.93836, "time": 1.15437}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.001, "memory": 12647, "data_time": 0.01104, "loss_rpn_cls": 0.02958, "loss_rpn_bbox": 0.02941, "s0.loss_cls": 0.24444, "s0.acc": 92.71582, "s0.loss_bbox": 0.10679, "s1.loss_cls": 0.12715, "s1.acc": 92.53053, "s1.loss_bbox": 0.10245, "s2.loss_cls": 0.0632, "s2.acc": 92.6134, "s2.loss_bbox": 0.05944, "loss": 0.76247, "time": 1.15249}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.001, "memory": 12647, "data_time": 0.01072, "loss_rpn_cls": 0.04152, "loss_rpn_bbox": 0.03038, "s0.loss_cls": 0.25433, "s0.acc": 92.12012, "s0.loss_bbox": 0.12403, "s1.loss_cls": 0.13324, "s1.acc": 91.44522, "s1.loss_bbox": 0.11477, "s2.loss_cls": 0.0639, "s2.acc": 91.73385, "s2.loss_bbox": 0.0619, "loss": 0.82409, "time": 1.1509}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.001, "memory": 12647, "data_time": 0.01106, "loss_rpn_cls": 0.04381, "loss_rpn_bbox": 0.03749, "s0.loss_cls": 0.25951, "s0.acc": 92.04688, "s0.loss_bbox": 0.12931, "s1.loss_cls": 0.1321, "s1.acc": 91.80667, "s1.loss_bbox": 0.11641, "s2.loss_cls": 0.06375, "s2.acc": 92.18513, "s2.loss_bbox": 0.06337, "loss": 0.84575, "time": 1.15553}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.001, "memory": 12647, "data_time": 0.01093, "loss_rpn_cls": 0.03018, "loss_rpn_bbox": 0.0328, "s0.loss_cls": 0.24359, "s0.acc": 92.63086, "s0.loss_bbox": 0.11188, "s1.loss_cls": 0.12948, "s1.acc": 92.13901, "s1.loss_bbox": 0.11102, "s2.loss_cls": 0.06581, "s2.acc": 91.90135, "s2.loss_bbox": 0.06488, "loss": 0.78964, "time": 1.14588}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.001, "memory": 12647, "data_time": 0.01117, "loss_rpn_cls": 0.04338, "loss_rpn_bbox": 0.0347, "s0.loss_cls": 0.27218, "s0.acc": 91.91992, "s0.loss_bbox": 0.12144, "s1.loss_cls": 0.13924, "s1.acc": 91.69043, "s1.loss_bbox": 0.11623, "s2.loss_cls": 0.06905, "s2.acc": 91.58944, "s2.loss_bbox": 0.06638, "loss": 0.8626, "time": 1.14744}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.001, "memory": 12647, "data_time": 0.01122, "loss_rpn_cls": 0.03274, "loss_rpn_bbox": 0.02729, "s0.loss_cls": 0.23111, "s0.acc": 92.92969, "s0.loss_bbox": 0.10614, "s1.loss_cls": 0.11564, "s1.acc": 92.78126, "s1.loss_bbox": 0.10282, "s2.loss_cls": 0.05795, "s2.acc": 92.8349, "s2.loss_bbox": 0.06001, "loss": 0.73371, "time": 1.15331}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.001, "memory": 12647, "data_time": 0.01094, "loss_rpn_cls": 0.04214, "loss_rpn_bbox": 0.03862, "s0.loss_cls": 0.2782, "s0.acc": 91.89062, "s0.loss_bbox": 0.12739, "s1.loss_cls": 0.14402, "s1.acc": 91.64723, "s1.loss_bbox": 0.11711, "s2.loss_cls": 0.06905, "s2.acc": 92.08815, "s2.loss_bbox": 0.06392, "loss": 0.88046, "time": 1.15228}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.001, "memory": 12647, "data_time": 0.0115, "loss_rpn_cls": 0.03828, "loss_rpn_bbox": 0.03043, "s0.loss_cls": 0.24419, "s0.acc": 92.40625, "s0.loss_bbox": 0.11112, "s1.loss_cls": 0.12552, "s1.acc": 92.16697, "s1.loss_bbox": 0.10892, "s2.loss_cls": 0.0634, "s2.acc": 92.03741, "s2.loss_bbox": 0.06322, "loss": 0.78507, "time": 1.14896}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 0.001, "memory": 12647, "data_time": 0.01119, "loss_rpn_cls": 0.04256, "loss_rpn_bbox": 0.03334, "s0.loss_cls": 0.26246, "s0.acc": 92.12012, "s0.loss_bbox": 0.12154, "s1.loss_cls": 0.13406, "s1.acc": 91.77474, "s1.loss_bbox": 0.11737, "s2.loss_cls": 0.06664, "s2.acc": 91.87683, "s2.loss_bbox": 0.07111, "loss": 0.84908, "time": 1.15457}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.001, "memory": 12647, "data_time": 0.01139, "loss_rpn_cls": 0.03236, "loss_rpn_bbox": 0.03055, "s0.loss_cls": 0.25859, "s0.acc": 92.25488, "s0.loss_bbox": 0.11258, "s1.loss_cls": 0.13667, "s1.acc": 91.57445, "s1.loss_bbox": 0.10752, "s2.loss_cls": 0.0679, "s2.acc": 91.70556, "s2.loss_bbox": 0.06217, "loss": 0.80833, "time": 1.15385}
{"mode": "val", "epoch": 4, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.309, "bbox_mAP_50": 0.47, "bbox_mAP_75": 0.344, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.082, "bbox_mAP_l": 0.367, "bbox_mAP_copypaste": "0.309 0.470 0.344 0.010 0.082 0.367"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.001, "memory": 12647, "data_time": 0.05651, "loss_rpn_cls": 0.02958, "loss_rpn_bbox": 0.03096, "s0.loss_cls": 0.20796, "s0.acc": 93.45801, "s0.loss_bbox": 0.0914, "s1.loss_cls": 0.10649, "s1.acc": 93.30043, "s1.loss_bbox": 0.09045, "s2.loss_cls": 0.05382, "s2.acc": 93.2168, "s2.loss_bbox": 0.05447, "loss": 0.66514, "time": 1.19812}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 12647, "data_time": 0.01062, "loss_rpn_cls": 0.03465, "loss_rpn_bbox": 0.0354, "s0.loss_cls": 0.25492, "s0.acc": 92.00195, "s0.loss_bbox": 0.12253, "s1.loss_cls": 0.13155, "s1.acc": 91.75203, "s1.loss_bbox": 0.11389, "s2.loss_cls": 0.06586, "s2.acc": 91.77415, "s2.loss_bbox": 0.06552, "loss": 0.82433, "time": 1.15209}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.001, "memory": 12647, "data_time": 0.01068, "loss_rpn_cls": 0.03316, "loss_rpn_bbox": 0.02957, "s0.loss_cls": 0.26527, "s0.acc": 92.05859, "s0.loss_bbox": 0.12004, "s1.loss_cls": 0.13533, "s1.acc": 91.80696, "s1.loss_bbox": 0.1111, "s2.loss_cls": 0.06679, "s2.acc": 91.80783, "s2.loss_bbox": 0.065, "loss": 0.82627, "time": 1.15117}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 12647, "data_time": 0.01083, "loss_rpn_cls": 0.03511, "loss_rpn_bbox": 0.03356, "s0.loss_cls": 0.26368, "s0.acc": 91.88086, "s0.loss_bbox": 0.11942, "s1.loss_cls": 0.13533, "s1.acc": 91.70521, "s1.loss_bbox": 0.11096, "s2.loss_cls": 0.06574, "s2.acc": 91.78415, "s2.loss_bbox": 0.06352, "loss": 0.82732, "time": 1.1506}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.001, "memory": 12647, "data_time": 0.01068, "loss_rpn_cls": 0.02676, "loss_rpn_bbox": 0.0313, "s0.loss_cls": 0.21115, "s0.acc": 93.25781, "s0.loss_bbox": 0.09739, "s1.loss_cls": 0.10862, "s1.acc": 93.01085, "s1.loss_bbox": 0.09537, "s2.loss_cls": 0.05638, "s2.acc": 92.62889, "s2.loss_bbox": 0.05942, "loss": 0.68639, "time": 1.14594}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 12647, "data_time": 0.01073, "loss_rpn_cls": 0.03383, "loss_rpn_bbox": 0.03554, "s0.loss_cls": 0.26948, "s0.acc": 91.4082, "s0.loss_bbox": 0.13292, "s1.loss_cls": 0.13781, "s1.acc": 91.06578, "s1.loss_bbox": 0.12563, "s2.loss_cls": 0.06868, "s2.acc": 91.11148, "s2.loss_bbox": 0.07419, "loss": 0.87808, "time": 1.14812}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.001, "memory": 12647, "data_time": 0.01073, "loss_rpn_cls": 0.03664, "loss_rpn_bbox": 0.0307, "s0.loss_cls": 0.24519, "s0.acc": 92.37598, "s0.loss_bbox": 0.1171, "s1.loss_cls": 0.12451, "s1.acc": 92.05241, "s1.loss_bbox": 0.10581, "s2.loss_cls": 0.06228, "s2.acc": 92.16651, "s2.loss_bbox": 0.06045, "loss": 0.78266, "time": 1.1532}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.001, "memory": 12647, "data_time": 0.0109, "loss_rpn_cls": 0.03632, "loss_rpn_bbox": 0.03198, "s0.loss_cls": 0.23458, "s0.acc": 92.61328, "s0.loss_bbox": 0.10494, "s1.loss_cls": 0.12206, "s1.acc": 92.22809, "s1.loss_bbox": 0.10071, "s2.loss_cls": 0.06145, "s2.acc": 92.31006, "s2.loss_bbox": 0.06149, "loss": 0.75353, "time": 1.14872}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.001, "memory": 12647, "data_time": 0.01098, "loss_rpn_cls": 0.03416, "loss_rpn_bbox": 0.03293, "s0.loss_cls": 0.23543, "s0.acc": 92.72949, "s0.loss_bbox": 0.09781, "s1.loss_cls": 0.12272, "s1.acc": 92.42593, "s1.loss_bbox": 0.09574, "s2.loss_cls": 0.06344, "s2.acc": 91.85951, "s2.loss_bbox": 0.05638, "loss": 0.7386, "time": 1.15036}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.001, "memory": 12647, "data_time": 0.01122, "loss_rpn_cls": 0.03295, "loss_rpn_bbox": 0.02728, "s0.loss_cls": 0.23426, "s0.acc": 92.65039, "s0.loss_bbox": 0.10293, "s1.loss_cls": 0.12432, "s1.acc": 92.15747, "s1.loss_bbox": 0.10143, "s2.loss_cls": 0.06415, "s2.acc": 91.70817, "s2.loss_bbox": 0.06207, "loss": 0.74938, "time": 1.15354}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.001, "memory": 12647, "data_time": 0.01099, "loss_rpn_cls": 0.0283, "loss_rpn_bbox": 0.02631, "s0.loss_cls": 0.21663, "s0.acc": 93.21387, "s0.loss_bbox": 0.09243, "s1.loss_cls": 0.11408, "s1.acc": 92.94395, "s1.loss_bbox": 0.09431, "s2.loss_cls": 0.05791, "s2.acc": 93.01222, "s2.loss_bbox": 0.05961, "loss": 0.68958, "time": 1.15853}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.001, "memory": 12647, "data_time": 0.01115, "loss_rpn_cls": 0.03363, "loss_rpn_bbox": 0.03271, "s0.loss_cls": 0.24065, "s0.acc": 92.47949, "s0.loss_bbox": 0.11775, "s1.loss_cls": 0.12104, "s1.acc": 92.38849, "s1.loss_bbox": 0.1091, "s2.loss_cls": 0.06047, "s2.acc": 92.03692, "s2.loss_bbox": 0.06423, "loss": 0.77958, "time": 1.15176}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.001, "memory": 12647, "data_time": 0.01115, "loss_rpn_cls": 0.03002, "loss_rpn_bbox": 0.02829, "s0.loss_cls": 0.25295, "s0.acc": 92.40723, "s0.loss_bbox": 0.11643, "s1.loss_cls": 0.12846, "s1.acc": 92.3682, "s1.loss_bbox": 0.10915, "s2.loss_cls": 0.0632, "s2.acc": 92.29518, "s2.loss_bbox": 0.06354, "loss": 0.79205, "time": 1.15385}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.001, "memory": 12647, "data_time": 0.01158, "loss_rpn_cls": 0.03624, "loss_rpn_bbox": 0.0336, "s0.loss_cls": 0.25963, "s0.acc": 92.15039, "s0.loss_bbox": 0.1181, "s1.loss_cls": 0.13022, "s1.acc": 92.0409, "s1.loss_bbox": 0.10856, "s2.loss_cls": 0.06524, "s2.acc": 91.98117, "s2.loss_bbox": 0.06103, "loss": 0.81262, "time": 1.1518}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.001, "memory": 12647, "data_time": 0.01156, "loss_rpn_cls": 0.02793, "loss_rpn_bbox": 0.03318, "s0.loss_cls": 0.23997, "s0.acc": 92.60254, "s0.loss_bbox": 0.11073, "s1.loss_cls": 0.12498, "s1.acc": 92.16561, "s1.loss_bbox": 0.10333, "s2.loss_cls": 0.063, "s2.acc": 92.19522, "s2.loss_bbox": 0.06069, "loss": 0.76381, "time": 1.15006}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.001, "memory": 12647, "data_time": 0.01136, "loss_rpn_cls": 0.03508, "loss_rpn_bbox": 0.03365, "s0.loss_cls": 0.24258, "s0.acc": 92.48926, "s0.loss_bbox": 0.11253, "s1.loss_cls": 0.12367, "s1.acc": 92.29464, "s1.loss_bbox": 0.10555, "s2.loss_cls": 0.06189, "s2.acc": 92.51013, "s2.loss_bbox": 0.06049, "loss": 0.77545, "time": 1.15231}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.001, "memory": 12647, "data_time": 0.01131, "loss_rpn_cls": 0.04058, "loss_rpn_bbox": 0.03323, "s0.loss_cls": 0.26308, "s0.acc": 92.07129, "s0.loss_bbox": 0.12177, "s1.loss_cls": 0.13171, "s1.acc": 91.96155, "s1.loss_bbox": 0.11076, "s2.loss_cls": 0.06463, "s2.acc": 92.19691, "s2.loss_bbox": 0.06431, "loss": 0.83007, "time": 1.15075}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.001, "memory": 12647, "data_time": 0.01105, "loss_rpn_cls": 0.03534, "loss_rpn_bbox": 0.03176, "s0.loss_cls": 0.23765, "s0.acc": 92.68848, "s0.loss_bbox": 0.11355, "s1.loss_cls": 0.12011, "s1.acc": 92.33637, "s1.loss_bbox": 0.10739, "s2.loss_cls": 0.05976, "s2.acc": 92.29716, "s2.loss_bbox": 0.06229, "loss": 0.76783, "time": 1.14786}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.001, "memory": 12648, "data_time": 0.01128, "loss_rpn_cls": 0.03776, "loss_rpn_bbox": 0.03634, "s0.loss_cls": 0.25888, "s0.acc": 91.9248, "s0.loss_bbox": 0.13155, "s1.loss_cls": 0.13092, "s1.acc": 91.67269, "s1.loss_bbox": 0.12004, "s2.loss_cls": 0.06527, "s2.acc": 91.60418, "s2.loss_bbox": 0.06776, "loss": 0.84852, "time": 1.15258}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.001, "memory": 12648, "data_time": 0.01118, "loss_rpn_cls": 0.03818, "loss_rpn_bbox": 0.02634, "s0.loss_cls": 0.21671, "s0.acc": 93.33203, "s0.loss_bbox": 0.09814, "s1.loss_cls": 0.11192, "s1.acc": 93.01879, "s1.loss_bbox": 0.09789, "s2.loss_cls": 0.05638, "s2.acc": 92.86837, "s2.loss_bbox": 0.05843, "loss": 0.70398, "time": 1.14634}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.001, "memory": 12648, "data_time": 0.01125, "loss_rpn_cls": 0.03913, "loss_rpn_bbox": 0.03656, "s0.loss_cls": 0.25041, "s0.acc": 92.18652, "s0.loss_bbox": 0.12536, "s1.loss_cls": 0.1276, "s1.acc": 92.0465, "s1.loss_bbox": 0.11621, "s2.loss_cls": 0.06287, "s2.acc": 92.26665, "s2.loss_bbox": 0.06617, "loss": 0.82431, "time": 1.14774}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.001, "memory": 12648, "data_time": 0.01122, "loss_rpn_cls": 0.03463, "loss_rpn_bbox": 0.0326, "s0.loss_cls": 0.2597, "s0.acc": 91.83594, "s0.loss_bbox": 0.12508, "s1.loss_cls": 0.13146, "s1.acc": 91.807, "s1.loss_bbox": 0.11572, "s2.loss_cls": 0.06601, "s2.acc": 91.8772, "s2.loss_bbox": 0.06728, "loss": 0.83248, "time": 1.15397}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 0.001, "memory": 12648, "data_time": 0.01141, "loss_rpn_cls": 0.03658, "loss_rpn_bbox": 0.03615, "s0.loss_cls": 0.27371, "s0.acc": 91.76562, "s0.loss_bbox": 0.12763, "s1.loss_cls": 0.13871, "s1.acc": 91.51959, "s1.loss_bbox": 0.11949, "s2.loss_cls": 0.06814, "s2.acc": 91.55686, "s2.loss_bbox": 0.06695, "loss": 0.86735, "time": 1.15218}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.001, "memory": 12648, "data_time": 0.01163, "loss_rpn_cls": 0.0341, "loss_rpn_bbox": 0.03836, "s0.loss_cls": 0.23424, "s0.acc": 92.75684, "s0.loss_bbox": 0.1159, "s1.loss_cls": 0.11748, "s1.acc": 92.75231, "s1.loss_bbox": 0.11073, "s2.loss_cls": 0.05743, "s2.acc": 92.98875, "s2.loss_bbox": 0.0644, "loss": 0.77263, "time": 1.15005}
{"mode": "val", "epoch": 5, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.367, "bbox_mAP_50": 0.539, "bbox_mAP_75": 0.399, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.115, "bbox_mAP_l": 0.433, "bbox_mAP_copypaste": "0.367 0.539 0.399 0.003 0.115 0.433"}
