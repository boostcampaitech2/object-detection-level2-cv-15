{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.15.1+2577e37", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../dataset/train.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../dataset/test.json',\n        img_prefix='../dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/final1'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "final1.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 6666, "data_time": 0.05629, "loss_rpn_cls": 0.68026, "loss_rpn_bbox": 0.03433, "s0.loss_cls": 0.44593, "s0.acc": 91.27539, "s0.loss_bbox": 0.05609, "s1.loss_cls": 0.44405, "s1.acc": 71.4502, "s1.loss_bbox": 0.0215, "s2.loss_cls": 0.37912, "s2.acc": 53.36426, "s2.loss_bbox": 0.00399, "loss": 2.06527, "time": 0.642}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0002, "memory": 6666, "data_time": 0.013, "loss_rpn_cls": 0.44009, "loss_rpn_bbox": 0.04361, "s0.loss_cls": 0.29444, "s0.acc": 95.58398, "s0.loss_bbox": 0.12268, "s1.loss_cls": 0.09706, "s1.acc": 97.80566, "s1.loss_bbox": 0.0392, "s2.loss_cls": 0.04531, "s2.acc": 97.72852, "s2.loss_bbox": 0.00843, "loss": 1.09082, "time": 0.60944}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0003, "memory": 6666, "data_time": 0.0122, "loss_rpn_cls": 0.16864, "loss_rpn_bbox": 0.05203, "s0.loss_cls": 0.31938, "s0.acc": 93.99316, "s0.loss_bbox": 0.16108, "s1.loss_cls": 0.09852, "s1.acc": 97.31738, "s1.loss_bbox": 0.04983, "s2.loss_cls": 0.02819, "s2.acc": 98.65137, "s2.loss_bbox": 0.00948, "loss": 0.88713, "time": 0.60368}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0004, "memory": 6666, "data_time": 0.01263, "loss_rpn_cls": 0.13189, "loss_rpn_bbox": 0.03594, "s0.loss_cls": 0.3214, "s0.acc": 93.39062, "s0.loss_bbox": 0.16397, "s1.loss_cls": 0.10252, "s1.acc": 96.70898, "s1.loss_bbox": 0.05839, "s2.loss_cls": 0.02996, "s2.acc": 98.36914, "s2.loss_bbox": 0.01042, "loss": 0.85449, "time": 0.60616}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0005, "memory": 6666, "data_time": 0.01266, "loss_rpn_cls": 0.12402, "loss_rpn_bbox": 0.04449, "s0.loss_cls": 0.31432, "s0.acc": 93.31445, "s0.loss_bbox": 0.15729, "s1.loss_cls": 0.106, "s1.acc": 96.34375, "s1.loss_bbox": 0.06361, "s2.loss_cls": 0.03126, "s2.acc": 98.18457, "s2.loss_bbox": 0.0122, "loss": 0.8532, "time": 0.60101}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0006, "memory": 6666, "data_time": 0.0125, "loss_rpn_cls": 0.11253, "loss_rpn_bbox": 0.04268, "s0.loss_cls": 0.29793, "s0.acc": 93.66699, "s0.loss_bbox": 0.14402, "s1.loss_cls": 0.1067, "s1.acc": 96.09863, "s1.loss_bbox": 0.06787, "s2.loss_cls": 0.03235, "s2.acc": 98.04395, "s2.loss_bbox": 0.01365, "loss": 0.81772, "time": 0.60219}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.0007, "memory": 6666, "data_time": 0.01304, "loss_rpn_cls": 0.1086, "loss_rpn_bbox": 0.03585, "s0.loss_cls": 0.29971, "s0.acc": 93.14941, "s0.loss_bbox": 0.15064, "s1.loss_cls": 0.11254, "s1.acc": 95.49609, "s1.loss_bbox": 0.07666, "s2.loss_cls": 0.03622, "s2.acc": 97.63379, "s2.loss_bbox": 0.01761, "loss": 0.83783, "time": 0.60923}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0008, "memory": 6666, "data_time": 0.01338, "loss_rpn_cls": 0.10461, "loss_rpn_bbox": 0.03797, "s0.loss_cls": 0.31088, "s0.acc": 92.7793, "s0.loss_bbox": 0.16175, "s1.loss_cls": 0.11396, "s1.acc": 95.24805, "s1.loss_bbox": 0.08051, "s2.loss_cls": 0.03758, "s2.acc": 97.43652, "s2.loss_bbox": 0.01942, "loss": 0.86669, "time": 0.60931}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0009, "memory": 6666, "data_time": 0.01302, "loss_rpn_cls": 0.11732, "loss_rpn_bbox": 0.045, "s0.loss_cls": 0.31443, "s0.acc": 92.56641, "s0.loss_bbox": 0.16454, "s1.loss_cls": 0.12022, "s1.acc": 94.69727, "s1.loss_bbox": 0.08756, "s2.loss_cls": 0.04274, "s2.acc": 96.94434, "s2.loss_bbox": 0.02391, "loss": 0.91572, "time": 0.60686}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.001, "memory": 6666, "data_time": 0.01305, "loss_rpn_cls": 0.11869, "loss_rpn_bbox": 0.04389, "s0.loss_cls": 0.33785, "s0.acc": 91.66211, "s0.loss_bbox": 0.17953, "s1.loss_cls": 0.13473, "s1.acc": 93.78223, "s1.loss_bbox": 0.10258, "s2.loss_cls": 0.0479, "s2.acc": 96.19434, "s2.loss_bbox": 0.03007, "loss": 0.99525, "time": 0.6053}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.001, "memory": 6666, "data_time": 0.01278, "loss_rpn_cls": 0.08835, "loss_rpn_bbox": 0.03579, "s0.loss_cls": 0.27706, "s0.acc": 93.42676, "s0.loss_bbox": 0.13889, "s1.loss_cls": 0.11504, "s1.acc": 94.66406, "s1.loss_bbox": 0.08745, "s2.loss_cls": 0.04528, "s2.acc": 96.1543, "s2.loss_bbox": 0.03207, "loss": 0.81993, "time": 0.59816}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.001, "memory": 6666, "data_time": 0.01292, "loss_rpn_cls": 0.10337, "loss_rpn_bbox": 0.04807, "s0.loss_cls": 0.31828, "s0.acc": 91.58398, "s0.loss_bbox": 0.18024, "s1.loss_cls": 0.14089, "s1.acc": 92.87793, "s1.loss_bbox": 0.11566, "s2.loss_cls": 0.05595, "s2.acc": 95.01465, "s2.loss_bbox": 0.04148, "loss": 1.00394, "time": 0.60467}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.001, "memory": 6666, "data_time": 0.01283, "loss_rpn_cls": 0.07021, "loss_rpn_bbox": 0.03918, "s0.loss_cls": 0.3111, "s0.acc": 92.56641, "s0.loss_bbox": 0.15555, "s1.loss_cls": 0.1255, "s1.acc": 94.17578, "s1.loss_bbox": 0.09501, "s2.loss_cls": 0.048, "s2.acc": 95.93848, "s2.loss_bbox": 0.03422, "loss": 0.87877, "time": 0.60536}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.001, "memory": 6666, "data_time": 0.01291, "loss_rpn_cls": 0.05772, "loss_rpn_bbox": 0.02883, "s0.loss_cls": 0.27684, "s0.acc": 93.11914, "s0.loss_bbox": 0.13717, "s1.loss_cls": 0.11569, "s1.acc": 94.27637, "s1.loss_bbox": 0.08966, "s2.loss_cls": 0.04761, "s2.acc": 95.62793, "s2.loss_bbox": 0.03643, "loss": 0.78995, "time": 0.60884}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.001, "memory": 6666, "data_time": 0.01314, "loss_rpn_cls": 0.09908, "loss_rpn_bbox": 0.04365, "s0.loss_cls": 0.35389, "s0.acc": 91.02051, "s0.loss_bbox": 0.18125, "s1.loss_cls": 0.15052, "s1.acc": 92.59668, "s1.loss_bbox": 0.11866, "s2.loss_cls": 0.05976, "s2.acc": 94.54492, "s2.loss_bbox": 0.04449, "loss": 1.05131, "time": 0.60823}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.001, "memory": 6666, "data_time": 0.01328, "loss_rpn_cls": 0.07713, "loss_rpn_bbox": 0.03391, "s0.loss_cls": 0.32825, "s0.acc": 91.58496, "s0.loss_bbox": 0.17124, "s1.loss_cls": 0.1469, "s1.acc": 92.58789, "s1.loss_bbox": 0.12039, "s2.loss_cls": 0.06067, "s2.acc": 94.24414, "s2.loss_bbox": 0.04888, "loss": 0.98737, "time": 0.6098}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.001, "memory": 6666, "data_time": 0.01301, "loss_rpn_cls": 0.05996, "loss_rpn_bbox": 0.03069, "s0.loss_cls": 0.29305, "s0.acc": 92.57715, "s0.loss_bbox": 0.14498, "s1.loss_cls": 0.12844, "s1.acc": 93.55566, "s1.loss_bbox": 0.10405, "s2.loss_cls": 0.05016, "s2.acc": 95.24707, "s2.loss_bbox": 0.04171, "loss": 0.85304, "time": 0.60527}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.001, "memory": 6666, "data_time": 0.01289, "loss_rpn_cls": 0.06596, "loss_rpn_bbox": 0.03482, "s0.loss_cls": 0.30993, "s0.acc": 92.26465, "s0.loss_bbox": 0.14684, "s1.loss_cls": 0.13401, "s1.acc": 93.31934, "s1.loss_bbox": 0.10141, "s2.loss_cls": 0.05524, "s2.acc": 94.51855, "s2.loss_bbox": 0.04506, "loss": 0.89326, "time": 0.60753}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.001, "memory": 6666, "data_time": 0.0132, "loss_rpn_cls": 0.05516, "loss_rpn_bbox": 0.02752, "s0.loss_cls": 0.26428, "s0.acc": 93.23438, "s0.loss_bbox": 0.12818, "s1.loss_cls": 0.1212, "s1.acc": 93.75391, "s1.loss_bbox": 0.09684, "s2.loss_cls": 0.0523, "s2.acc": 94.8252, "s2.loss_bbox": 0.04205, "loss": 0.78753, "time": 0.60548}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.001, "memory": 6666, "data_time": 0.01288, "loss_rpn_cls": 0.08026, "loss_rpn_bbox": 0.04142, "s0.loss_cls": 0.33356, "s0.acc": 91.7041, "s0.loss_bbox": 0.1691, "s1.loss_cls": 0.14076, "s1.acc": 93.15332, "s1.loss_bbox": 0.11216, "s2.loss_cls": 0.05472, "s2.acc": 94.95117, "s2.loss_bbox": 0.04318, "loss": 0.97516, "time": 0.60197}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.001, "memory": 6666, "data_time": 0.01366, "loss_rpn_cls": 0.06377, "loss_rpn_bbox": 0.03772, "s0.loss_cls": 0.31409, "s0.acc": 91.56641, "s0.loss_bbox": 0.15997, "s1.loss_cls": 0.14663, "s1.acc": 92.06492, "s1.loss_bbox": 0.12417, "s2.loss_cls": 0.06298, "s2.acc": 93.4098, "s2.loss_bbox": 0.05388, "loss": 0.9632, "time": 0.60791}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.001, "memory": 6666, "data_time": 0.01354, "loss_rpn_cls": 0.06678, "loss_rpn_bbox": 0.03249, "s0.loss_cls": 0.305, "s0.acc": 92.31445, "s0.loss_bbox": 0.14405, "s1.loss_cls": 0.14031, "s1.acc": 92.76465, "s1.loss_bbox": 0.10915, "s2.loss_cls": 0.06079, "s2.acc": 93.86816, "s2.loss_bbox": 0.05075, "loss": 0.90932, "time": 0.60911}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.001, "memory": 6666, "data_time": 0.0133, "loss_rpn_cls": 0.0678, "loss_rpn_bbox": 0.03775, "s0.loss_cls": 0.26731, "s0.acc": 92.91504, "s0.loss_bbox": 0.13273, "s1.loss_cls": 0.12324, "s1.acc": 93.35059, "s1.loss_bbox": 0.10143, "s2.loss_cls": 0.05355, "s2.acc": 94.47168, "s2.loss_bbox": 0.04626, "loss": 0.83008, "time": 0.61113}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.001, "memory": 6666, "data_time": 0.01327, "loss_rpn_cls": 0.05461, "loss_rpn_bbox": 0.03251, "s0.loss_cls": 0.27482, "s0.acc": 92.84766, "s0.loss_bbox": 0.13218, "s1.loss_cls": 0.12702, "s1.acc": 93.46629, "s1.loss_bbox": 0.10111, "s2.loss_cls": 0.05404, "s2.acc": 94.56505, "s2.loss_bbox": 0.04408, "loss": 0.82037, "time": 0.60744}
{"mode": "val", "epoch": 1, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.08, "bbox_mAP_50": 0.157, "bbox_mAP_75": 0.075, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.004, "bbox_mAP_l": 0.101, "bbox_mAP_copypaste": "0.080 0.157 0.075 0.000 0.004 0.101"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.001, "memory": 6666, "data_time": 0.05693, "loss_rpn_cls": 0.05893, "loss_rpn_bbox": 0.0321, "s0.loss_cls": 0.27925, "s0.acc": 92.48438, "s0.loss_bbox": 0.14408, "s1.loss_cls": 0.13198, "s1.acc": 92.93428, "s1.loss_bbox": 0.11683, "s2.loss_cls": 0.05645, "s2.acc": 94.13175, "s2.loss_bbox": 0.05162, "loss": 0.87126, "time": 0.65572}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 6666, "data_time": 0.01219, "loss_rpn_cls": 0.05695, "loss_rpn_bbox": 0.03216, "s0.loss_cls": 0.29751, "s0.acc": 92.30176, "s0.loss_bbox": 0.14297, "s1.loss_cls": 0.13735, "s1.acc": 92.75684, "s1.loss_bbox": 0.1094, "s2.loss_cls": 0.05901, "s2.acc": 93.96973, "s2.loss_bbox": 0.0486, "loss": 0.88395, "time": 0.61353}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.001, "memory": 6666, "data_time": 0.01266, "loss_rpn_cls": 0.05491, "loss_rpn_bbox": 0.03594, "s0.loss_cls": 0.29422, "s0.acc": 92.11719, "s0.loss_bbox": 0.14287, "s1.loss_cls": 0.13711, "s1.acc": 92.53027, "s1.loss_bbox": 0.11242, "s2.loss_cls": 0.05971, "s2.acc": 93.55371, "s2.loss_bbox": 0.05162, "loss": 0.8888, "time": 0.611}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 6666, "data_time": 0.01265, "loss_rpn_cls": 0.05654, "loss_rpn_bbox": 0.03603, "s0.loss_cls": 0.26994, "s0.acc": 92.81152, "s0.loss_bbox": 0.13525, "s1.loss_cls": 0.12684, "s1.acc": 93.25488, "s1.loss_bbox": 0.10483, "s2.loss_cls": 0.05434, "s2.acc": 94.42676, "s2.loss_bbox": 0.04838, "loss": 0.83216, "time": 0.61099}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.001, "memory": 6666, "data_time": 0.0125, "loss_rpn_cls": 0.05861, "loss_rpn_bbox": 0.03481, "s0.loss_cls": 0.28037, "s0.acc": 92.39453, "s0.loss_bbox": 0.1403, "s1.loss_cls": 0.13154, "s1.acc": 92.81836, "s1.loss_bbox": 0.10844, "s2.loss_cls": 0.05732, "s2.acc": 93.83887, "s2.loss_bbox": 0.04901, "loss": 0.86039, "time": 0.61447}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 6666, "data_time": 0.01248, "loss_rpn_cls": 0.05787, "loss_rpn_bbox": 0.035, "s0.loss_cls": 0.29011, "s0.acc": 92.00195, "s0.loss_bbox": 0.14733, "s1.loss_cls": 0.13685, "s1.acc": 92.41815, "s1.loss_bbox": 0.11759, "s2.loss_cls": 0.06028, "s2.acc": 93.61761, "s2.loss_bbox": 0.05366, "loss": 0.8987, "time": 0.60876}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.001, "memory": 6666, "data_time": 0.01241, "loss_rpn_cls": 0.06229, "loss_rpn_bbox": 0.04197, "s0.loss_cls": 0.28703, "s0.acc": 91.96973, "s0.loss_bbox": 0.14519, "s1.loss_cls": 0.1355, "s1.acc": 92.40422, "s1.loss_bbox": 0.11089, "s2.loss_cls": 0.05966, "s2.acc": 93.60449, "s2.loss_bbox": 0.04914, "loss": 0.89166, "time": 0.61111}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.001, "memory": 6666, "data_time": 0.01246, "loss_rpn_cls": 0.07009, "loss_rpn_bbox": 0.04205, "s0.loss_cls": 0.30097, "s0.acc": 91.9248, "s0.loss_bbox": 0.15176, "s1.loss_cls": 0.13889, "s1.acc": 92.54785, "s1.loss_bbox": 0.11436, "s2.loss_cls": 0.05968, "s2.acc": 93.65625, "s2.loss_bbox": 0.04989, "loss": 0.9277, "time": 0.60892}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.001, "memory": 6666, "data_time": 0.0129, "loss_rpn_cls": 0.05319, "loss_rpn_bbox": 0.03063, "s0.loss_cls": 0.27853, "s0.acc": 92.35254, "s0.loss_bbox": 0.13457, "s1.loss_cls": 0.12955, "s1.acc": 92.91197, "s1.loss_bbox": 0.10537, "s2.loss_cls": 0.0562, "s2.acc": 94.04114, "s2.loss_bbox": 0.04831, "loss": 0.83634, "time": 0.61055}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.001, "memory": 6666, "data_time": 0.01249, "loss_rpn_cls": 0.06249, "loss_rpn_bbox": 0.03791, "s0.loss_cls": 0.28808, "s0.acc": 91.73145, "s0.loss_bbox": 0.15398, "s1.loss_cls": 0.13759, "s1.acc": 92.19336, "s1.loss_bbox": 0.12494, "s2.loss_cls": 0.05964, "s2.acc": 93.37838, "s2.loss_bbox": 0.057, "loss": 0.92164, "time": 0.60408}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.001, "memory": 6666, "data_time": 0.01248, "loss_rpn_cls": 0.04098, "loss_rpn_bbox": 0.02821, "s0.loss_cls": 0.25813, "s0.acc": 92.70117, "s0.loss_bbox": 0.12305, "s1.loss_cls": 0.12568, "s1.acc": 92.72214, "s1.loss_bbox": 0.10896, "s2.loss_cls": 0.05875, "s2.acc": 93.26659, "s2.loss_bbox": 0.05509, "loss": 0.79884, "time": 0.60784}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.001, "memory": 6666, "data_time": 0.01265, "loss_rpn_cls": 0.06793, "loss_rpn_bbox": 0.03924, "s0.loss_cls": 0.29476, "s0.acc": 91.49902, "s0.loss_bbox": 0.15525, "s1.loss_cls": 0.1404, "s1.acc": 91.9596, "s1.loss_bbox": 0.12201, "s2.loss_cls": 0.06085, "s2.acc": 93.16797, "s2.loss_bbox": 0.05409, "loss": 0.93452, "time": 0.61049}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.001, "memory": 6666, "data_time": 0.01277, "loss_rpn_cls": 0.05748, "loss_rpn_bbox": 0.0375, "s0.loss_cls": 0.28273, "s0.acc": 92.08398, "s0.loss_bbox": 0.14118, "s1.loss_cls": 0.13801, "s1.acc": 92.30044, "s1.loss_bbox": 0.11269, "s2.loss_cls": 0.06058, "s2.acc": 93.33623, "s2.loss_bbox": 0.0503, "loss": 0.88047, "time": 0.61066}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.001, "memory": 6666, "data_time": 0.01204, "loss_rpn_cls": 0.06285, "loss_rpn_bbox": 0.03571, "s0.loss_cls": 0.32164, "s0.acc": 91.06934, "s0.loss_bbox": 0.1598, "s1.loss_cls": 0.1519, "s1.acc": 91.61045, "s1.loss_bbox": 0.12608, "s2.loss_cls": 0.06611, "s2.acc": 92.91466, "s2.loss_bbox": 0.05686, "loss": 0.98097, "time": 0.60669}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.001, "memory": 6666, "data_time": 0.01269, "loss_rpn_cls": 0.0502, "loss_rpn_bbox": 0.03164, "s0.loss_cls": 0.26535, "s0.acc": 92.62207, "s0.loss_bbox": 0.13203, "s1.loss_cls": 0.12697, "s1.acc": 92.70583, "s1.loss_bbox": 0.10623, "s2.loss_cls": 0.0574, "s2.acc": 93.48217, "s2.loss_bbox": 0.05041, "loss": 0.82025, "time": 0.60974}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.001, "memory": 6666, "data_time": 0.01261, "loss_rpn_cls": 0.06279, "loss_rpn_bbox": 0.03384, "s0.loss_cls": 0.2775, "s0.acc": 92.26953, "s0.loss_bbox": 0.13803, "s1.loss_cls": 0.13503, "s1.acc": 92.37281, "s1.loss_bbox": 0.11339, "s2.loss_cls": 0.05926, "s2.acc": 93.36145, "s2.loss_bbox": 0.05345, "loss": 0.8733, "time": 0.61048}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.001, "memory": 6667, "data_time": 0.01254, "loss_rpn_cls": 0.05108, "loss_rpn_bbox": 0.03392, "s0.loss_cls": 0.27552, "s0.acc": 92.21484, "s0.loss_bbox": 0.13753, "s1.loss_cls": 0.13228, "s1.acc": 92.58219, "s1.loss_bbox": 0.11037, "s2.loss_cls": 0.05849, "s2.acc": 93.53453, "s2.loss_bbox": 0.05142, "loss": 0.8506, "time": 0.61043}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.001, "memory": 6667, "data_time": 0.01221, "loss_rpn_cls": 0.05219, "loss_rpn_bbox": 0.03524, "s0.loss_cls": 0.28512, "s0.acc": 92.29297, "s0.loss_bbox": 0.12867, "s1.loss_cls": 0.13389, "s1.acc": 92.59856, "s1.loss_bbox": 0.10621, "s2.loss_cls": 0.05811, "s2.acc": 93.52726, "s2.loss_bbox": 0.04972, "loss": 0.84916, "time": 0.60448}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.001, "memory": 6667, "data_time": 0.01205, "loss_rpn_cls": 0.04575, "loss_rpn_bbox": 0.03291, "s0.loss_cls": 0.29099, "s0.acc": 91.88379, "s0.loss_bbox": 0.14253, "s1.loss_cls": 0.14054, "s1.acc": 91.82606, "s1.loss_bbox": 0.12053, "s2.loss_cls": 0.06148, "s2.acc": 93.0545, "s2.loss_bbox": 0.05752, "loss": 0.89225, "time": 0.60313}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.001, "memory": 6667, "data_time": 0.01269, "loss_rpn_cls": 0.06039, "loss_rpn_bbox": 0.03306, "s0.loss_cls": 0.27151, "s0.acc": 92.58398, "s0.loss_bbox": 0.12913, "s1.loss_cls": 0.12915, "s1.acc": 92.63202, "s1.loss_bbox": 0.10703, "s2.loss_cls": 0.05738, "s2.acc": 93.49672, "s2.loss_bbox": 0.04979, "loss": 0.83744, "time": 0.60784}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.001, "memory": 6667, "data_time": 0.01252, "loss_rpn_cls": 0.05158, "loss_rpn_bbox": 0.03226, "s0.loss_cls": 0.28871, "s0.acc": 92.28613, "s0.loss_bbox": 0.13129, "s1.loss_cls": 0.13982, "s1.acc": 92.54163, "s1.loss_bbox": 0.10791, "s2.loss_cls": 0.06159, "s2.acc": 93.37874, "s2.loss_bbox": 0.05056, "loss": 0.86373, "time": 0.60495}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.001, "memory": 6667, "data_time": 0.01234, "loss_rpn_cls": 0.04694, "loss_rpn_bbox": 0.03039, "s0.loss_cls": 0.26127, "s0.acc": 92.76953, "s0.loss_bbox": 0.12489, "s1.loss_cls": 0.1262, "s1.acc": 92.98116, "s1.loss_bbox": 0.10426, "s2.loss_cls": 0.05721, "s2.acc": 93.49858, "s2.loss_bbox": 0.04966, "loss": 0.80082, "time": 0.60905}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.001, "memory": 6667, "data_time": 0.01237, "loss_rpn_cls": 0.04499, "loss_rpn_bbox": 0.02863, "s0.loss_cls": 0.25561, "s0.acc": 92.81738, "s0.loss_bbox": 0.11981, "s1.loss_cls": 0.1287, "s1.acc": 92.63437, "s1.loss_bbox": 0.10285, "s2.loss_cls": 0.05825, "s2.acc": 93.27543, "s2.loss_bbox": 0.04991, "loss": 0.78875, "time": 0.60774}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.001, "memory": 6667, "data_time": 0.01204, "loss_rpn_cls": 0.05153, "loss_rpn_bbox": 0.03278, "s0.loss_cls": 0.28348, "s0.acc": 92.13086, "s0.loss_bbox": 0.13424, "s1.loss_cls": 0.13514, "s1.acc": 92.49161, "s1.loss_bbox": 0.10852, "s2.loss_cls": 0.05987, "s2.acc": 93.52037, "s2.loss_bbox": 0.05456, "loss": 0.86011, "time": 0.60116}
{"mode": "val", "epoch": 2, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.128, "bbox_mAP_50": 0.233, "bbox_mAP_75": 0.128, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.015, "bbox_mAP_l": 0.157, "bbox_mAP_copypaste": "0.128 0.233 0.128 0.001 0.015 0.157"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.001, "memory": 6667, "data_time": 0.05632, "loss_rpn_cls": 0.04179, "loss_rpn_bbox": 0.02671, "s0.loss_cls": 0.27066, "s0.acc": 92.11328, "s0.loss_bbox": 0.13046, "s1.loss_cls": 0.13492, "s1.acc": 92.15465, "s1.loss_bbox": 0.11094, "s2.loss_cls": 0.06141, "s2.acc": 92.92529, "s2.loss_bbox": 0.05364, "loss": 0.83053, "time": 0.65156}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 6667, "data_time": 0.01223, "loss_rpn_cls": 0.04783, "loss_rpn_bbox": 0.03535, "s0.loss_cls": 0.27237, "s0.acc": 91.9502, "s0.loss_bbox": 0.1348, "s1.loss_cls": 0.1326, "s1.acc": 92.40046, "s1.loss_bbox": 0.11219, "s2.loss_cls": 0.06008, "s2.acc": 93.20591, "s2.loss_bbox": 0.05334, "loss": 0.84856, "time": 0.61045}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.001, "memory": 6667, "data_time": 0.01246, "loss_rpn_cls": 0.04445, "loss_rpn_bbox": 0.03558, "s0.loss_cls": 0.27757, "s0.acc": 91.93945, "s0.loss_bbox": 0.13773, "s1.loss_cls": 0.13207, "s1.acc": 92.28832, "s1.loss_bbox": 0.11526, "s2.loss_cls": 0.05974, "s2.acc": 93.07903, "s2.loss_bbox": 0.05583, "loss": 0.85824, "time": 0.61005}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 6667, "data_time": 0.01241, "loss_rpn_cls": 0.0511, "loss_rpn_bbox": 0.03405, "s0.loss_cls": 0.27309, "s0.acc": 92.14551, "s0.loss_bbox": 0.13869, "s1.loss_cls": 0.13421, "s1.acc": 92.15905, "s1.loss_bbox": 0.11935, "s2.loss_cls": 0.06086, "s2.acc": 93.08267, "s2.loss_bbox": 0.05735, "loss": 0.86871, "time": 0.60986}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.001, "memory": 6667, "data_time": 0.01195, "loss_rpn_cls": 0.04139, "loss_rpn_bbox": 0.02846, "s0.loss_cls": 0.25971, "s0.acc": 92.56055, "s0.loss_bbox": 0.12862, "s1.loss_cls": 0.12606, "s1.acc": 92.82354, "s1.loss_bbox": 0.11154, "s2.loss_cls": 0.05603, "s2.acc": 93.58435, "s2.loss_bbox": 0.05563, "loss": 0.80742, "time": 0.60905}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 6667, "data_time": 0.01218, "loss_rpn_cls": 0.05356, "loss_rpn_bbox": 0.03833, "s0.loss_cls": 0.29445, "s0.acc": 91.66699, "s0.loss_bbox": 0.14031, "s1.loss_cls": 0.14335, "s1.acc": 91.93369, "s1.loss_bbox": 0.11928, "s2.loss_cls": 0.06405, "s2.acc": 92.93946, "s2.loss_bbox": 0.06004, "loss": 0.91338, "time": 0.60942}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.001, "memory": 6667, "data_time": 0.0126, "loss_rpn_cls": 0.04663, "loss_rpn_bbox": 0.03187, "s0.loss_cls": 0.29339, "s0.acc": 91.28906, "s0.loss_bbox": 0.14542, "s1.loss_cls": 0.14385, "s1.acc": 91.44769, "s1.loss_bbox": 0.12623, "s2.loss_cls": 0.06675, "s2.acc": 92.07601, "s2.loss_bbox": 0.06168, "loss": 0.91582, "time": 0.60932}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.001, "memory": 6667, "data_time": 0.01244, "loss_rpn_cls": 0.04303, "loss_rpn_bbox": 0.02713, "s0.loss_cls": 0.24591, "s0.acc": 92.98438, "s0.loss_bbox": 0.11967, "s1.loss_cls": 0.12279, "s1.acc": 92.92635, "s1.loss_bbox": 0.10211, "s2.loss_cls": 0.05667, "s2.acc": 93.56529, "s2.loss_bbox": 0.05165, "loss": 0.76894, "time": 0.60731}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.001, "memory": 6667, "data_time": 0.01209, "loss_rpn_cls": 0.04778, "loss_rpn_bbox": 0.03527, "s0.loss_cls": 0.29821, "s0.acc": 91.34668, "s0.loss_bbox": 0.14677, "s1.loss_cls": 0.1442, "s1.acc": 91.44188, "s1.loss_bbox": 0.12477, "s2.loss_cls": 0.06666, "s2.acc": 91.99337, "s2.loss_bbox": 0.06094, "loss": 0.9246, "time": 0.60499}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.001, "memory": 6667, "data_time": 0.01264, "loss_rpn_cls": 0.05285, "loss_rpn_bbox": 0.03857, "s0.loss_cls": 0.25969, "s0.acc": 92.35254, "s0.loss_bbox": 0.13451, "s1.loss_cls": 0.12716, "s1.acc": 92.51764, "s1.loss_bbox": 0.11296, "s2.loss_cls": 0.05826, "s2.acc": 93.28613, "s2.loss_bbox": 0.05439, "loss": 0.83837, "time": 0.60737}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.001, "memory": 6667, "data_time": 0.01251, "loss_rpn_cls": 0.04643, "loss_rpn_bbox": 0.02952, "s0.loss_cls": 0.26417, "s0.acc": 92.37598, "s0.loss_bbox": 0.12967, "s1.loss_cls": 0.12852, "s1.acc": 92.51564, "s1.loss_bbox": 0.1101, "s2.loss_cls": 0.05785, "s2.acc": 93.18752, "s2.loss_bbox": 0.05774, "loss": 0.82401, "time": 0.60717}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.001, "memory": 6667, "data_time": 0.0125, "loss_rpn_cls": 0.04206, "loss_rpn_bbox": 0.03321, "s0.loss_cls": 0.26521, "s0.acc": 92.24805, "s0.loss_bbox": 0.13313, "s1.loss_cls": 0.12912, "s1.acc": 92.52021, "s1.loss_bbox": 0.11104, "s2.loss_cls": 0.05727, "s2.acc": 93.41352, "s2.loss_bbox": 0.05303, "loss": 0.82408, "time": 0.6097}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.001, "memory": 6667, "data_time": 0.01232, "loss_rpn_cls": 0.04415, "loss_rpn_bbox": 0.02594, "s0.loss_cls": 0.25216, "s0.acc": 92.97656, "s0.loss_bbox": 0.11467, "s1.loss_cls": 0.12277, "s1.acc": 92.96792, "s1.loss_bbox": 0.09972, "s2.loss_cls": 0.05525, "s2.acc": 93.54688, "s2.loss_bbox": 0.05094, "loss": 0.7656, "time": 0.60566}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.001, "memory": 6667, "data_time": 0.01214, "loss_rpn_cls": 0.04931, "loss_rpn_bbox": 0.03342, "s0.loss_cls": 0.30491, "s0.acc": 91.26562, "s0.loss_bbox": 0.13697, "s1.loss_cls": 0.14891, "s1.acc": 91.25393, "s1.loss_bbox": 0.1199, "s2.loss_cls": 0.06766, "s2.acc": 92.12784, "s2.loss_bbox": 0.05758, "loss": 0.91866, "time": 0.60283}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.001, "memory": 6667, "data_time": 0.01243, "loss_rpn_cls": 0.04343, "loss_rpn_bbox": 0.03317, "s0.loss_cls": 0.28586, "s0.acc": 91.5498, "s0.loss_bbox": 0.14828, "s1.loss_cls": 0.14273, "s1.acc": 91.49216, "s1.loss_bbox": 0.12311, "s2.loss_cls": 0.06402, "s2.acc": 92.56027, "s2.loss_bbox": 0.05904, "loss": 0.89963, "time": 0.60704}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.001, "memory": 6667, "data_time": 0.01302, "loss_rpn_cls": 0.05575, "loss_rpn_bbox": 0.03825, "s0.loss_cls": 0.31189, "s0.acc": 90.91699, "s0.loss_bbox": 0.15669, "s1.loss_cls": 0.14978, "s1.acc": 91.25653, "s1.loss_bbox": 0.13244, "s2.loss_cls": 0.06639, "s2.acc": 92.45598, "s2.loss_bbox": 0.06071, "loss": 0.9719, "time": 0.61042}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.001, "memory": 6667, "data_time": 0.01264, "loss_rpn_cls": 0.05119, "loss_rpn_bbox": 0.02946, "s0.loss_cls": 0.26041, "s0.acc": 92.32227, "s0.loss_bbox": 0.12121, "s1.loss_cls": 0.12807, "s1.acc": 92.26425, "s1.loss_bbox": 0.10338, "s2.loss_cls": 0.06105, "s2.acc": 92.70552, "s2.loss_bbox": 0.05319, "loss": 0.80796, "time": 0.61004}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.001, "memory": 6667, "data_time": 0.01246, "loss_rpn_cls": 0.04577, "loss_rpn_bbox": 0.02988, "s0.loss_cls": 0.28658, "s0.acc": 91.86328, "s0.loss_bbox": 0.13411, "s1.loss_cls": 0.14267, "s1.acc": 91.87958, "s1.loss_bbox": 0.11371, "s2.loss_cls": 0.06535, "s2.acc": 92.62286, "s2.loss_bbox": 0.05751, "loss": 0.87558, "time": 0.60802}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.001, "memory": 6667, "data_time": 0.01318, "loss_rpn_cls": 0.044, "loss_rpn_bbox": 0.03191, "s0.loss_cls": 0.25879, "s0.acc": 92.50586, "s0.loss_bbox": 0.12816, "s1.loss_cls": 0.12484, "s1.acc": 92.71583, "s1.loss_bbox": 0.10756, "s2.loss_cls": 0.05768, "s2.acc": 93.17483, "s2.loss_bbox": 0.05403, "loss": 0.80697, "time": 0.61698}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.001, "memory": 6667, "data_time": 0.01265, "loss_rpn_cls": 0.0483, "loss_rpn_bbox": 0.03391, "s0.loss_cls": 0.27203, "s0.acc": 92.03516, "s0.loss_bbox": 0.13081, "s1.loss_cls": 0.13568, "s1.acc": 92.03829, "s1.loss_bbox": 0.11329, "s2.loss_cls": 0.06294, "s2.acc": 92.98582, "s2.loss_bbox": 0.0562, "loss": 0.85316, "time": 0.61202}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.001, "memory": 6667, "data_time": 0.0131, "loss_rpn_cls": 0.03947, "loss_rpn_bbox": 0.02705, "s0.loss_cls": 0.23477, "s0.acc": 93.00293, "s0.loss_bbox": 0.11781, "s1.loss_cls": 0.11704, "s1.acc": 92.9277, "s1.loss_bbox": 0.10586, "s2.loss_cls": 0.05536, "s2.acc": 93.25759, "s2.loss_bbox": 0.05279, "loss": 0.75015, "time": 0.6131}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.001, "memory": 6667, "data_time": 0.01295, "loss_rpn_cls": 0.03886, "loss_rpn_bbox": 0.02616, "s0.loss_cls": 0.24049, "s0.acc": 93.11035, "s0.loss_bbox": 0.11485, "s1.loss_cls": 0.11625, "s1.acc": 93.19991, "s1.loss_bbox": 0.09689, "s2.loss_cls": 0.05428, "s2.acc": 93.57584, "s2.loss_bbox": 0.04969, "loss": 0.73746, "time": 0.60998}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.001, "memory": 6667, "data_time": 0.01308, "loss_rpn_cls": 0.04451, "loss_rpn_bbox": 0.03358, "s0.loss_cls": 0.25279, "s0.acc": 92.7373, "s0.loss_bbox": 0.12039, "s1.loss_cls": 0.12356, "s1.acc": 92.56449, "s1.loss_bbox": 0.10505, "s2.loss_cls": 0.05761, "s2.acc": 93.14374, "s2.loss_bbox": 0.05145, "loss": 0.78893, "time": 0.60531}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.001, "memory": 6667, "data_time": 0.01305, "loss_rpn_cls": 0.05171, "loss_rpn_bbox": 0.035, "s0.loss_cls": 0.28252, "s0.acc": 91.89258, "s0.loss_bbox": 0.1384, "s1.loss_cls": 0.13657, "s1.acc": 92.22074, "s1.loss_bbox": 0.11659, "s2.loss_cls": 0.06206, "s2.acc": 92.94481, "s2.loss_bbox": 0.05869, "loss": 0.88154, "time": 0.61002}
{"mode": "val", "epoch": 3, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.222, "bbox_mAP_50": 0.361, "bbox_mAP_75": 0.234, "bbox_mAP_s": 0.002, "bbox_mAP_m": 0.046, "bbox_mAP_l": 0.269, "bbox_mAP_copypaste": "0.222 0.361 0.234 0.002 0.046 0.269"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.001, "memory": 6667, "data_time": 0.0566, "loss_rpn_cls": 0.03512, "loss_rpn_bbox": 0.02826, "s0.loss_cls": 0.2565, "s0.acc": 92.32422, "s0.loss_bbox": 0.12682, "s1.loss_cls": 0.12753, "s1.acc": 92.16384, "s1.loss_bbox": 0.11309, "s2.loss_cls": 0.06084, "s2.acc": 92.72348, "s2.loss_bbox": 0.05853, "loss": 0.80668, "time": 0.65308}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 6667, "data_time": 0.01234, "loss_rpn_cls": 0.04085, "loss_rpn_bbox": 0.03446, "s0.loss_cls": 0.25929, "s0.acc": 92.18945, "s0.loss_bbox": 0.12732, "s1.loss_cls": 0.13008, "s1.acc": 92.14234, "s1.loss_bbox": 0.11128, "s2.loss_cls": 0.06142, "s2.acc": 92.56071, "s2.loss_bbox": 0.05585, "loss": 0.82055, "time": 0.6081}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.001, "memory": 6667, "data_time": 0.01204, "loss_rpn_cls": 0.05033, "loss_rpn_bbox": 0.03624, "s0.loss_cls": 0.25646, "s0.acc": 92.52832, "s0.loss_bbox": 0.12657, "s1.loss_cls": 0.12217, "s1.acc": 92.85179, "s1.loss_bbox": 0.10693, "s2.loss_cls": 0.05687, "s2.acc": 93.46615, "s2.loss_bbox": 0.0528, "loss": 0.80836, "time": 0.60584}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 6667, "data_time": 0.01267, "loss_rpn_cls": 0.03801, "loss_rpn_bbox": 0.03264, "s0.loss_cls": 0.27602, "s0.acc": 91.84863, "s0.loss_bbox": 0.13743, "s1.loss_cls": 0.13428, "s1.acc": 91.96434, "s1.loss_bbox": 0.11669, "s2.loss_cls": 0.06215, "s2.acc": 92.5884, "s2.loss_bbox": 0.05657, "loss": 0.85379, "time": 0.61333}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.001, "memory": 6667, "data_time": 0.01246, "loss_rpn_cls": 0.03938, "loss_rpn_bbox": 0.02851, "s0.loss_cls": 0.26679, "s0.acc": 92.36426, "s0.loss_bbox": 0.12285, "s1.loss_cls": 0.12835, "s1.acc": 92.61251, "s1.loss_bbox": 0.10698, "s2.loss_cls": 0.06014, "s2.acc": 93.0634, "s2.loss_bbox": 0.05512, "loss": 0.80813, "time": 0.61075}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 6667, "data_time": 0.01219, "loss_rpn_cls": 0.03658, "loss_rpn_bbox": 0.03045, "s0.loss_cls": 0.25367, "s0.acc": 92.36719, "s0.loss_bbox": 0.12521, "s1.loss_cls": 0.12488, "s1.acc": 92.32839, "s1.loss_bbox": 0.10605, "s2.loss_cls": 0.05867, "s2.acc": 92.94395, "s2.loss_bbox": 0.05654, "loss": 0.79205, "time": 0.59995}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.001, "memory": 6667, "data_time": 0.01214, "loss_rpn_cls": 0.04351, "loss_rpn_bbox": 0.02796, "s0.loss_cls": 0.25155, "s0.acc": 92.51855, "s0.loss_bbox": 0.1322, "s1.loss_cls": 0.12135, "s1.acc": 92.76238, "s1.loss_bbox": 0.10988, "s2.loss_cls": 0.05503, "s2.acc": 93.36195, "s2.loss_bbox": 0.05414, "loss": 0.79562, "time": 0.5989}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.001, "memory": 6667, "data_time": 0.01203, "loss_rpn_cls": 0.04808, "loss_rpn_bbox": 0.03378, "s0.loss_cls": 0.29061, "s0.acc": 91.11426, "s0.loss_bbox": 0.15311, "s1.loss_cls": 0.14297, "s1.acc": 91.10159, "s1.loss_bbox": 0.12893, "s2.loss_cls": 0.06736, "s2.acc": 91.79639, "s2.loss_bbox": 0.0646, "loss": 0.92943, "time": 0.59887}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.001, "memory": 6667, "data_time": 0.01188, "loss_rpn_cls": 0.04275, "loss_rpn_bbox": 0.02963, "s0.loss_cls": 0.25169, "s0.acc": 92.58203, "s0.loss_bbox": 0.12381, "s1.loss_cls": 0.12705, "s1.acc": 92.50872, "s1.loss_bbox": 0.1098, "s2.loss_cls": 0.05956, "s2.acc": 92.88947, "s2.loss_bbox": 0.05582, "loss": 0.80011, "time": 0.59757}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.001, "memory": 6667, "data_time": 0.01243, "loss_rpn_cls": 0.03576, "loss_rpn_bbox": 0.02622, "s0.loss_cls": 0.24459, "s0.acc": 92.48828, "s0.loss_bbox": 0.1274, "s1.loss_cls": 0.12262, "s1.acc": 92.54121, "s1.loss_bbox": 0.11587, "s2.loss_cls": 0.05864, "s2.acc": 92.73986, "s2.loss_bbox": 0.06176, "loss": 0.79286, "time": 0.60677}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.001, "memory": 6667, "data_time": 0.01256, "loss_rpn_cls": 0.03419, "loss_rpn_bbox": 0.02692, "s0.loss_cls": 0.23846, "s0.acc": 92.92676, "s0.loss_bbox": 0.1132, "s1.loss_cls": 0.11902, "s1.acc": 92.81904, "s1.loss_bbox": 0.10035, "s2.loss_cls": 0.0558, "s2.acc": 93.25083, "s2.loss_bbox": 0.05063, "loss": 0.73856, "time": 0.60742}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.001, "memory": 6667, "data_time": 0.01225, "loss_rpn_cls": 0.0358, "loss_rpn_bbox": 0.02901, "s0.loss_cls": 0.23162, "s0.acc": 92.83691, "s0.loss_bbox": 0.12265, "s1.loss_cls": 0.11456, "s1.acc": 92.98786, "s1.loss_bbox": 0.10398, "s2.loss_cls": 0.05457, "s2.acc": 93.3242, "s2.loss_bbox": 0.05502, "loss": 0.74722, "time": 0.60667}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.001, "memory": 6667, "data_time": 0.01254, "loss_rpn_cls": 0.05139, "loss_rpn_bbox": 0.03188, "s0.loss_cls": 0.25722, "s0.acc": 92.47949, "s0.loss_bbox": 0.12546, "s1.loss_cls": 0.12553, "s1.acc": 92.68221, "s1.loss_bbox": 0.10891, "s2.loss_cls": 0.05825, "s2.acc": 93.31047, "s2.loss_bbox": 0.05502, "loss": 0.81366, "time": 0.61019}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.001, "memory": 6667, "data_time": 0.01269, "loss_rpn_cls": 0.04481, "loss_rpn_bbox": 0.03207, "s0.loss_cls": 0.27179, "s0.acc": 91.97852, "s0.loss_bbox": 0.13847, "s1.loss_cls": 0.12828, "s1.acc": 92.4122, "s1.loss_bbox": 0.11399, "s2.loss_cls": 0.05712, "s2.acc": 93.36464, "s2.loss_bbox": 0.05639, "loss": 0.84293, "time": 0.60761}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.001, "memory": 6667, "data_time": 0.01282, "loss_rpn_cls": 0.03716, "loss_rpn_bbox": 0.02724, "s0.loss_cls": 0.25359, "s0.acc": 92.53125, "s0.loss_bbox": 0.12128, "s1.loss_cls": 0.12287, "s1.acc": 92.80526, "s1.loss_bbox": 0.10322, "s2.loss_cls": 0.05738, "s2.acc": 93.06172, "s2.loss_bbox": 0.0535, "loss": 0.77625, "time": 0.60891}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.001, "memory": 6667, "data_time": 0.01233, "loss_rpn_cls": 0.04316, "loss_rpn_bbox": 0.03727, "s0.loss_cls": 0.29124, "s0.acc": 91.39844, "s0.loss_bbox": 0.14007, "s1.loss_cls": 0.1407, "s1.acc": 91.59542, "s1.loss_bbox": 0.12055, "s2.loss_cls": 0.06676, "s2.acc": 92.21771, "s2.loss_bbox": 0.06095, "loss": 0.90071, "time": 0.60871}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.001, "memory": 6667, "data_time": 0.01315, "loss_rpn_cls": 0.03207, "loss_rpn_bbox": 0.02723, "s0.loss_cls": 0.2494, "s0.acc": 92.63574, "s0.loss_bbox": 0.11718, "s1.loss_cls": 0.12324, "s1.acc": 92.71116, "s1.loss_bbox": 0.10317, "s2.loss_cls": 0.05719, "s2.acc": 93.18815, "s2.loss_bbox": 0.0533, "loss": 0.76279, "time": 0.60548}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.001, "memory": 6667, "data_time": 0.01262, "loss_rpn_cls": 0.04929, "loss_rpn_bbox": 0.03138, "s0.loss_cls": 0.26732, "s0.acc": 92.06934, "s0.loss_bbox": 0.13322, "s1.loss_cls": 0.12943, "s1.acc": 92.24366, "s1.loss_bbox": 0.1167, "s2.loss_cls": 0.06192, "s2.acc": 92.47405, "s2.loss_bbox": 0.06244, "loss": 0.8517, "time": 0.60445}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.001, "memory": 6667, "data_time": 0.01291, "loss_rpn_cls": 0.04551, "loss_rpn_bbox": 0.03479, "s0.loss_cls": 0.26941, "s0.acc": 91.95898, "s0.loss_bbox": 0.1353, "s1.loss_cls": 0.12828, "s1.acc": 92.44017, "s1.loss_bbox": 0.11612, "s2.loss_cls": 0.06001, "s2.acc": 92.99069, "s2.loss_bbox": 0.06044, "loss": 0.84985, "time": 0.60791}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.001, "memory": 6667, "data_time": 0.01277, "loss_rpn_cls": 0.04091, "loss_rpn_bbox": 0.03099, "s0.loss_cls": 0.24382, "s0.acc": 92.95703, "s0.loss_bbox": 0.11802, "s1.loss_cls": 0.12222, "s1.acc": 92.99429, "s1.loss_bbox": 0.1069, "s2.loss_cls": 0.05698, "s2.acc": 93.48018, "s2.loss_bbox": 0.05498, "loss": 0.77483, "time": 0.6067}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.001, "memory": 6667, "data_time": 0.01245, "loss_rpn_cls": 0.03412, "loss_rpn_bbox": 0.02795, "s0.loss_cls": 0.22527, "s0.acc": 93.12988, "s0.loss_bbox": 0.10682, "s1.loss_cls": 0.11312, "s1.acc": 92.89194, "s1.loss_bbox": 0.09875, "s2.loss_cls": 0.05423, "s2.acc": 93.15961, "s2.loss_bbox": 0.05577, "loss": 0.71604, "time": 0.60671}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.001, "memory": 6667, "data_time": 0.01248, "loss_rpn_cls": 0.03387, "loss_rpn_bbox": 0.02438, "s0.loss_cls": 0.25229, "s0.acc": 92.50098, "s0.loss_bbox": 0.11891, "s1.loss_cls": 0.1252, "s1.acc": 92.53499, "s1.loss_bbox": 0.10517, "s2.loss_cls": 0.05892, "s2.acc": 93.07098, "s2.loss_bbox": 0.05546, "loss": 0.77421, "time": 0.61511}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 0.001, "memory": 6667, "data_time": 0.01257, "loss_rpn_cls": 0.03553, "loss_rpn_bbox": 0.03168, "s0.loss_cls": 0.22667, "s0.acc": 93.21094, "s0.loss_bbox": 0.11125, "s1.loss_cls": 0.11158, "s1.acc": 93.43598, "s1.loss_bbox": 0.09488, "s2.loss_cls": 0.05238, "s2.acc": 93.95116, "s2.loss_bbox": 0.04914, "loss": 0.71311, "time": 0.60523}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.001, "memory": 6667, "data_time": 0.01291, "loss_rpn_cls": 0.03762, "loss_rpn_bbox": 0.0284, "s0.loss_cls": 0.24655, "s0.acc": 92.55762, "s0.loss_bbox": 0.1224, "s1.loss_cls": 0.12297, "s1.acc": 92.47656, "s1.loss_bbox": 0.10616, "s2.loss_cls": 0.05793, "s2.acc": 92.97725, "s2.loss_bbox": 0.05519, "loss": 0.77721, "time": 0.60841}
{"mode": "val", "epoch": 4, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.252, "bbox_mAP_50": 0.413, "bbox_mAP_75": 0.263, "bbox_mAP_s": 0.007, "bbox_mAP_m": 0.068, "bbox_mAP_l": 0.298, "bbox_mAP_copypaste": "0.252 0.413 0.263 0.007 0.068 0.298"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.001, "memory": 6667, "data_time": 0.05661, "loss_rpn_cls": 0.03745, "loss_rpn_bbox": 0.02973, "s0.loss_cls": 0.25926, "s0.acc": 92.1123, "s0.loss_bbox": 0.13101, "s1.loss_cls": 0.12662, "s1.acc": 92.26482, "s1.loss_bbox": 0.11684, "s2.loss_cls": 0.0587, "s2.acc": 92.83305, "s2.loss_bbox": 0.06073, "loss": 0.82033, "time": 0.65963}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 6667, "data_time": 0.01218, "loss_rpn_cls": 0.0389, "loss_rpn_bbox": 0.02913, "s0.loss_cls": 0.22424, "s0.acc": 92.90332, "s0.loss_bbox": 0.11626, "s1.loss_cls": 0.11226, "s1.acc": 92.98463, "s1.loss_bbox": 0.10325, "s2.loss_cls": 0.05455, "s2.acc": 93.28444, "s2.loss_bbox": 0.05524, "loss": 0.73384, "time": 0.60548}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.001, "memory": 6667, "data_time": 0.01218, "loss_rpn_cls": 0.03815, "loss_rpn_bbox": 0.03207, "s0.loss_cls": 0.2917, "s0.acc": 91.06055, "s0.loss_bbox": 0.14419, "s1.loss_cls": 0.14247, "s1.acc": 91.22459, "s1.loss_bbox": 0.12619, "s2.loss_cls": 0.06625, "s2.acc": 92.14158, "s2.loss_bbox": 0.0638, "loss": 0.90481, "time": 0.60746}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 6667, "data_time": 0.01215, "loss_rpn_cls": 0.03189, "loss_rpn_bbox": 0.02529, "s0.loss_cls": 0.23267, "s0.acc": 92.77344, "s0.loss_bbox": 0.12217, "s1.loss_cls": 0.11428, "s1.acc": 92.82356, "s1.loss_bbox": 0.10784, "s2.loss_cls": 0.05577, "s2.acc": 93.19947, "s2.loss_bbox": 0.05677, "loss": 0.74668, "time": 0.60465}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.001, "memory": 6667, "data_time": 0.01209, "loss_rpn_cls": 0.03611, "loss_rpn_bbox": 0.03119, "s0.loss_cls": 0.24889, "s0.acc": 92.37109, "s0.loss_bbox": 0.12604, "s1.loss_cls": 0.12116, "s1.acc": 92.5943, "s1.loss_bbox": 0.11313, "s2.loss_cls": 0.05726, "s2.acc": 92.9677, "s2.loss_bbox": 0.05999, "loss": 0.79378, "time": 0.60322}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 6667, "data_time": 0.01282, "loss_rpn_cls": 0.03512, "loss_rpn_bbox": 0.02468, "s0.loss_cls": 0.24345, "s0.acc": 92.62793, "s0.loss_bbox": 0.11718, "s1.loss_cls": 0.1223, "s1.acc": 92.43418, "s1.loss_bbox": 0.10491, "s2.loss_cls": 0.05859, "s2.acc": 92.71908, "s2.loss_bbox": 0.05594, "loss": 0.76217, "time": 0.60945}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.001, "memory": 6667, "data_time": 0.01308, "loss_rpn_cls": 0.03332, "loss_rpn_bbox": 0.02731, "s0.loss_cls": 0.26002, "s0.acc": 92.1748, "s0.loss_bbox": 0.13092, "s1.loss_cls": 0.12539, "s1.acc": 92.53662, "s1.loss_bbox": 0.11311, "s2.loss_cls": 0.05846, "s2.acc": 93.08871, "s2.loss_bbox": 0.05843, "loss": 0.80696, "time": 0.60639}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.001, "memory": 6667, "data_time": 0.0122, "loss_rpn_cls": 0.03056, "loss_rpn_bbox": 0.02951, "s0.loss_cls": 0.23207, "s0.acc": 92.79785, "s0.loss_bbox": 0.12345, "s1.loss_cls": 0.11403, "s1.acc": 92.87512, "s1.loss_bbox": 0.10892, "s2.loss_cls": 0.05411, "s2.acc": 93.32834, "s2.loss_bbox": 0.05655, "loss": 0.74921, "time": 0.60329}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.001, "memory": 6667, "data_time": 0.0129, "loss_rpn_cls": 0.03928, "loss_rpn_bbox": 0.03529, "s0.loss_cls": 0.26452, "s0.acc": 91.76562, "s0.loss_bbox": 0.13666, "s1.loss_cls": 0.12961, "s1.acc": 91.95719, "s1.loss_bbox": 0.11784, "s2.loss_cls": 0.06155, "s2.acc": 92.35391, "s2.loss_bbox": 0.06185, "loss": 0.84662, "time": 0.60798}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.001, "memory": 6667, "data_time": 0.01265, "loss_rpn_cls": 0.0343, "loss_rpn_bbox": 0.03129, "s0.loss_cls": 0.24215, "s0.acc": 92.65137, "s0.loss_bbox": 0.12517, "s1.loss_cls": 0.12148, "s1.acc": 92.5172, "s1.loss_bbox": 0.10902, "s2.loss_cls": 0.05894, "s2.acc": 92.91319, "s2.loss_bbox": 0.05597, "loss": 0.77833, "time": 0.60941}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.001, "memory": 6667, "data_time": 0.01278, "loss_rpn_cls": 0.04543, "loss_rpn_bbox": 0.03929, "s0.loss_cls": 0.27812, "s0.acc": 91.8623, "s0.loss_bbox": 0.13516, "s1.loss_cls": 0.13479, "s1.acc": 91.97283, "s1.loss_bbox": 0.11757, "s2.loss_cls": 0.06331, "s2.acc": 92.64545, "s2.loss_bbox": 0.06169, "loss": 0.87537, "time": 0.60688}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.001, "memory": 6667, "data_time": 0.01267, "loss_rpn_cls": 0.03877, "loss_rpn_bbox": 0.03097, "s0.loss_cls": 0.24386, "s0.acc": 92.55566, "s0.loss_bbox": 0.12514, "s1.loss_cls": 0.11951, "s1.acc": 92.66994, "s1.loss_bbox": 0.10843, "s2.loss_cls": 0.0572, "s2.acc": 93.03651, "s2.loss_bbox": 0.05805, "loss": 0.78193, "time": 0.60799}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.001, "memory": 6667, "data_time": 0.01261, "loss_rpn_cls": 0.03471, "loss_rpn_bbox": 0.0328, "s0.loss_cls": 0.24197, "s0.acc": 92.59863, "s0.loss_bbox": 0.12056, "s1.loss_cls": 0.11887, "s1.acc": 92.62054, "s1.loss_bbox": 0.10785, "s2.loss_cls": 0.05741, "s2.acc": 92.99641, "s2.loss_bbox": 0.0561, "loss": 0.77028, "time": 0.61158}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.001, "memory": 6667, "data_time": 0.01335, "loss_rpn_cls": 0.03334, "loss_rpn_bbox": 0.03089, "s0.loss_cls": 0.2429, "s0.acc": 92.44922, "s0.loss_bbox": 0.1241, "s1.loss_cls": 0.11825, "s1.acc": 92.72899, "s1.loss_bbox": 0.11304, "s2.loss_cls": 0.05513, "s2.acc": 93.33442, "s2.loss_bbox": 0.05707, "loss": 0.77472, "time": 0.60964}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.001, "memory": 6667, "data_time": 0.01264, "loss_rpn_cls": 0.03059, "loss_rpn_bbox": 0.027, "s0.loss_cls": 0.21526, "s0.acc": 93.32715, "s0.loss_bbox": 0.11116, "s1.loss_cls": 0.10571, "s1.acc": 93.56576, "s1.loss_bbox": 0.09779, "s2.loss_cls": 0.05007, "s2.acc": 93.70582, "s2.loss_bbox": 0.05104, "loss": 0.68862, "time": 0.60941}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.001, "memory": 6667, "data_time": 0.01265, "loss_rpn_cls": 0.03374, "loss_rpn_bbox": 0.02528, "s0.loss_cls": 0.22962, "s0.acc": 93.25586, "s0.loss_bbox": 0.1067, "s1.loss_cls": 0.11342, "s1.acc": 93.13076, "s1.loss_bbox": 0.09736, "s2.loss_cls": 0.05342, "s2.acc": 93.51547, "s2.loss_bbox": 0.05184, "loss": 0.71137, "time": 0.60704}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.001, "memory": 6667, "data_time": 0.01302, "loss_rpn_cls": 0.03598, "loss_rpn_bbox": 0.02924, "s0.loss_cls": 0.22239, "s0.acc": 93.19238, "s0.loss_bbox": 0.10733, "s1.loss_cls": 0.1083, "s1.acc": 93.32501, "s1.loss_bbox": 0.09943, "s2.loss_cls": 0.05461, "s2.acc": 93.19805, "s2.loss_bbox": 0.05402, "loss": 0.71131, "time": 0.60694}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.001, "memory": 6667, "data_time": 0.01313, "loss_rpn_cls": 0.035, "loss_rpn_bbox": 0.02741, "s0.loss_cls": 0.23289, "s0.acc": 92.97852, "s0.loss_bbox": 0.11104, "s1.loss_cls": 0.11531, "s1.acc": 92.95411, "s1.loss_bbox": 0.09983, "s2.loss_cls": 0.05548, "s2.acc": 93.29992, "s2.loss_bbox": 0.05428, "loss": 0.73125, "time": 0.61032}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.001, "memory": 6667, "data_time": 0.01275, "loss_rpn_cls": 0.03202, "loss_rpn_bbox": 0.02637, "s0.loss_cls": 0.23907, "s0.acc": 92.88281, "s0.loss_bbox": 0.10984, "s1.loss_cls": 0.11828, "s1.acc": 92.82639, "s1.loss_bbox": 0.09642, "s2.loss_cls": 0.05694, "s2.acc": 93.03287, "s2.loss_bbox": 0.05249, "loss": 0.73143, "time": 0.60854}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.001, "memory": 6667, "data_time": 0.01262, "loss_rpn_cls": 0.03364, "loss_rpn_bbox": 0.02608, "s0.loss_cls": 0.25381, "s0.acc": 92.34375, "s0.loss_bbox": 0.12513, "s1.loss_cls": 0.12306, "s1.acc": 92.43053, "s1.loss_bbox": 0.1094, "s2.loss_cls": 0.05777, "s2.acc": 92.95879, "s2.loss_bbox": 0.05928, "loss": 0.78818, "time": 0.60908}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.001, "memory": 6667, "data_time": 0.01272, "loss_rpn_cls": 0.03997, "loss_rpn_bbox": 0.03452, "s0.loss_cls": 0.25427, "s0.acc": 92.21875, "s0.loss_bbox": 0.12498, "s1.loss_cls": 0.12565, "s1.acc": 92.22076, "s1.loss_bbox": 0.11233, "s2.loss_cls": 0.05941, "s2.acc": 92.71583, "s2.loss_bbox": 0.05984, "loss": 0.81097, "time": 0.6031}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.001, "memory": 6667, "data_time": 0.01286, "loss_rpn_cls": 0.03115, "loss_rpn_bbox": 0.02671, "s0.loss_cls": 0.23118, "s0.acc": 92.87988, "s0.loss_bbox": 0.1177, "s1.loss_cls": 0.11554, "s1.acc": 92.81691, "s1.loss_bbox": 0.105, "s2.loss_cls": 0.05576, "s2.acc": 93.21149, "s2.loss_bbox": 0.05519, "loss": 0.73824, "time": 0.60805}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 0.001, "memory": 6667, "data_time": 0.01284, "loss_rpn_cls": 0.02851, "loss_rpn_bbox": 0.02475, "s0.loss_cls": 0.21171, "s0.acc": 93.51172, "s0.loss_bbox": 0.1025, "s1.loss_cls": 0.10599, "s1.acc": 93.44049, "s1.loss_bbox": 0.09494, "s2.loss_cls": 0.05285, "s2.acc": 93.45531, "s2.loss_bbox": 0.05431, "loss": 0.67556, "time": 0.6059}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.001, "memory": 6667, "data_time": 0.01279, "loss_rpn_cls": 0.03006, "loss_rpn_bbox": 0.02445, "s0.loss_cls": 0.222, "s0.acc": 93.11035, "s0.loss_bbox": 0.10619, "s1.loss_cls": 0.1097, "s1.acc": 93.03924, "s1.loss_bbox": 0.09601, "s2.loss_cls": 0.05444, "s2.acc": 93.14693, "s2.loss_bbox": 0.05519, "loss": 0.69803, "time": 0.60602}
{"mode": "val", "epoch": 5, "iter": 4883, "lr": 0.001, "bbox_mAP": 0.321, "bbox_mAP_50": 0.503, "bbox_mAP_75": 0.347, "bbox_mAP_s": 0.007, "bbox_mAP_m": 0.093, "bbox_mAP_l": 0.378, "bbox_mAP_copypaste": "0.321 0.503 0.347 0.007 0.093 0.378"}
